{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_models/orgUser.ts","webpack:///./src/app/_services/CheckPasswordDirective.service.ts","webpack:///./src/app/_services/admin.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/customer.service.ts","webpack:///./src/app/_services/project.service.ts","webpack:///./src/app/activity/activity.component.css","webpack:///./src/app/activity/activity.component.html","webpack:///./src/app/activity/activity.component.ts","webpack:///./src/app/activity/all-activities/all-activities.component.css","webpack:///./src/app/activity/all-activities/all-activities.component.html","webpack:///./src/app/activity/all-activities/all-activities.component.ts","webpack:///./src/app/activity/createActivity/createActivity.component.css","webpack:///./src/app/activity/createActivity/createActivity.component.html","webpack:///./src/app/activity/createActivity/createActivity.component.ts","webpack:///./src/app/activity/createnextstep/createnextstep.component.css","webpack:///./src/app/activity/createnextstep/createnextstep.component.html","webpack:///./src/app/activity/createnextstep/createnextstep.component.ts","webpack:///./src/app/activity/todos/todos.component.css","webpack:///./src/app/activity/todos/todos.component.html","webpack:///./src/app/activity/todos/todos.component.ts","webpack:///./src/app/admin/change-password/change-password.component.css","webpack:///./src/app/admin/change-password/change-password.component.html","webpack:///./src/app/admin/change-password/change-password.component.ts","webpack:///./src/app/admin/organization-management/organization-management.component.css","webpack:///./src/app/admin/organization-management/organization-management.component.html","webpack:///./src/app/admin/organization-management/organization-management.component.ts","webpack:///./src/app/admin/register/register.component.css","webpack:///./src/app/admin/register/register.component.html","webpack:///./src/app/admin/register/register.component.ts","webpack:///./src/app/admin/role-management/role-management.component.css","webpack:///./src/app/admin/role-management/role-management.component.html","webpack:///./src/app/admin/role-management/role-management.component.ts","webpack:///./src/app/admin/roles-modal/roles-modal.component.css","webpack:///./src/app/admin/roles-modal/roles-modal.component.html","webpack:///./src/app/admin/roles-modal/roles-modal.component.ts","webpack:///./src/app/admin/user-management/user-management.component.css","webpack:///./src/app/admin/user-management/user-management.component.html","webpack:///./src/app/admin/user-management/user-management.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer-list/customer-list.component.css","webpack:///./src/app/customer-list/customer-list.component.html","webpack:///./src/app/customer-list/customer-list.component.ts","webpack:///./src/app/customer/customer.component.css","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/chooseorg/chooseorg.component.css","webpack:///./src/app/login/chooseorg/chooseorg.component.html","webpack:///./src/app/login/chooseorg/chooseorg.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/project/graph/graph.component.css","webpack:///./src/app/project/graph/graph.component.html","webpack:///./src/app/project/graph/graph.component.ts","webpack:///./src/app/project/project-dashboard/project-dashboard.component.css","webpack:///./src/app/project/project-dashboard/project-dashboard.component.html","webpack:///./src/app/project/project-dashboard/project-dashboard.component.ts","webpack:///./src/app/project/project/project.component.css","webpack:///./src/app/project/project/project.component.html","webpack:///./src/app/project/project/project.component.ts","webpack:///./src/app/project/projects/projects.component.css","webpack:///./src/app/project/projects/projects.component.html","webpack:///./src/app/project/projects/projects.component.ts","webpack:///./src/app/project/task-List-Modal/task-List-Modal.component.css","webpack:///./src/app/project/task-List-Modal/task-List-Modal.component.html","webpack:///./src/app/project/task-List-Modal/task-List-Modal.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappingsgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;ACpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;ACZA;AAAA;AAAA;IAAA;IAIA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACJ0C;AACD;AAC2E;AAGrH,SAAS,gBAAgB;IACvB,OAAO,UAAC,OAAwB;QAC9B,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,OAAO,IAAI,OAAO,YAAY,wDAAS,EAAE;YAC3C,IAAI,KAAK,GAAG,OAAoB,CAAC;YACjC,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;gBAC9D,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;aAClF;SACF;QACD,IAAI,OAAO,EAAE;YACX,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE;SACrC;IACH,CAAC;AACH,CAAC;AAUD;IAIE;QACE,IAAI,CAAC,KAAK,GAAG,gBAAgB,EAAE,CAAC;IAClC,CAAC;sCANU,6BAA6B;IAQxC,gDAAQ,GAAR,UAAS,CAAkB;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;;IAVU,6BAA6B;QATzC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;QAGD,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,+BAA6B,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;SACjG,CAAC;;OACW,6BAA6B,CAazC;IAAD,oCAAC;CAAA;AAbyC;;;;;;;;;;;;;;;;;;;;;AC9BC;AACoB;AAE1B;AACQ;AAK7C;IAKE,sBAAoB,IAAgB,EAAU,WAAwB;QAAlD,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAH9D,aAAQ,GAAG,qCAAqC,CAAC;IAGiB,CAAC;IAE3E,+BAAQ,GAAR,UAAS,IAAS;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,gBAAgB,EAAE,IAAI,CAAC,CAAC,IAAI,CAChE,0DAAG,CAAC,UAAC,QAAa;YAChB,IAAM,IAAI,GAAG,QAAQ,CAAC;QACxB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,oCAAa,GAAb,UAAc,KAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,qBAAqB,EAAE,KAAK,CAAC,CAAC;IACrE,CAAC;IAED,qCAAc,GAAd,UAAe,MAAW;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,sBAAsB,EAAE,MAAM,CAAC,CAAC;IACvE,CAAC;IAED,+BAAQ,GAAR,UAAS,EAAO;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,gBAAgB,EAAG,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,qCAAc,GAAd,UAAe,EAAO;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,GAAG,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,mCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,CAAC;IACtD,CAAC;IAED,2CAAoB,GAApB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC,CAAC;IAC1D,CAAC;IAED,uCAAgB,GAAhB,UAAiB,IAAS;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;IAC5E,CAAC;IAED,kCAAW,GAAX;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,CAAC;IACpD,CAAC;IAED,wCAAiB,GAAjB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,CAAC;IAC9D,CAAC;IAED,sCAAe,GAAf,UAAgB,IAAS,EAAE,KAAS;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,qBAAqB,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC;IAC7E,CAAC;IAED,4CAA4C;IAC5C,0CAA0C;IAC1C,IAAI;IAEJ,+BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC,CAAC;IAC5D,CAAC;IAED,uCAAgB,GAAhB,UAAiB,IAAS;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,WAAW,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,uCAAgB,GAAhB,UAAiB,IAAS;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,YAAY,GAAG,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;IAC3E,CAAC;IAED,uCAAgB,GAAhB,UAAiB,IAAS;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;IAC5E,CAAC;IAED,iCAAU,GAAV,UAAW,QAAa;QACtB,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACvC,CAAC;IAED,iCAAU,GAAV,UAAW,EAAO;QAChB,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,YAAY,GAAG,EAAE,CAAC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC;IAED,4CAAqB,GAArB,UAAsB,IAAS;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,2BAA2B,GAAG,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;IAClF,CAAC;IAED,iDAA0B,GAA1B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,gCAAgC,CAAC,CAAC;IACzE,CAAC;IAED,kCAAW,GAAX;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,kCAAkC,CAAC,CAAC;IAC3E,CAAC;IAED,+CAAwB,GAAxB,UAAyB,MAAc;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,uBAAuB,GAAG,MAAM,CAAC,CAAC;IACzE,CAAC;IAED,0CAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,oBAAoB,CAAC,CAAC,IAAI,EAAE,CAAC;IACpE,CAAC;IAGD,0CAAmB,GAAnB,UAAoB,KAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,oBAAoB,EAAE,KAAK,CAAC,CAAC;IACrE,CAAC;IAED,yCAAkB,GAAlB,UAAmB,EAAO,EAAE,IAAS;QACnC,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,GAAG,qBAAqB,GAAG,EAAE,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;IACtD,CAAC;IAED,yCAAkB,GAAlB,UAAmB,EAAO;QACxB,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,qBAAqB,GAAG,EAAE,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC;IAED,qCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,kBAAkB,CAAC,CAAC;IAC3D,CAAC;IAED,qCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,2BAA2B,CAAC,CAAC;IACpE,CAAC;IAED,6CAAsB,GAAtB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,4BAA4B,CAAC,CAAC;IACrE,CAAC;IAED,oCAAa,GAAb,UAAc,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,kBAAkB,GAAG,EAAE,CAAC,CAAC;IAChE,CAAC;IAtIU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAM0B,+DAAU,EAAuB,yDAAW;OAL3D,YAAY,CAuIxB;IAAD,mBAAC;CAAA;AAvIwB;;;;;;;;;;;;;;;;;;;;;ACTkB;AACoB;AAEb;AAGE;AAMpD;IAMA,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJlC,YAAO,GAAG,qCAAqC,CAAC;QAChD,cAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;IAGG,CAAC;IAEzC,2BAAK,GAAL,UAAM,KAAU;QAAhB,iBAUG;QATD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,KAAK,CAAC;aACnD,IAAI,CAAC,0DAAG,CAAC,UAAC,OAAY;YACrB,IAAM,IAAI,GAAG,OAAO,CAAC;YACrB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3D,IAAI,IAAI,EAAE;gBACR,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC7C;QACA,CAAC,CAAC,CACF,CAAC;IACF,CAAC;IAED,gCAAU,GAAV,UAAW,KAAU;QAArB,iBAUC;QATC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,YAAY,EAAE,KAAK,CAAC;aACtD,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAa;YACtB,IAAM,IAAI,GAAG,QAAQ,CAAC;YACtB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3D,IAAI,IAAI,EAAE;gBACR,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3C;QACH,CAAC,CAAC,CACD,CAAC;IACN,CAAC;IAED,iCAAW,GAAX,UAAY,KAAU,EAAE,EAAU;QAAlC,iBAUC;QATC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,oBAAoB,GAAG,EAAE,EAAE,KAAK,CAAC;aACrE,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAa;YACtB,IAAM,IAAI,GAAG,QAAQ,CAAC;YACtB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3D,IAAI,IAAI,EAAE;gBACR,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3C;QACH,CAAC,CAAC,CACD,CAAC;IACJ,CAAC;IAED,8BAAQ,GAAR;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,+BAAS,GAAT,UAAU,YAAY;QACpB,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAqB,CAAC;QAC1D,YAAY,CAAC,OAAO,CAAC,iBAAO;YAC1B,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACjC,OAAO,GAAG,IAAI,CAAC;gBACf,OAAO;aACN;QACH,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,+BAAS,GAAT,UAAU,KAAU;QAApB,iBAUC;QATC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,0BAA0B,GAAG,KAAK,CAAC;aACtE,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAa;YACtB,IAAM,IAAI,GAAG,QAAQ,CAAC;YACtB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3D,IAAI,IAAI,EAAE;gBACR,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3C;QACH,CAAC,CAAC,CACD,CAAC;IACJ,CAAC;IAED,mCAAa,GAAb;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,CAAC;IACvD,CAAC;IAED,qCAAe,GAAf;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,CAAC;IACtD,CAAC;IAED,0CAAoB,GAApB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC,CAAC;IAC3D,CAAC;IAnFU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAOwB,+DAAU;OANvB,WAAW,CAqFvB;IAAD,kBAAC;CAAA;AArFuB;;;;;;;;;;;;;;;;;;;ACZmB;AACgC;AAK3E;IAIA,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH1B,aAAQ,GAAG,8CAA8C,CAAC;QAC1D,aAAQ,GAAG,2CAA2C,CAAC;IAEzB,CAAC;IAExC,kBAAkB;IACjB,mDAAyB,GAAzB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,wBAAwB,CAAC,CAAC;IACjE,CAAC;IAED,wDAA8B,GAA9B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,CAAC;IACzD,CAAC;IAED,gEAAsC,GAAtC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC,CAAC;IAC1D,CAAC;IAED,yCAAe,GAAf,UAAgB,EAAU;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,2BAA2B,GAAG,EAAE,CAAC,CAAC;IACzE,CAAC;IAED,8CAAoB,GAApB,UAAqB,EAAU;QAE7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,wCAAc,GAAd,UAAe,WAAgB;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,YAAY,EAAE,WAAW,CAAC,CAAC;IACnE,CAAC;IAED,oDAA0B,GAA1B,UAA2B,uBAA4B;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,kBAAkB,EAAE,uBAAuB,CAAC,CAAC;IACrF,CAAC;IAED,mBAAmB;IACnB,wCAAc,GAAd,UAAe,QAAa;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED,eAAe;IACf,uDAA6B,GAA7B,UAA8B,EAAU;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,GAAG,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,6CAAmB,GAAnB,UAAoB,OAAY;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,gBAAgB,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;IAED,wCAAc,GAAd,UAAe,QAAa;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED,2CAAiB,GAAjB,UAAkB,OAAY;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,oBAAoB,EAAE,OAAO,CAAC,CAAC;IACtE,CAAC;IAED,2CAAiB,GAAjB,UAAkB,OAAY;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,gBAAgB,EAAE,OAAO,CAAC,CAAC;IAClE,CAAC;IAED,kDAAwB,GAAxB,UAAyB,OAAY;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,2BAA2B,EAAE,OAAO,CAAC,CAAC;IAC7E,CAAC;IAED,mDAAyB,GAAzB,UAA0B,QAAgB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,8BAA8B,GAAG,QAAQ,CAAC,CAAC;IAClF,CAAC;IAED,qDAA2B,GAA3B,UAA4B,QAAgB;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,aAAa,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;IAC5E,CAAC;IAED,0DAAgC,GAAhC,UAAiC,QAAgB;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,aAAa,GAAG,QAAQ,GAAG,OAAO,CAAC,CAAC;IAC3E,CAAC;IAED,yDAA+B,GAA/B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,CAAC;IAC9D,CAAC;IAED,8DAAoC,GAApC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,oBAAoB,CAAC,CAAC;IAC7D,CAAC;IAED,2CAAiB,GAAjB,UAAkB,WAAgB;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,aAAa,EAAE,WAAW,CAAC,CAAC;IACpE,CAAC;IAED,2CAAiB,GAAjB,UAAkB,WAAgB;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,cAAc,GAAG,WAAW,CAAC,CAAC;IACxE,CAAC;IAED,sCAAY,GAAZ,UAAa,QAAa;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED,yCAAe,GAAf,UAAgB,UAAkB;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,EAAE,UAAU,CAAC,CAAC;IACtE,CAAC;IAED,2CAAiB,GAAjB,UAAkB,UAAkB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,mBAAmB,EAAE,UAAU,CAAC,CAAC;IACxE,CAAC;IAED,iDAAuB,GAAvB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC,CAAC;IAC5D,CAAC;IAED,yCAAe,GAAf;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,CAAC;IACzD,CAAC;IAED,gDAAsB,GAAtB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,CAAC;IACxD,CAAC;IAED,mCAAS,GAAT,UAAU,UAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,YAAY,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;IAED,qCAAW,GAAX,UAAY,UAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,cAAc,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;IAC1E,CAAC;IA5HU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKwB,+DAAU;OAJvB,eAAe,CA6H3B;IAAD,sBAAC;CAAA;AA7H2B;;;;;;;;;;;;;;;;;;;ACNe;AACO;AAKlD;IAIE,wBAAmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF3B,YAAO,GAAG,qCAAqC,CAAC;IAEjB,CAAC;IAGxC,sCAAa,GAAb,UAAc,OAAY;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,EAAE,OAAO,CAAC,CAAC;IACjE,CAAC;IAED,2CAAkB,GAAlB,UAAmB,EAAO;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,kDAAyB,GAAzB,UAA0B,EAAO;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,0BAA0B,GAAG,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,0CAAiB,GAAjB,UAAkB,EAAO,EAAE,KAAU;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;IAC1E,CAAC;IAED,yCAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,yBAAyB,CAAC,CAAC;IACjE,CAAC;IAED,uCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,UAAU,CAAC,CAAC;IACtE,CAAC;IAED,qCAAY,GAAZ,UAAa,SAAc,EAAE,MAAW;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,GAAG,SAAS,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;IAClF,CAAC;IAED,yCAAgB,GAAhB,UAAiB,EAAO;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,gBAAgB,GAAG,EAAE,CAAC;IAC5D,CAAC;IAED,sCAAa,GAAb,UAAc,EAAO;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,GAAG,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,2CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC,CAAC;IACzD,CAAC;IAED,oDAA2B,GAA3B,UAA4B,MAAW;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,EAAE,MAAM,CAAC,CAAC;IACnE,CAAC;IAED,oDAA2B,GAA3B,UAA4B,EAAO;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,wBAAwB,EAAE,EAAE,CAAC,CAAC;IACpE,CAAC;IAED,0CAAiB,GAAjB,UAAkB,MAAW;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,EAAE,MAAM,CAAC,CAAC;IACpE,CAAC;IAED,yCAAgB,GAAhB,UAAiB,KAAU;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,eAAe;IACf,uCAAc,GAAd,UAAe,MAAW;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,gBAAgB,EAAE,MAAM,CAAC,CAAC;IAChE,CAAC;IAED,6CAAoB,GAApB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC,CAAC;IAC3D,CAAC;IAtEU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKyB,+DAAU;OAJxB,cAAc,CAwE1B;IAAD,qBAAC;CAAA;AAxE0B;;;;;;;;;;;;ACN3B,yBAAyB,wBAAwB,wBAAwB,0BAA0B,KAAK,YAAY,uBAAuB,KAAK,iBAAiB,wBAAwB,0BAA0B,KAAK,wBAAwB,wBAAwB,2BAA2B,KAAK,wBAAwB,2BAA2B,KAAK,wBAAwB,0BAA0B,2BAA2B,gEAAgE,sBAAsB,KAAK,+BAA+B,2BAA2B,sBAAsB,KAAK,sBAAsB,0BAA0B,KAAK,oBAAoB,oBAAoB,KAAK,yBAAyB,qBAAqB,oBAAoB,KAAK,sBAAsB,yBAAyB,gCAAgC,6BAA6B,0BAA0B,yBAAyB,8BAA8B,KAAK,YAAY,2BAA2B,KAAK,uBAAuB,wBAAwB,yBAAyB,oBAAoB,KAAK,2BAA2B,4BAA4B,qBAAqB,oBAAoB,2BAA2B,+BAA+B,2BAA2B,4BAA4B,oBAAoB,2CAA2C,KAAK,+BAA+B,4BAA4B,qBAAqB,qBAAqB,2BAA2B,+BAA+B,2BAA2B,4BAA4B,oBAAoB,2CAA2C,KAAK,+CAA+C,m4G;;;;;;;;;;;ACAnrD,22CAA22C,88BAA88B,eAAe,qPAAqP,wBAAwB,iPAAiP,2CAA2C,8aAA8a,eAAe,+CAA+C,cAAc,+CAA+C,iBAAiB,qaAAqa,qBAAqB,69BAA69B,eAAe,6PAA6P,wBAAwB,6PAA6P,mDAAmD,2oBAA2oB,uBAAuB,+CAA+C,sBAAsB,+CAA+C,yBAAyB,qaAAqa,6BAA6B,oiBAAoiB,2BAA2B,k9BAAk9B,iBAAiB,6MAA6M,gOAAgO,iBAAiB,gNAAgN,ydAAyd,gBAAgB,0BAA0B,4CAA4C,yBAAyB,kBAAkB,0YAA0Y,wBAAwB,oDAAoD,oDAAoD,yBAAyB,0BAA0B,mJAAmJ,mKAAmK,eAAe,6LAA6L,eAAe,yKAAyK,oKAAoK,WAAW,8LAA8L,WAAW,yKAAyK,+EAA+E,sBAAsB,yHAAyH,8BAA8B,2sB;;;;;;;;;;;;;;;;;;;;;;ACAz1W;AACqD;AAC5F;AAE2B;AACA;AACR;AAOxD;IAWE,2BACS,YAAyB,EACxB,gBAAiC,EACjC,eAA+B,EAC/B,OAAe;QAJzB,iBAKI;QAJK,iBAAY,GAAZ,YAAY,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,oBAAe,GAAf,eAAe,CAAgB;QAC/B,YAAO,GAAP,OAAO,CAAQ;QAbzB,qBAAgB,GAAa,CAAC,MAAM,CAAC,CAAC;QACtC,eAAU,GAAG,IAAI,oEAAkB,EAAY,CAAC;QAChD,WAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,CAAC,MAAM,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC;QACxE,aAAQ,GAAQ,EAAE,CAAC;QACnB,iBAAY,GAAY,KAAK,CAAC;QA8CvB,aAAQ,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAC5D,CAAC,CAAC;IAtCC,CAAC;IAEJ,oCAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,2CAAe,GAAf;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,8CAAkB,GAAlB;QAAA,iBAIC;QAHC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC1C,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAgB,GAAhB;QAAA,iBAOC;QANC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,gBAAgB;aAClB,2BAA2B,CAAC,IAAI,CAAC,EAAE,CAAC;aACpC,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAiB,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iDAAqB,GAArB;QAAA,iBAOC;QANC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,gBAAgB;aAClB,gCAAgC,CAAC,IAAI,CAAC,EAAE,CAAC;aACzC,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAiB,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAMD,yCAAa,GAAb,UAAc,UAAkB;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EACpD;YACE,IAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,EAC3C;gBACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACzC;SACF;IACH,CAAC;IAED,0CAAc,GAAd,UAAe,UAAU;QACvB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,iBAAiB,GAAG,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7E,CAAC;IAEK,2CAAe,GAArB,UAAsB,UAAe;;;;;wBACnC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;wBAC9D,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;;;;;KACzB;IAEK,6CAAiB,GAAvB,UAAwB,UAAe;;;;;wBACrC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;wBAChE,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;;;;;KACzB;IAED,qCAAS,GAAT;QACE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC5B,CAAC;IAED,sCAAU,GAAV;QACE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7B,CAAC;IAEO,iCAAK,GAAb,UAAc,EAAU;QACtB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACzD,CAAC;IApFmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;mDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;wDAAC;IATtC,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;+EAauB,kEAAW;YACN,0EAAe;YAChB,8DAAc;YACtB,sDAAM;OAfd,iBAAiB,CA6F7B;IAAD,wBAAC;CAAA;AA7F6B;;;;;;;;;;;;ACb9B,yBAAyB,wBAAwB,wBAAwB,0BAA0B,KAAK,YAAY,uBAAuB,KAAK,iBAAiB,wBAAwB,0BAA0B,KAAK,wBAAwB,wBAAwB,2BAA2B,KAAK,wBAAwB,2BAA2B,KAAK,wBAAwB,0BAA0B,2BAA2B,gEAAgE,sBAAsB,KAAK,+BAA+B,2BAA2B,sBAAsB,KAAK,sBAAsB,0BAA0B,KAAK,oBAAoB,oBAAoB,KAAK,yBAAyB,qBAAqB,oBAAoB,KAAK,sBAAsB,yBAAyB,gCAAgC,6BAA6B,0BAA0B,yBAAyB,8BAA8B,KAAK,YAAY,2BAA2B,KAAK,uBAAuB,wBAAwB,yBAAyB,oBAAoB,KAAK,2BAA2B,4BAA4B,qBAAqB,oBAAoB,2BAA2B,+BAA+B,2BAA2B,4BAA4B,oBAAoB,2CAA2C,KAAK,+BAA+B,4BAA4B,qBAAqB,qBAAqB,2BAA2B,+BAA+B,2BAA2B,4BAA4B,oBAAoB,2CAA2C,KAAK,+CAA+C,27G;;;;;;;;;;;ACAnrD,+8EAA+8E,ghCAAghC,eAAe,6PAA6P,wBAAwB,2PAA2P,2CAA2C,gcAAgc,eAAe,iDAAiD,cAAc,iDAAiD,iBAAiB,ubAAub,qBAAqB,qgCAAqgC,eAAe,qQAAqQ,wBAAwB,2PAA2P,mDAAmD,4rBAA4rB,uBAAuB,iDAAiD,sBAAsB,iDAAiD,yBAAyB,ubAAub,6BAA6B,skBAAskB,2BAA2B,smCAAsmC,iBAAiB,qNAAqN,gLAAgL,iBAAiB,wNAAwN,6gBAA6gB,gBAAgB,8BAA8B,4CAA4C,6BAA6B,kBAAkB,icAAic,wBAAwB,4DAA4D,oDAAoD,6BAA6B,0BAA0B,mKAAmK,+KAA+K,eAAe,iNAAiN,eAAe,6LAA6L,gLAAgL,WAAW,kNAAkN,WAAW,6LAA6L,uFAAuF,sBAAsB,yIAAyI,8BAA8B,iwBAAiwB,kOAAkO,iBAAiB,8MAA8M,qLAAqL,iBAAiB,oNAAoN,qRAAqR,8NAA8N,gBAAgB,8BAA8B,4CAA4C,6BAA6B,kBAAkB,+FAA+F,sBAAsB,8K;;;;;;;;;;;;;;;;;;;;;;ACAz5e;AAC8C;AAC5F;AAE8B;AACH;AACL;AAO3D;IAaE,gCACS,YAAyB,EACxB,gBAAiC,EACjC,eAA+B,EAC/B,OAAe;QAJzB,iBAKI;QAJK,iBAAY,GAAZ,YAAY,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,oBAAe,GAAf,eAAe,CAAgB;QAC/B,YAAO,GAAP,OAAO,CAAQ;QAfzB,qBAAgB,GAAa,CAAC,MAAM,CAAC,CAAC;QACtC,eAAU,GAAG,IAAI,oEAAkB,EAAY,CAAC;QAChD,WAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,CAAC,MAAM,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC;QACxE,aAAQ,GAAQ,EAAE,CAAC;QACnB,iBAAY,GAAY,KAAK,CAAC;QAC9B,gBAAW,GAAY,KAAK,CAAC;QAmEtB,aAAQ,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAC5D,CAAC,CAAC;IA1DC,CAAC;IAEJ,yCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gDAAe,GAAf;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;IAC9B,CAAC;IAED,iDAAgB,GAAhB;QAAA,iBAoBC;QAnBC,IAAG,IAAI,CAAC,GAAG,IAAI,gBAAgB,EAC/B;YACA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,gBAAgB;iBAClB,+BAA+B,EAAE;iBACjC,SAAS,CAAC,aAAG;gBACZ,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAiB,CAAC;YAC3C,CAAC,CAAC,CAAC;SACJ;aACI,IAAG,IAAI,CAAC,GAAG,IAAI,QAAQ,EAC5B;YACE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,gBAAgB;iBACpB,eAAe,EAAE;iBACjB,SAAS,CAAC,aAAG;gBACZ,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAiB,CAAC;YAC3C,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;IAED,sDAAqB,GAArB;QAAA,iBAOC;QANC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,gBAAgB;aAClB,oCAAoC,EAAE;aACtC,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAiB,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAe,GAAf;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,gBAAgB;aAClB,sBAAsB,EAAE;aACxB,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAiB,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAMD,8CAAa,GAAb,UAAc,UAAkB;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EACpD;YACE,IAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,EAC3C;gBACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACzC;SACF;IACH,CAAC;IAED,+CAAc,GAAd,UAAe,UAAU;QACvB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,iBAAiB,GAAG,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7E,CAAC;IAEK,gDAAe,GAArB,UAAsB,UAAe;;;;;wBACnC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;wBAC9D,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;;;;;KACzB;IAEK,kDAAiB,GAAvB,UAAwB,UAAe;;;;;wBACrC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;wBAChE,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;;;;;KACzB;IAEK,6CAAY,GAAlB,UAAmB,UAAe;;;;;wBAChC,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;wBACtD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;wBACxD,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;;;;;KACzB;IAEK,gDAAe,GAArB,UAAsB,UAAe;;;;;wBACnC,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;wBACtD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;wBAC1D,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,eAAe,EAAE,CAAC;;;;;KACxB;IAED,0CAAS,GAAT;QACE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC5B,CAAC;IAED,2CAAU,GAAV;QACE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7B,CAAC;IAEO,sCAAK,GAAb,UAAc,EAAU;QACtB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACzD,CAAC;IAtHmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;wDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;6DAAC;IAXtC,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,uIAA8C;;SAE/C,CAAC;+EAeuB,kEAAW;YACN,0EAAe;YAChB,8DAAc;YACtB,sDAAM;OAjBd,sBAAsB,CAiIlC;IAAD,6BAAC;CAAA;AAjIkC;;;;;;;;;;;;ACbnC,yBAAyB,2BAA2B,uBAAuB,KAAK,+CAA+C,2Z;;;;;;;;;;;ACA/H,quCAAquC,gBAAgB,2PAA2P,gBAAgB,6eAA6e,MAAM,8NAA8N,gjBAAgjB,aAAa,2hCAA2hC,+BAA+B,0eAA0e,2BAA2B,61DAA61D,MAAM,8QAA8Q,yqBAAyqB,qBAAqB,2zCAA2zC,+BAA+B,8lBAA8lB,2BAA2B,g6BAAg6B,mW;;;;;;;;;;;;;;;;;;;;;ACAh5T;AACtC;AACU;AAGJ;AACF;AAO7D;IAkBE,iCAAmB,YAAyB,EAAU,eAA+B,EAAU,gBAAiC,EAAU,OAAe,EAAU,IAA8B;QAA9K,iBAAY,GAAZ,YAAY,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAA0B;QAjBjM,UAAK,GAAQ,EAAE,CAAC;QAEhB,UAAK,GAAa,CAAC,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;QAC5D,yBAAoB,GAAQ,EAAE,CAAC;QAC/B,yBAAoB,GAAQ,EAAE,CAAC;QAC/B,oBAAe,GAAY,KAAK,CAAC;QACjC,aAAQ,GAAQ,EAAE,CAAC;QACnB,eAAU,GAAY,KAAK,CAAC;QAEnB,eAAU,GAAW,CAAC,CAAC;QAEhC,aAAQ,GAAG,UAAC,CAAO;YACjB,IAAM,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;YACvB,mDAAmD;YACnD,OAAO,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;QAChC,CAAC;IAEoM,CAAC;IAEtM,0CAAQ,GAAR;QACE,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;IAED,iDAAe,GAAf;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEK,4DAA0B,GAAhC;;;;;;6BACK,KAAI,CAAC,UAAU,IAAI,CAAC,GAApB,wBAAoB;wBAErB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;;6BAElB,KAAI,CAAC,UAAU,GAAG,CAAC,GAAnB,wBAAmB;wBAEzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;4BACxE,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACvB,CAAC,CAAC,CAAC;wBACH,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;;;;;;KAE5D;IAED,iDAAe,GAAf;QAAA,iBAEC;QADC,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,SAAS,GAAG,IAAI,EAArB,CAAqB,CAAC,CAAC;IAClG,CAAC;IAED,6CAAW,GAAX;QAAA,iBAEC;QADC,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,oBAAoB,GAAG,IAAI,EAAhC,CAAgC,CAAC,CAAC;IACxG,CAAC;IAED,mEAAiC,GAAjC,UAAkC,UAAU;QAA5C,iBAEC;QADC,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,oBAAoB,GAAG,IAAI,EAAhC,CAAgC,CAAC,CAAC;IACtH,CAAC;IAED,6CAAW,GAAX,UAAY,KAAU;QACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAG,IAAI,CAAC,UAAU,EAClB;YACE,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;SACrC;QACD,IAAG,IAAI,CAAC,eAAe,EACvB;YACE,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;SACrE;aACI,IAAI,CAAC,IAAI,CAAC,eAAe,EAC9B;YACE,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;SACzD;IACH,CAAC;IAED,gDAAc,GAAd;QAEE,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;IAC/C,CAAC;IAED,yCAAO,GAAP,UAAQ,IAAI;QAAZ,iBAOC;QANC,IAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACvC,KAAK,EAAE,MAAM;SACd,CAAC,CAAC;QACH,iBAAiB,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,cAAI;YAC3C,KAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAe,GAAf,UAAgB,MAAM;QAAtB,iBAOC;QANC,IAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACvC,KAAK,EAAE,MAAM;SACd,CAAC,CAAC;QACH,iBAAiB,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,cAAI;YAC3C,KAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,uCAAK,GAAb,UAAc,EAAU;QACtB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACzD,CAAC;IAxFQ;QAAR,2DAAK,EAAE;;+DAAwB;IAVrB,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,uIAA8C;;SAE/C,CAAC;+EAmBiC,yEAAW,EAA2B,8DAAc,EAA4B,0EAAe,EAAmB,sDAAM,EAAgB,4EAAwB;OAlBtL,uBAAuB,CAmGnC;IAAD,8BAAC;CAAA;AAnGmC;;;;;;;;;;;;ACbpC,+DAA+D,+K;;;;;;;;;;;ACA/D,03BAA03B,MAAM,8LAA8L,ieAAie,aAAa,w2BAAw2B,+BAA+B,mZAAmZ,2BAA2B,mW;;;;;;;;;;;;;;;;;;;;;ACAlwF;AAC1B;AACN;AACF;AACZ;AAOjD;IAeE,iCAAoB,YAAyB,EAAU,gBAAiC,EAAU,IAA8B,EAAU,eAA+B;QAArJ,iBAAY,GAAZ,YAAY,CAAa;QAAU,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAU,SAAI,GAAJ,IAAI,CAA0B;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAdzK,UAAK,GAAQ,EAAE,CAAC;QAChB,UAAK,GAAa,CAAC,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;QAC5D,yBAAoB,GAAQ,EAAE,CAAC;QAC/B,yBAAoB,GAAQ,EAAE,CAAC;QAC/B,aAAQ,GAAQ,EAAE,CAAC;QAInB,aAAQ,GAAG,UAAC,CAAO;YACjB,IAAM,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;YACvB,mDAAmD;YACnD,OAAO,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;QAChC,CAAC;IAE4K,CAAC;IAE9K,0CAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,iDAAe,GAAf;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,6CAAW,GAAX;QAAA,iBAKC;QAJC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC1C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;YAClC,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAW,GAAX;QAAA,iBAEC;QADC,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,oBAAoB,GAAG,IAAI,EAAhC,CAAgC,CAAC,CAAC;IACxG,CAAC;IAED,mDAAiB,GAAjB;QAAA,iBAEC;QADC,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,oBAAoB,GAAG,IAAI,EAAhC,CAAgC,CAAC,CAAC;IAC3H,CAAC;IAED,mEAAiC,GAAjC,UAAkC,UAAU;QAA5C,iBAEC;QADC,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,oBAAoB,GAAG,IAAI,EAAhC,CAAgC,CAAC,CAAC;IACtH,CAAC;IAED,yCAAO,GAAP,UAAQ,IAAI;QAAZ,iBAOC;QANC,IAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACvC,KAAK,EAAE,MAAM;SACd,CAAC,CAAC;QACH,iBAAiB,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,cAAI;YAC3C,KAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAW,GAAX,UAAY,KAAK;QACf,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;IAE1D,CAAC;IA3DU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,uIAA8C;;SAE/C,CAAC;+EAgBkC,yEAAW,EAA4B,iFAAe,EAAgB,4EAAwB,EAA2B,8DAAc;OAf9J,uBAAuB,CA4DnC;IAAD,8BAAC;CAAA;AA5DmC;;;;;;;;;;;;ACXpC,+DAA+D,uJ;;;;;;;;;;;ACA/D,4D;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,4GAAqC;;SAEtC,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,+DAA+D,2K;;;;;;;;;;;ACA/D,wvDAAwvD,UAAU,qN;;;;;;;;;;;;;;;;;;ACAhtD;AAEa;AAO/D;IAIE,iCAAoB,aAA2B;QAA3B,kBAAa,GAAb,aAAa,CAAc;QAH/C,UAAK,GAAQ,EAAE,CAAC;IAGmC,CAAC;IAEpD,0CAAQ,GAAR;IACA,CAAC;IAED,gDAAc,GAAd;QAAA,iBAgBC;QAdC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG,IAAK,CAAC,EAC/D,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAG,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,SAAS,EAChC;gBACE,KAAI,CAAC,QAAQ,GAAG,4BAA4B;gBAC5C,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aACjB;iBAED;gBACE,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;aAC7B;QACD,CAAC,CAAC,CAAC;IACT,CAAC;IAzBU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,uIAA+C;;SAEhD,CAAC;+EAKmC,2EAAY;OAJpC,uBAAuB,CA2BnC;IAAD,8BAAC;CAAA;AA3BmC;;;;;;;;;;;;ACTpC,4DAA4D,uCAAuC,mBAAmB,oCAAoC,uCAAuC,iBAAiB,qDAAqD,uqB;;;;;;;;;;;ACAvQ,ivBAAivB,mBAAmB,+BAA+B,wBAAwB,+BAA+B,0BAA0B,+BAA+B,6BAA6B,muFAAmuF,iBAAiB,6BAA6B,mBAAmB,yxEAAyxE,iBAAiB,6BAA6B,mBAAmB,6X;;;;;;;;;;;;;;;;;;;ACA5/L;AACa;AACF;AAO7D;IAKE,yCAAmB,YAAyB,EAAU,aAA2B;QAA9D,iBAAY,GAAZ,YAAY,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAc;QAHjF,UAAK,GAAQ,EAAE,CAAC;QAChB,gBAAW,GAAQ,EAAE,CAAC;IAE+D,CAAC;IAEtF,kDAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,0DAAgB,GAAhB;QAAA,iBAGC;QAFC,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE;aACrC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,aAAa,GAAG,IAAI,EAAzB,CAAyB,CAAC,CAAC;IAClD,CAAC;IAEK,+DAAqB,GAA3B;;;;;wBACE,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1D,cAAM,cAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,EAAtC,CAAsC,CAC7C,CAAC;wBACF,qBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;wBAAtB,SAAsB,CAAC;wBACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;;;;;KACzB;IAEK,8DAAoB,GAA1B;;;;;;wBACQ,EAAE,GAAI,QAAQ,CAAC,cAAc,CAAC,sBAAsB,CAAsB,CAAC,KAAK,CAAC;wBACvF,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;wBAC1C,qBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;wBAAtB,SAAsB,CAAC;wBACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;;;;;KACzB;IAEK,4DAAkB,GAAxB;;;;;;wBACQ,EAAE,GAAI,QAAQ,CAAC,cAAc,CAAC,sBAAsB,CAAsB,CAAC,KAAK,CAAC;wBACvF,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;wBAC5D,qBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;wBAAtB,SAAsB,CAAC;wBACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;;;;;KACzB;IAEO,+CAAK,GAAb,UAAc,EAAU;QAEpB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACzD,CAAC;IAzCQ,+BAA+B;QAL3C,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;YACvC,+JAAuD;;SAExD,CAAC;+EAMiC,yEAAW,EAAyB,2EAAY;OALtE,+BAA+B,CA2C3C;IAAD,sCAAC;CAAA;AA3C2C;;;;;;;;;;;;ACT5C,yCAAyC,sBAAsB,+BAA+B,uBAAuB,OAAO,gCAAgC,oBAAoB,OAAO,+CAA+C,uiB;;;;;;;;;;;ACAtO,8wHAA8wH,kBAAkB,2BAA2B,oBAAoB,0WAA0W,YAAY,sIAAsI,UAAU,kY;;;;;;;;;;;;;;;;;;;ACAnyI;AACU;AACG;AAO/D;IAWE,2BAAmB,YAAyB,EAAU,YAA0B;QAA7D,iBAAY,GAAZ,YAAY,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAThF,UAAK,GAAQ,EAAE,CAAC;QAEhB,kBAAa,GAAY,KAAK,CAAC;IAOoD,CAAC;IAEpF,oCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,uCAAW,GAAX;QAAA,iBAIC;QAHA,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,cAAI;YACzC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAG,IAAI,CAAC,aAAa,EACrB;YACE,IAAI,CAAC,KAAK,CAAC,cAAc,GAAI,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAsB,CAAC,KAAK,CAAC;SAClG;QACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG,IAAK,CAAC,EACxD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAG,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,SAAS,EAChC;gBACE,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,oBAAoB;gBAC1D,KAAI,CAAC,cAAc,EAAE,CAAC;aACvB;iBAED;gBACE,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;aAC7B;QACD,CAAC,CAAC,CAAC;IACT,CAAC;IAED,0CAAc,GAAd;QAEE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAGD,4CAAgB,GAAhB;QAAA,iBAGC;QAFC,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE;aACpC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,aAAa,GAAG,IAAI,EAAzB,CAAyB,CAAC,CAAC;IAClD,CAAC;IAGK,sCAAU,GAAhB;;;;;;wBAEE,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,WAAW,GAAG,IAAI,EAAvB,CAAuB,CAAC,CAAC;wBAC7E,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAG,IAAI,CAAC,WAAW,IAAI,CAAC,EACxB;4BACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;4BAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;yBACzB;6BAED;4BACE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;yBAC5B;;;;;KACF;IAGO,iCAAK,GAAb,UAAc,EAAU;QAEpB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACzD,CAAC;IA5EQ,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,kHAAwC;;SAEzC,CAAC;+EAYiC,yEAAW,EAAwB,2EAAY;OAXrE,iBAAiB,CA6E7B;IAAD,wBAAC;CAAA;AA7E6B;;;;;;;;;;;;ACT9B,gCAAgC,+BAA+B,8CAA8C,uCAAuC,mBAAmB,4BAA4B,uCAAuC,iBAAiB,mBAAmB,0BAA0B,OAAO,qDAAqD,2zB;;;;;;;;;;;ACApW,yKAAyK,uHAAuH,y+BAAy+B,SAAS,iDAAiD,WAAW,k6CAAk6C,SAAS,2BAA2B,WAAW,qiBAAqiB,wBAAwB,2TAA2T,kBAAkB,kIAAkI,iBAAiB,iKAAiK,gBAAgB,gFAAgF,iBAAiB,02BAA02B,cAAc,4WAA4W,eAAe,iJ;;;;;;;;;;;;;;;;;;;;ACA/wK;AACa;AAGF;AACpB;AAOzC;IAWE,iCAAmB,YAAyB,EAAU,aAA2B,EAAU,OAAe;QAAvF,iBAAY,GAAZ,YAAY,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAc;QAAU,YAAO,GAAP,OAAO,CAAQ;QAV1G,cAAS,GAAQ,EAAE,CAAC;QAIpB,gBAAW,GAAQ,EAAE,CAAC;QACtB,sBAAiB,GAAQ,EAAE,CAAC;IAKkF,CAAC;IAE/G,0CAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,6CAAW,GAAX;QAAA,iBAGC;QAFC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;aAC7B,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,OAAO,GAAG,IAAI,EAAnB,CAAmB,CAAC,CAAC;IAC5C,CAAC;IAED,sDAAoB,GAApB;QAAA,iBAGC;QAFC,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE;aACtC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,gBAAgB,GAAG,IAAI,EAA5B,CAA4B,CAAC;IACpD,CAAC;IAED,8CAAY,GAAZ;QAAA,iBAGC;QAFC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;aAC9B,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,QAAQ,GAAG,IAAI,EAApB,CAAoB,CAAC;IAC5C,CAAC;IAEK,yCAAO,GAAb;;;;;wBACE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;wBAC1D,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;wBAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;;;;;KACrB;IAEK,8CAAY,GAAlB;;;;;;wBACQ,EAAE,GAAI,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAsB,CAAC,KAAK,CAAC;wBAC/E,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;wBAClC,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;wBAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;;;;;KACrB;IAED,qDAAmB,GAAnB,UAAoB,IAAU;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EACrD;YACE,IAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,EACxC;gBACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC;gBACnC,IAAI,CAAC,iBAAiB,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACxD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;gBAC5D,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,EAAC,cAAc,CAAC,CAAC;aAC7F;iBAED;gBACE,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;aAC/E;SACF;IACH,CAAC;IAED,kDAAgB,GAAhB;QACE,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxD,CAAC;IAED,wDAAsB,GAAtB,UAAuB,KAAU,EAAE,KAAU;QAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAClD;YACE,IAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,EACtD;gBACI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC;aAC/D;SACF;IACH,CAAC;IAED,0CAAQ,GAAR,UAAS,MAAW,EAAE,QAAa;QAAnC,iBAIA;QAHE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC;aACxC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,aAAa,GAAG,IAAI,EAAzB,CAAyB,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;IAChC,CAAC;IAED,6CAAW,GAAX;QAEG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAEO,uCAAK,GAAb,UAAc,EAAU;QAExB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACvD,CAAC;IAnGU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,uIAA+C;;SAEhD,CAAC;+EAYiC,yEAAW,EAAyB,2EAAY,EAAmB,sDAAM;OAX/F,uBAAuB,CAoGnC;IAAD,8BAAC;CAAA;AApGmC;;;;;;;;;;;;ACZpC,+DAA+D,mK;;;;;;;;;;;ACA/D,2IAA2I,eAAe,2JAA2J,ieAAie,WAAW,iU;;;;;;;;;;;;;;;;;;;ACAztB;AAEb;AACE;AAO7D;IAKE,6BAAmB,YAAyB,EAAS,UAAsB;QAAxD,iBAAY,GAAZ,YAAY,CAAa;QAAS,eAAU,GAAV,UAAU,CAAY;QAJjE,wBAAmB,GAAG,IAAI,0DAAY,EAAE,CAAC;IAI2B,CAAC;IAE/E,sCAAQ,GAAR;IACA,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAZS;QAAT,4DAAM,EAAE;;oEAA0C;IADxC,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,2HAA2C;;SAE5C,CAAC;+EAMiC,yEAAW,EAAqB,wDAAU;OALhE,mBAAmB,CAe/B;IAAD,0BAAC;CAAA;AAf+B;;;;;;;;;;;;ACVhC,wBAAwB,yBAAyB,KAAK,2BAA2B,4BAA4B,qBAAqB,oBAAoB,2BAA2B,0BAA0B,+BAA+B,2BAA2B,4BAA4B,oBAAoB,2CAA2C,KAAK,2CAA2C,oCAAoC,sDAAsD,+CAA+C,+CAA+C,MAAM,0BAA0B,oBAAoB,+BAA+B,2BAA2B,KAAK,gCAAgC,6BAA6B,KAAK,+CAA+C,+lD;;;;;;;;;;;ACA5yB,qaAAqa,mDAAmD,mSAAmS,8CAA8C,8fAA8f,eAAe,gIAAgI,eAAe,uDAAuD,eAAe,wFAAwF,WAAW,knGAAknG,oBAAoB,8UAA8U,mBAAmB,+b;;;;;;;;;;;;;;;;;;;;;;ACAniK;AAEa;AACY;AAChB;AACE;AACpB;AAOzC;IAYE,iCAAmB,YAAyB,EAAU,YAA0B,EAAU,YAA4B,EAAU,OAAe;QAA5H,iBAAY,GAAZ,YAAY,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,iBAAY,GAAZ,YAAY,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAQ;QAL/I,kBAAa,GAAY,KAAK,CAAC;IAKoH,CAAC;IAEpJ,0CAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEK,mDAAiB,GAAvB;;;;;4BACE,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,UAAC,KAAa;4BAC5D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACrB,CAAC,EAAE,eAAK;4BACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACrB,CAAC,CAAC,CAAC;;;;;KACJ;IAED,qDAAmB,GAAnB;QAAA,iBAEC;QADC,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,aAAa,GAAG,IAAI,EAAzB,CAAyB,CAAC,CAAC;IACvF,CAAC;IAED,0DAAwB,GAAxB,UAAyB,MAAW;QAClC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAED,mDAAiB,GAAjB,UAAkB,MAAc;QAAhC,iBAUC;QATC,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,kBAAkB,GAAG,IAAI,EAA9B,CAA8B,CAAC,CAAC;QACrG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAC1C;YACE,IAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,EAC7B;gBACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC5B;SACF;IACH,CAAC;IAED,gDAAc,GAAd,UAAe,IAAI;QAAnB,iBAsBC;QArBC,IAAM,YAAY,GAAG;YACnB,IAAI;YACJ,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;SAChC,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sFAAmB,EAAE,EAAC,YAAY,gBAAC,CAAC,CAAC;QAE9E,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,SAAS,CAAC,UAAC,MAAM;YAC3D,IAAM,aAAa,GAAG;gBACpB,SAAS,EAAM,MAAM,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,CAAC,OAAO,KAAK,IAAI,EAAnB,CAAmB,CAAC,CAAC,GAAG,CAAC,YAAE,IAAI,SAAE,CAAC,IAAI,EAAP,CAAO,CAAC,QAAC;aAC5E,CAAC;YACF,IAAI,aAAa,EAAE;gBACjB,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC,SAAS,CAAC;oBACxE,IAAI,CAAC,KAAK,GAAO,aAAa,CAAC,SAAS,QAAC,CAAC;gBAC5C,CAAC,EAAE,eAAK;oBACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;QAEH,CAAC,CAAC,CAAC;IAEL,CAAC;IAEO,+CAAa,GAArB,UAAsB,IAAI;QAA1B,iBA0BC;QAzBC,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QAE7B,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI;YAC5C,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,EAAE,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,EAC9B;YACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnD,IAAI,OAAO,GAAG,KAAK,CAAC;gBAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACzC,IAAI,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;wBACrD,OAAO,GAAG,IAAI,CAAC;wBACf,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;wBACtC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;wBACnC,MAAM;qBACP;iBACF;gBACD,IAAI,CAAC,OAAO,EAAE;oBACZ,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;oBACvC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpC;aACF;QACH,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IAEK,0CAAQ,GAAd,UAAe,EAAE;;;;;wBAEf,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;wBAC3C,qBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;wBAAtB,SAAsB,CAAC;wBACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;;;;;KAE1B;IAED,+CAAa,GAAb,UAAc,EAAE;QAEd,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAClD,CAAC;IAED,kDAAgB,GAAhB;QAEE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;IAC/C,CAAC;IAEK,4CAAU,GAAhB;;;;;;wBAEE,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,WAAW,GAAG,IAAI,EAAvB,CAAuB,CAAC,CAAC;wBAC7E,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAG,IAAI,CAAC,WAAW,IAAI,CAAC,EACxB;4BACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;yBAC3B;6BAED;4BACE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;yBAC5B;;;;;KACF;IAEO,uCAAK,GAAb,UAAc,EAAU;QAExB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACvD,CAAC;IAxIU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,uIAA+C;;SAEhD,CAAC;+EAaiC,yEAAW,EAAwB,2EAAY,EAAwB,4DAAc,EAAmB,sDAAM;OAZpI,uBAAuB,CA2InC;IAAD,8BAAC;CAAA;AA3ImC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbK;AACc;AACD;AACoB;AACjB;AACe;AACoB;AACwB;AAC5C;AACN;AACc;AACa;AACD;AACC;AACD;AAC1B;AAGlE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,yGAAuB,EAAE;IACrD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,oFAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,wGAAuB,EAAC;IAC7D,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,gIAA+B,EAAE;IAC9E,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,mFAAgB,EAAC;IACnD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,sFAAiB,EAAC;IACjD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,+EAAiB,EAAC;IACrD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,6FAAqB,EAAC;IACzD,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,0GAAuB,EAAC;IAC7D,EAAE,IAAI,EAAE,+BAA+B,EAAE,SAAS,EAAE,0GAAuB,EAAC;IAC5E,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,yGAAsB,EAAC;IAC3D,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+EAAc,EAAC;CAC5C,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvC7B,8BAA8B,gCAAgC,mBAAmB,OAAO,2BAA2B,0BAA0B,mBAAmB,kBAAkB,yBAAyB,6BAA6B,yBAAyB,0BAA0B,kBAAkB,yCAAyC,KAAK,qBAAqB,wBAAwB,yBAAyB,KAAK,2BAA2B,uBAAuB,KAAK,mDAAmD,mBAAmB,yBAAyB,2CAA2C,OAAO,YAAY,kCAAkC,OAAO,KAAK,qBAAqB,eAAe,0GAA0G,wBAAwB,uBAAuB,OAAO,mBAAmB,yBAAyB,KAAK,+CAA+C,+2D;;;;;;;;;;;ACA58B,8wDAA8wD,gCAAgC,mLAAmL,gCAAgC,mLAAmL,gCAAgC,gbAAgb,oFAAoF,kSAAkS,gbAAgb,iBAAiB,iLAAiL,KAAK,uCAAuC,2OAA2O,uCAAuC,wKAAwK,uBAAuB,i7CAAi7C,4EAA4E,yBAAyB,qSAAqS,yBAAyB,ozBAAozB,+2EAA+2E,UAAU,+yCAA+yC,0NAA0N,iBAAiB,0MAA0M,+KAA+K,iBAAiB,gNAAgN,2QAA2Q,gNAAgN,gBAAgB,4BAA4B,4CAA4C,2BAA2B,kBAAkB,yFAAyF,sBAAsB,yG;;;;;;;;;;;;;;;;;;;;;;ACA52X;AACL;AACnB;AAEgB;AACI;AACE;AAS/D;IAcE,sBAAmB,YAAyB,EAAU,MAAc,EAAU,aAA2B,EAAU,eAA+B,EAAU,gBAAiC;QAA1K,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAc;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAiB;QAZ7L,uBAAkB,GAAQ,EAAE,CAAC;QAC7B,kBAAa,GAAY,KAAK,CAAC;QAE/B,iBAAY,GAAQ,EAAE,CAAC;QAEvB,aAAQ,GAAQ,EAAE,CAAC;QACnB,mBAAc,GAAY,KAAK,CAAC;QAEhC,aAAQ,GAAW,CAAC,CAAC;QAMnB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAG,CAAC,IAAI,CAAC,aAAa,EACtB;YACE,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,sCAAe,GAAf;IAEA,CAAC;IAEK,kDAA2B,GAAjC;;;;;wBAEE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,qBAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;;wBAAvB,SAAuB,CAAC;wBACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;;;;;KAC7B;IAED,iCAAU,GAAV;QAAA,iBASC;QARC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;YAC1B,IAAG,KAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;gBACpB,KAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;iBAAM;gBACL,KAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;aACrB;QACH,CAAC,EAAC,IAAI,CAAC;IACT,CAAC;IAED,iCAAU,GAAV;QACE,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IAED,8CAAuB,GAAvB;QAAA,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,cAAI;YAC5D,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,gBAAgB;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAa,GAAb,UAAc,UAAkB;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAClE;YACE,IAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,EACzD;gBACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;aACvD;SACF;IACH,CAAC;IAED,4CAAqB,GAArB;QACE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;IAC/C,CAAC;IAEO,8BAAO,GAAf;QAEE,YAAY,CAAC,KAAK,EAAE;QACpB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IAED,sCAAe,GAAf;QAAA,iBAEC;QADC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,YAAY,GAAG,IAAI,EAAxB,CAAwB,CAAC,CAAC;IAClF,CAAC;IAED,wCAAiB,GAAjB;QAAA,iBAIC;QAFC,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE;aAC9C,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,kBAAkB,GAAG,IAAI,EAA9B,CAA8B,CAAC,CAAC;IACrD,CAAC;IAED,gCAAS,GAAT,UAAU,KAAa;QAErB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;QAC/C,QAAQ,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;IAED,oCAAa,GAAb;QAEE,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,EAAE,CAAC;QACpD,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACrC,CAAC;IAEK,iCAAU,GAAhB;;;;;;wBACE,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,cAAI;4BAC9C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;4BACxB,IAAI,KAAI,CAAC,WAAW,IAAI,CAAC,EAAE;gCACzB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;6BAC3B;iCACI;gCACH,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;6BAC5B;wBACH,CAAC,CAAC,CAAC;wBACH,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAEK,mCAAY,GAAlB,UAAmB,UAAe;;;;;wBAChC,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;wBACtD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;wBACxD,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,uBAAuB,EAAE,CAAC;;;;;KAChC;IAEK,sCAAe,GAArB,UAAsB,UAAe;;;;;wBACnC,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;wBACtD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;wBAC1D,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,uBAAuB,EAAE,CAAC;;;;;KAChC;IAEO,4BAAK,GAAb,UAAc,EAAU;QAEpB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACzD,CAAC;IArIQ,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAeiC,sEAAW,EAAkB,sDAAM,EAAyB,oEAAY,EAA2B,wEAAc,EAA4B,0EAAe;OAdlL,YAAY,CAuIxB;IAAD,mBAAC;CAAA;AAvIwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfiC;AACjB;AAEe;AACT;AACS;AACC;AACS;AACX;AACD;AACoB;AACF;AACf;AACuB;AACY;AAChD;AACgD;AACpD;AAC4E;AACnB;AAClD;AACS;AACmB;AACV;AACkD;AAC5C;AACS;AACzB;AACiK;AAChK;AACU;AACc;AACD;AAC5B;AACT;AACwB;AAC2B;AACtC;AACsB;AACf;AACG;AACV;AACsC;AACA;AACD;AACA;AAC1B;AACkC;AAE7F,SAAS,WAAW;IACxB,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACvC,CAAC;AA+FF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA7FrB,8DAAQ,CAAC;YACP,YAAY,EAAE;gBACX,uFAAiB;gBACjB,kEAAa;gBACb,2DAAY;gBACZ,qEAAc;gBACd,uFAAiB;gBACjB,qFAAiB;gBACjB,yGAAuB;gBACvB,6FAAmB;gBACnB,8GAA6B;gBAC7B,yGAAuB;gBACvB,iIAA+B;gBAC/B,wFAAkB;gBAClB,oFAAgB;gBAChB,+EAAiB;gBACjB,6FAAqB;gBACrB,+EAAiB;gBACjB,0GAAuB;gBACvB,8EAAc;gBACd,0GAAuB;gBACvB,0GAAsB;gBACtB,yGAAuB;gBACvB,yGAAsB;gBACtB,+EAAc;gBACd,iHAAyB;aAC3B;YACD,OAAO,EAAE;gBACN,uEAAa;gBACb,oEAAgB;gBAChB,qEAAgB;gBAChB,iEAAc;gBACd,6FAAuB;gBACvB,kEAAe;gBACf,0DAAW;gBACX,iEAAc;gBACd,kEAAe;gBACf,qEAAkB;gBAClB,kEAAmB;gBACnB,gEAAa;gBACb,kEAAe;gBACf,kEAAe;gBACf,0DAAW,CAAC,OAAO,EAAE;gBACrB,sDAAU,CAAC,OAAO,EAAE;gBACpB,sEAAc;gBACd,+EAAiB,CAAC,OAAO,CAAC;oBACvB,cAAc,EAAE,KAAK;oBACrB,WAAW,EAAE,eAAe;oBAC5B,kBAAkB,EAAE,iBAAiB;oBACrC,iBAAiB,EAAE,KAAK;iBAC3B,CAAC;gBACD,6DAAS,CAAC,OAAO,CAAC;oBACf,MAAM,EAAE;wBACN,WAAW,EAAE,WAAW;wBACxB,kBAAkB,EAAE,CAAC,gBAAgB,CAAC;wBACtC,iBAAiB,EAAE,CAAC,yBAAyB,CAAC;qBAC/C;iBACF,CAAC;gBACF,4EAAkB,CAAC,OAAO,EAAE;gBAC5B,0EAAgB,CAAC,OAAO,EAAE;gBAC3B,iEAAc;gBACd,qEAAkB;gBAClB,gEAAa;gBACb,6FAAuB;gBACvB,qEAAkB;gBAClB,iEAAc;gBACd,sEAAgB;gBAChB,wDAAY;gBACZ,iEAAW;gBACX,qEAAa;gBACb,sEAAmB;gBACnB,sEAAmB;gBACnB,4EAAuB;gBACvB,oEAAiB;gBACjB,iEAAc;gBACd,qEAAS;gBACT,2EAAwB;aAC1B;YACD,SAAS,EAAE;gBACR,kEAAW;gBACX,qEAAY;aACd;YACD,eAAe,EAAE;gBACd,6FAAmB;gBACnB,0GAAsB;aACxB;YACD,SAAS,EAAE;gBACR,2DAAY;aACd;YACD,OAAO,EAAE;gBACN,oEAAsB;aACxB;SACH,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AClJtB,yBAAyB,oBAAoB,OAAO,yBAAyB,qBAAqB,sBAAsB,4BAA4B,gCAAgC,0BAA0B,OAAO,+CAA+C,2nB;;;;;;;;;;;ACApQ,qsEAAqsE,cAAc,wRAAwR,gBAAgB,2RAA2R,4BAA4B,oQAAoQ,qBAAqB,wPAAwP,gBAAgB,kMAAkM,2BAA2B,4iH;;;;;;;;;;;;;;;;;;;;;;ACA38G;AAC4B;AAE5F;AAE2B;AACvB;AACe;AAOxD;IAWE,+BACS,YAAyB,EACxB,gBAAiC,EACjC,OAAe;QAHzB,iBAIK;QAHI,iBAAY,GAAZ,YAAY,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,YAAO,GAAP,OAAO,CAAQ;QAbzB,qBAAgB,GAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;QACnF,eAAU,GAAG,IAAI,oEAAkB,EAAY,CAAC;QAChD,WAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,CAAC,MAAM,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC;QACxE,UAAK,GAAQ,EAAE,CAAC;QAChB,WAAM,GAAY,KAAK,CAAC;QACxB,eAAU,GAAY,IAAI,CAAC;QA2BpB,aAAQ,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAC5D,CAAC,CAAC;IApBE,CAAC;IAEL,wCAAQ,GAAR;QACE,IAAI,CAAC,6BAA6B,EAAE,CAAC;IAEvC,CAAC;IACD,+CAAe,GAAf;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,0CAAU,GAAV;QACE,kBAAkB;QAClB,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAC1C,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;IAC9B,CAAC;IAMD,6DAA6B,GAA7B;QAAA,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,EAAE,CAAC,SAAS,CAAC,aAAG;YAClE,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAiB,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qEAAqC,GAArC;QAAA,iBAKC;QAJC,IAAI,CAAC,gBAAgB,CAAC,sCAAsC,EAAE,CAAC,SAAS,CAAC,aAAG;YAC1E,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAiB,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,uEAAuC,GAAvC;QAAA,iBAKC;QAJC,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,EAAE,CAAC,SAAS,CAAC,aAAG;YAClE,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAiB,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,gDAAgB,GAAhB,UAAiB,QAAQ;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpD,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,EAAE;gBAC5C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACtE;SACF;IACH,CAAC;IAED,2CAAW,GAAX;QAAA,iBAKC;QAJC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YAC5D,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;YACtD,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,sCAAM,GAAZ;;;;;wBAEE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACnB,qBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;wBAAtB,SAAsB,CAAC;wBACvB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;wBACnC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;;;KACrB;IAEO,qCAAK,GAAb,UAAc,EAAU;QAEtB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACzD,CAAC;IA3EwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;4DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;uDAAC;IATvB,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,2HAA6C;;SAE9C,CAAC;+EAauB,kEAAW;YACN,0EAAe;YACxB,sDAAM;OAdd,qBAAqB,CAoFjC;IAAD,4BAAC;CAAA;AApFiC;;;;;;;;;;;;ACdlC,2BAA2B,yBAAyB,4BAA4B,kBAAkB,gBAAgB,sBAAsB,yBAAyB,uBAAuB,mBAAmB,uDAAuD,sBAAsB,yBAAyB,KAAK,sBAAsB,0BAA0B,mBAAmB,kBAAkB,yBAAyB,wBAAwB,6BAA6B,yBAAyB,oCAAoC,kBAAkB,yCAAyC,KAAK,kCAAkC,0BAA0B,mBAAmB,kBAAkB,yBAAyB,wBAAwB,6BAA6B,yBAAyB,0BAA0B,kBAAkB,yCAAyC,MAAM,sBAAsB,sBAAsB,sBAAsB,kBAAkB,wBAAwB,KAAK,0BAA0B,2BAA2B,2BAA2B,gCAAgC,KAAK,oCAAoC,wCAAwC,KAAK,+CAA+C,27E;;;;;;;;;;;ACA/tC,4uBAA4uB,KAAK,yBAAyB,+CAA+C,oVAAoV,2tCAA2tC,iCAAiC,kBAAkB,+CAA+C,2WAA2W,szEAAszE,wCAAwC,qZAAqZ,qfAAqf,wCAAwC,mhCAAmhC,2BAA2B,+YAA+Y,8nDAA8nD,4BAA4B,kZAAkZ,ioDAAioD,uCAAuC,kdAAkd,6/DAA6/D,iCAAiC,iaAAia,wpDAAwpD,8BAA8B,wZAAwZ,kpDAAkpD,uDAAuD,kNAAkN,mBAAmB,2FAA2F,kBAAkB,oFAAoF,mBAAmB,IAAI,kBAAkB,2QAA2Q,0jCAA0jC,qlGAAqlG,gPAAgP,wXAAwX,6KAA6K,kBAAkB,mMAAmM,kBAAkB,6PAA6P,KAAK,cAAc,8KAA8K,KAAK,cAAc,sRAAsR,2BAA2B,4jBAA4jB,cAAc,uDAAuD,YAAY,uWAAuW,YAAY,q0BAAq0B,kBAAkB,mJAAmJ,kBAAkB,oRAAoR,cAAc,wdAAwd,o+CAAo+C,cAAc,ybAAyb,g9CAAg9C,cAAc,sYAAsY,q9CAAq9C,mBAAmB,qZAAqZ,wvDAAwvD,qBAAqB,qlBAAqlB,cAAc,w4E;;;;;;;;;;;;;;;;;;;;;;ACAlnmC;AAC4B;AAChF;AAGZ;AAC2B;AACvB;AAGe;AAOxD;IAiBE,2BAAmB,YAAyB,EAAU,eAA+B,EAAU,gBAAiC,EAAU,OAAe;QAAzJ,iBAA8J;QAA3I,iBAAY,GAAZ,YAAY,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAU,YAAO,GAAP,OAAO,CAAQ;QAdzJ,qBAAgB,GAAa,CAAC,MAAM,CAAC,CAAC;QACtC,eAAU,GAAG,IAAI,oEAAkB,EAAW,CAAC;QAC/C,WAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,CAAC,MAAM,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC;QACxE,UAAK,GAAQ,EAAE,CAAC;QAChB,YAAO,GAAQ,EAAE,CAAC;QAEX,mBAAc,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;QACxD,gCAA2B,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACvD,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAO,CAAE,EAAE,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,CAAE,CAAC;QACrE,gCAA2B,GAAO,CAAE,EAAE,eAAe,EAAE,CAAC,SAAS,CAAC,EAAE,CAAE,CAAC;QAsBvE,aAAQ,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAC5D,CAAC;IApB4J,CAAC;IAE9J,oCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,2CAAe,GAAf;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAED,sCAAU,GAAV;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAC1C,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;IAC9B,CAAC;IAMD,uCAAW,GAAX;QAAA,iBAIC;QAFC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM,IAAM,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7E,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,QAAQ,GAAG,IAAI,EAApB,CAAoB,CAAC,CAAC;IACzF,CAAC;IAED,0CAAc,GAAd;QAAA,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACxE,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAgB,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,0CAAc,GAApB;;;;;;wBAEE,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,QAAQ,GAAG,IAAI,EAApB,CAAoB,CAAC,CAAC;wBACjG,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAED,8CAAkB,GAAlB;QAEE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IAC7C,CAAC;IAED,2CAAe,GAAf,UAAgB,SAAS;QAGvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EACpD;YACE,IAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,SAAS,EAC1C;gBACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACxC;SACF;IACH,CAAC;IAEK,6CAAiB,GAAvB,UAAwB,aAAa;;;;;wBAEnC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,SAAS,EAAE,CAAC;wBACnE,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,WAAW,EAAE;;;;;KACnB;IAEC,6EAA6E;IAEvE,0CAAc,GAApB;;;;;wBAEE,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC;wBAChC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;wBAChE,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,KAAK,EAAE,CAAC;wBACrD,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,8CAAkB,GAAxB;;;;;wBAEE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;wBAC9C,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;wBACvE,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;wBAChD,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,gDAAoB,GAA1B;;;;;wBAGE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;wBAClE,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;wBACvE,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,CAAC;wBAClD,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,gDAAoB,GAA1B;;;;;wBAEE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;wBAClD,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;wBACvE,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;wBAC1C,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,iDAAqB,GAA3B;;;;;wBAEE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;wBACpD,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;wBACvE,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,CAAC;wBAC3C,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,4DAAgC,GAAtC;;;;;wBAEE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;wBAC1E,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;wBACvE,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;wBACtD,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,sDAA0B,GAAhC;;;;;wBAEE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;wBAC9D,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;wBACvE,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;wBAChD,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,mDAAuB,GAA7B;;;;;wBAEE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;wBACxD,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;wBACvE,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,CAAC;wBAC7C,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,6DAAiC,GAAvC;;;;;wBAEE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC;wBAC5E,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;wBACvE,QAAQ,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC,KAAK,EAAE,CAAC;wBACvD,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEL,sEAAsE;IAE5D,sCAAU,GAAhB;;;;;wBAEE,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC;wBAChC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;wBAClE,qBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;wBAAtB,SAAsB,CAAC;wBACvB,QAAQ,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC,KAAK,EAAE,CAAC;wBACzD,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,uCAAW,GAAjB;;;;;wBAEE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;wBACrE,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;wBACtD,IAAI,CAAC,cAAc,EAAE,CAAC;;;;;KACvB;IAEK,6CAAiB,GAAvB;;;;;wBAEE,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;wBACpC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;wBAClE,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC;wBAC/C,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;wBACtC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,6CAAiB,GAAvB;;;;;wBAEE,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;wBACpC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;wBAClE,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC;wBAC/C,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;wBACtC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,6CAAiB,GAAvB;;;;;wBAEE,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;wBACpC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;wBAClE,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC;wBAC/C,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;wBACtC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,kDAAsB,GAA5B;;;;;wBAEE,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;wBAC9C,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;wBAClE,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,KAAK,EAAE,CAAC;wBACpD,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;wBACtC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;;;KACjB;IAEK,oDAAwB,GAA9B,UAA+B,KAAU;;;;;wBAEvC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC;wBACvD,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;wBACzE,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;;;;;KACvC;IAEO,iCAAK,GAAb,UAAc,EAAU;QAEtB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACzD,CAAC;IAhPiB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;mDAAC;IAfvB,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;+EAkBiC,kEAAW,EAA2B,8DAAc,EAA4B,0EAAe,EAAmB,sDAAM;OAjB9I,iBAAiB,CAiQ7B;IAAD,wBAAC;CAAA;AAjQ6B;;;;;;;;;;;;ACjB9B,+DAA+D,uI;;;;;;;;;;;ACA/D,wJAAwJ,0BAA0B,qT;;;;;;;;;;;;;;;;;;ACAhI;AACM;AAQxD;IAME,uBAAmB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAH5C,UAAK,GAAY,KAAK,CAAC;QACvB,UAAK,GAAY,KAAK,CAAC;IAEyB,CAAC;IAEjD,gCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,sCAAc,GAAd;QAAA,iBAGC;QAFC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE;aAChC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,YAAY,GAAG,IAAI,EAAxB,CAAwB,CAAC,CAAC;IACjD,CAAC;IAED,6CAAqB,GAArB;QAAA,iBAaC;QAZC,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE;aACrC,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,KAAI,CAAC,YAAY,CAAC,IAAI,IAAI,KAAK,EAAE;gBACnC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACpB;iBACI,IAAI,KAAI,CAAC,YAAY,CAAC,IAAI,IAAI,KAAK,EAAE;gBACxC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IA/BU,aAAa;QANzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAQiC,kEAAW;OANjC,aAAa,CAiCzB;IAAD,oBAAC;CAAA;AAjCyB;;;;;;;;;;;;ACT1B,8BAA8B,8BAA8B,iBAAiB,KAAK,+CAA+C,2X;;;;;;;;;;;ACAjI,mhBAAmhB,mBAAmB,+G;;;;;;;;;;;;;;;;;;;;ACA7e;AACM;AACF;AACX;AAOlD;IAIE,4BAAoB,aAA2B,EAAU,YAAyB;QAA9D,kBAAa,GAAb,aAAa,CAAc;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAHlF,kBAAa,GAAQ,EAAE,CAAC;IAG8D,CAAC;IAEvF,qCAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;aAClE,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,aAAa,GAAG,IAAI,EAAzB,CAAyB,CAAC,CAAC;IAChD,CAAC;IAED,yCAAY,GAAZ,UAAa,KAAa;QACxB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACnE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACtC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpB,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IAEL,CAAC;IAjBQ;QAAR,2DAAK,EAAE;wEAAc,8DAAO;2DAAC;IAFnB,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,qHAAyC;;SAE1C,CAAC;+EAKmC,2EAAY,EAAwB,yEAAW;OAJvE,kBAAkB,CAqB9B;IAAD,yBAAC;CAAA;AArB8B;;;;;;;;;;;;ACV/B,4DAA4D,uCAAuC,mBAAmB,oCAAoC,uCAAuC,iBAAiB,qDAAqD,ujB;;;;;;;;;;;ACAvQ,kxEAAkxE,WAAW,2L;;;;;;;;;;;;;;;;;;;ACArtE;AAChB;AACf;AAQzC;IAOE,wBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QALpE,UAAK,GAAQ,EAAE,CAAC;QAChB,kBAAa,GAAY,KAAK,CAAC;QAErB,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;IAE4B,CAAC;IAEzE,iCAAQ,GAAR;IACA,CAAC;IAED,oCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACrC,CAAC;IAEK,mCAAU,GAAhB;;;;gBACE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;oBACpD,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;oBACtC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACpB,CAAC,EAAE,eAAK;oBACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBAC1B,IAAI,KAAK,IAAI,IAAI,EAAE;wBACjB,IAAI;4BACF,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;4BAEjC,IAAI,SAAS,IAAI,uBAAuB,EAAE;gCACxC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;6BAC3B;iCACI;gCACH,KAAI,CAAC,SAAS,GAAG,6BAA6B,CAAC;gCAC/C,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;6BAChC;yBACF;wBAAC,OAAO,CAAC,EAAE;4BACV,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC;4BACpC,KAAI,CAAC,SAAS,GAAG,6BAA6B,CAAC;yBAChD;qBAEF;yBACI;wBACH,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;wBAC9B,KAAI,CAAC,SAAS,GAAG,6BAA6B,CAAC;qBAChD;gBACH,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;;;;KACpC;IAED,8BAAK,GAAL;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/C,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,KAAI,CAAC,SAAS,GAAG,6BAA6B,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,+BAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,iCAAQ,GAAR;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO,CAAC,KAAK,CAAC;IAChB,CAAC;IAEO,8BAAK,GAAb,UAAc,EAAU;QACtB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACzD,CAAC;IAhES;QAAT,4DAAM,EAAE;;wDAAmC;IALjC,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAqC;;SAEtC,CAAC;+EAQiC,kEAAW,EAAkB,sDAAM;OAPzD,cAAc,CAuE1B;IAAD,qBAAC;CAAA;AAvE0B;;;;;;;;;;;;ACV3B,8BAA8B,0BAA0B,KAAK,8BAA8B,sBAAsB,+BAA+B,uBAAuB,OAAO,+BAA+B,oBAAoB,OAAO,+CAA+C,moB;;;;;;;;;;;ACAvR,iJAAiJ,uFAAuF,sYAAsY,yCAAyC,qTAAqT,2nBAA2nB,0BAA0B,gLAAgL,mGAAmG,gLAAgL,2BAA2B,0KAA0K,qBAAqB,kKAAkK,wBAAwB,kLAAkL,wBAAwB,gxBAAgxB,0BAA0B,iLAAiL,uGAAuG,iLAAiL,4BAA4B,2KAA2K,sBAAsB,wKAAwK,yBAAyB,wLAAwL,yBAAyB,o+BAAo+B,o2BAAo2B,OAAO,sFAAsF,gHAAgH,SAAS,6FAA6F,iBAAiB,gBAAgB,+gDAA+gD,ygBAAygB,YAAY,66DAA66D,0uC;;;;;;;;;;;;;;;;;;ACAzgV;AACL;AASnE;IAaE,wBAAqB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAVpD,UAAK,GAAQ,EAAE,CAAC;QAChB,gBAAW,GAAY,KAAK,CAAC;QACtB,mBAAc,GAAG,CAAC,YAAY,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;QACpE,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAO,CAAE,EAAE,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,EAAE,CAAE,CAAC;QA8F7F,kBAAa,GAAoB;YACtC,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE;YAC/D,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE;SAC/D,CAAC;QACK,oBAAe,GAAY,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAC5H,qBAAgB,GAAyC;YAC9D,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,oEAAoE;gBACpE,KAAK,EAAE,CAAC,EAAE,CAAC;gBACX,KAAK,EAAE;oBACL;wBACE,EAAE,EAAE,UAAU;wBACd,QAAQ,EAAE,MAAM;qBACjB;iBACF;aACF;YACD,UAAU,EAAE;gBACV,WAAW,EAAE;oBACX;wBACE,IAAI,EAAE,MAAM;wBACZ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE,UAAU;wBACnB,KAAK,EAAE,OAAO;wBACd,WAAW,EAAE,QAAQ;wBACrB,WAAW,EAAE,CAAC;wBACd,KAAK,EAAE;4BACL,OAAO,EAAE,IAAI;4BACb,SAAS,EAAE,QAAQ;4BACnB,OAAO,EAAE,UAAU;yBACpB;qBACF;iBACF;aACF;SACF,CAAC;QACK,oBAAe,GAAY;YAChC;gBACE,eAAe,EAAE,uBAAuB;gBACxC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,qBAAqB;gBAC3C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,uBAAuB;aAC/C;YACD;gBACE,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,kBAAkB;gBACxC,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,kBAAkB;aAC1C;YACD;gBACE,eAAe,EAAE,mBAAmB;gBACpC,WAAW,EAAE,KAAK;gBAClB,oBAAoB,EAAE,qBAAqB;gBAC3C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,uBAAuB;aAE/C;SACF,CAAC;QACK,oBAAe,GAAG,IAAI,CAAC;QACvB,kBAAa,GAAG,MAAM,CAAC;IAvJ4B,CAAC;IAEzD,iCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE;QACjB,IAAI,CAAC,kBAAkB,EAAE;IAC3B,CAAC;IAED,oCAAW,GAAX,UAAY,OAAsB;QAChC,OAAO,CAAC,SAAS,CAAC;QAClB,IAAI,CAAC,UAAU,EAAE;QACjB,IAAI,CAAC,kBAAkB,EAAE;IAC3B,CAAC;IAED,mCAAU,GAAV;QAAA,iBAEC;QADC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,OAAO,GAAG,IAAI,EAAnB,CAAmB,CAAC,CAAC;IAC/F,CAAC;IAED,2CAAkB,GAAlB;QAAA,iBAEC;QADC,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,eAAe,GAAG,IAAI,EAA3B,CAA2B,CAAC,CAAC;IAC3F,CAAC;IAEK,8CAAqB,GAA3B;;;;;wBACE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wBACtC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;wBAC9C,IAAI,CAAC,eAAe,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;wBACzE,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE,CAAC;wBAC9C,IAAI,CAAC,UAAU,EAAE,CAAC;wBAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;;;;;KAC3B;IAEK,8CAAqB,GAA3B;;;;;wBACE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wBACtC,IAAI,CAAC,eAAe,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;wBACzE,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,IAAI,CAAC,UAAU,EAAE,CAAC;wBAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;;;;;KAC3B;IAEK,6CAAoB,GAA1B;;;;;wBACE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wBACtC,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;wBAC/D,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE,CAAC;wBAC9C,IAAI,CAAC,UAAU,EAAE,CAAC;wBAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;;;;;KAC3B;IAED,qCAAY,GAAZ;QAEE,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;IACvC,CAAC;IAEO,8BAAK,GAAb,UAAc,EAAU;QAEpB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACzD,CAAC;IAEL,yJAAyJ;IAE/I,uCAAc,GAAtB,UAAuB,CAAS;QAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,SAAS;IACF,qCAAY,GAAnB,UAAoB,EAAsD;YAApD,gBAAK,EAAE,kBAAM;QACjC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC7B,CAAC;IAEM,qCAAY,GAAnB,UAAoB,EAAsD;YAApD,gBAAK,EAAE,kBAAM;QACjC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC7B,CAAC;IAEM,gCAAO,GAAd;QAAA,iBAOC;QANC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;YAC9B,IAAM,GAAG,GAAG,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACnC,IAAM,IAAI,GAAa,CAAC,CAAC,IAAgB,CAAC;YAC1C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAS,IAAI,CAAC,eAAe,CAAC,MAAQ,CAAC,CAAC;IACpE,CAAC;IAEM,oCAAW,GAAlB;QACE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,OAAO,CAAC;QAC9C,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,sBAAsB,CAAC;IACnE,CAAC;IAjGQ;QAAR,2DAAK,EAAE;;qDAAgB;IADb,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,2GAAqC;;SAEtC,CAAC;+EAcsC,+EAAc;OAbzC,cAAc,CAyK1B;IAAD,qBAAC;CAAA;AAzK0B;;;;;;;;;;;;ACV3B,2BAA2B,kCAAkC,kCAAkC,KAAK,gBAAgB,iCAAiC,KAAK,sBAAsB,6CAA6C,sDAAsD,+CAA+C,+CAA+C,MAAM,kCAAkC,4BAA4B,qBAAqB,qBAAqB,2BAA2B,+BAA+B,2BAA2B,qCAAqC,oBAAoB,2CAA2C,OAAO,+BAA+B,4BAA4B,qBAAqB,qBAAqB,2BAA2B,+BAA+B,2BAA2B,4BAA4B,oBAAoB,2CAA2C,OAAO,kCAAkC,4BAA4B,qBAAqB,qBAAqB,2BAA2B,+BAA+B,2BAA2B,4BAA4B,oBAAoB,2CAA2C,OAAO,iBAAiB,0BAA0B,OAAO,+CAA+C,uiF;;;;;;;;;;;ACA3zC,sZAAsZ,mBAAmB,mFAAmF,eAAe,qlCAAqlC,sJAAsJ,eAAe,iLAAiL,qBAAqB,8YAA8Y,YAAY,8vC;;;;;;;;;;;;;;;;;;ACAnzE;AACiB;AAQnE;IAQE,mCAAqB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAP7C,mBAAc,GAAG,CAAC,YAAY,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;QACpE,gCAA2B,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACxD,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAO,CAAE,EAAE,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,EAAE,CAAE,CAAC;QAC3F,gCAA2B,GAAO,CAAE,EAAE,eAAe,EAAE,CAAC,SAAS,CAAC,EAAE,CAAE,CAAC;IAGtB,CAAC;IAEzD,4CAAQ,GAAR;QACE,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,wDAAoB,GAApB;QAAA,iBAGC;QADC,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,IAAI,GAAG,GAAG,EAAf,CAAe,CAAC,CAAC;IAChF,CAAC;IAED,kDAAc,GAAd,UAAe,GAAQ;QACrB,IAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,EAC3B;YACE,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;SAChD;;YAEC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IA1BU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,+IAAiD;;SAElD,CAAC;+EASsC,+EAAc;OARzC,yBAAyB,CA4BrC;IAAD,gCAAC;CAAA;AA5BqC;;;;;;;;;;;;ACTtC,8BAA8B,mDAAmD,0BAA0B,KAAK,wBAAwB,6CAA6C,4BAA4B,KAAK,uBAAuB,uBAAuB,gCAAgC,0BAA0B,WAAW,4BAA4B,uCAAuC,OAAO,yBAAyB,kCAAkC,oCAAoC,KAAK,eAAe,kBAAkB,kBAAkB,KAAK,4BAA4B,kBAAkB,mBAAmB,yBAAyB,0BAA0B,sBAAsB,wBAAwB,KAAK,qBAAqB,kBAAkB,mBAAmB,uBAAuB,0BAA0B,yBAAyB,sBAAsB,2BAA2B,KAAK,mBAAmB,oBAAoB,4BAA4B,qBAAqB,wBAAwB,KAAK,4BAA4B,iBAAiB,oBAAoB,0BAA0B,0BAA0B,wBAAwB,KAAK,uBAAuB,2BAA2B,qBAAqB,sBAAsB,uBAAuB,qBAAqB,mBAAmB,KAAK,sBAAsB,uBAAuB,kCAAkC,+BAA+B,kBAAkB,wBAAwB,mCAAmC,2BAA2B,iBAAiB,sBAAsB,oBAAoB,KAAK,2BAA2B,2BAA2B,uBAAuB,wJAAwJ,KAAK,+BAA+B,eAAe,KAAK,6BAA6B,mEAAmE,2DAA2D,+GAA+G,KAAK,iCAAiC,iBAAiB,KAAK,sFAAsF,mEAAmE,2DAA2D,+GAA+G,KAAK,2BAA2B,kCAAkC,KAAK,mCAAmC,0CAA0C,KAAK,qBAAqB,kBAAkB,0BAA0B,KAAK,kCAAkC,0BAA0B,mBAAmB,mBAAmB,yBAAyB,6BAA6B,yBAAyB,mCAAmC,kBAAkB,yCAAyC,KAAK,kCAAkC,0BAA0B,mBAAmB,mBAAmB,yBAAyB,6BAA6B,yBAAyB,oCAAoC,kBAAkB,yCAAyC,KAAK,kCAAkC,0BAA0B,mBAAmB,mBAAmB,yBAAyB,6BAA6B,yBAAyB,oCAAoC,kBAAkB,yCAAyC,KAAK,iCAAiC,0BAA0B,mBAAmB,mBAAmB,yBAAyB,6BAA6B,yBAAyB,0BAA0B,kBAAkB,yCAAyC,KAAK,+CAA+C,2uN;;;;;;;;;;;ACA10H,gjBAAgjB,qBAAqB,yRAAyR,qBAAqB,0RAA0R,qBAAqB,gQAAgQ,qBAAqB,uPAAuP,KAAK,eAAe,48CAA48C,saAAsa,mBAAmB,2tCAA2tC,mGAAmG,MAAM,gBAAgB,qBAAqB,+BAA+B,QAAQ,qyBAAqyB,YAAY,qeAAqe,eAAe,kZAAkZ,MAAM,i7BAAi7B,KAAK,eAAe,+DAA+D,gkBAAgkB,eAAe,8dAA8d,mDAAmD,iBAAiB,kIAAkI,kIAAkI,qBAAqB,sMAAsM,wBAAwB,uTAAuT,6CAA6C,sKAAsK,2CAA2C,4HAA4H,wBAAwB,8hBAA8hB,eAAe,uyBAAuyB,eAAe,o3BAAo3B,eAAe,8e;;;;;;;;;;;;;;;;;;;;;;;;;ACA7nY;AAE0B;AAIX;AACJ;AACe;AAC3B;AACwD;AACrB;AACvB;AAO7D;IAkBE,0BAAmB,YAAyB,EAAS,MAAiB,EAAU,KAAiB,EAAU,eAA+B,EAChI,aAA2B,EAAU,eAA+B;QAD3D,iBAAY,GAAZ,YAAY,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,UAAK,GAAL,KAAK,CAAY;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAChI,kBAAa,GAAb,aAAa,CAAc;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAjB9E,aAAQ,GAAO,EAAE,CAAC;QAGlB,UAAK,GAAQ,EAAE,CAAC;QAEhB,mBAAc,GAAQ,EAAE,CAAC;QAEzB,UAAK,GAAM,EAAE,CAAC;QACd,WAAM,GAAG,IAAI,CAAC,CAAC,kBAAkB;QAGjC,eAAU,GAAQ,EAAE,CAAC;QAGrB,WAAM,GAAY,KAAK,CAAC;IAG0D,CAAC;IAEnF,mCAAQ,GAAR;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,EAAE;QAClB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAGD,yCAAc,GAAd;QAAA,iBAaC;QAZC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,cAAI;YAChD,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,EAAE,EAAE,EAAE;gBACxB,IAAG,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE;oBAC5B,OAAO,CAAC,CAAC;iBACV;qBAAM,IAAG,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE;oBACnC,OAAO,CAAC,CAAC,CAAC;iBACX;qBAAM;oBACL,OAAO,CAAC,CAAC;iBACV;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,yCAAc,GAApB,UAAqB,KAAK;;;;;wBACxB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;wBAC1B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;wBACtC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;wBACvD,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAArB,SAAqB,CAAC;wBACtB,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAE,CAAC;wBACnD,IAAI,CAAC,eAAe,EAAE,CAAC;wBACvB,IAAI,CAAC,cAAc,EAAE,CAAC;;;;;KACvB;IAED,wCAAa,GAAb,UAAc,EAAU;QAAxB,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI,IAAK,KAAI,CAAC,OAAO,GAAG,IAAI,EAAE,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,GAAC,CAAC,CAAC;QACjH,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAkB;QAC7C,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,GAAG,IAAI,EAA1B,CAA0B,CAAC,CAAC;QACtG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,CAAC,CAAC;QACtF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,kBAAkB;QAC5C,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,0CAAe,GAAf;QAAA,iBAGC;QAFC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM,IAAM,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7E,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI,IAAK,KAAI,CAAC,OAAO,GAAG,IAAI,EAAE,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,GAAC,CAAC,CAAC;IACxH,CAAC;IAED,6CAAkB,GAAlB;QAAA,iBAGC;QAFD,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,GAAG,IAAI,EAA1B,CAA0B,CAAC,CAAC;QACtG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,CAAC,CAAC;IACtF,CAAC;IAED,sCAAW,GAAX;QAAA,iBAGG;QAFD,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;aAC3B,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,EAAnB,CAAmB,CAAC,CAAC;IAC5C,CAAC;IAEH,+BAAI,GAAJ,UAAK,KAA4B;QAC/B,IAAI,KAAK,CAAC,iBAAiB,KAAK,KAAK,CAAC,SAAS,EAAE;YAC/C,8EAAe,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;SAChF;aAAM;YACL,gFAAiB,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAC5B,KAAK,CAAC,SAAS,CAAC,IAAI,EACpB,KAAK,CAAC,aAAa,EACnB,KAAK,CAAC,YAAY,CAAC,CAAC;SACvC;IACH,CAAC;IAED,8CAAmB,GAAnB;QACE,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAG;SACpC;aACI;YACH,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,EAAE,CAAC;SAClF;IACH,CAAC;IAED,wCAAa,GAAb;QAAA,iBAEC;QADC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,UAAU,GAAG,IAAI,EAAtB,CAAsB,CAAC,CAAC;IACxF,CAAC;IAED,uCAAY,GAAZ,UAAa,CAAM;QAAnB,iBAGC;QAFC,IAAM,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,YAAY,GAAG,IAAI,EAAxB,CAAwB,CAAC,CAAC;IACrG,CAAC;IAED,8CAAmB,GAAnB;QAEE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;QACnE,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEK,iCAAM,GAAZ;;;;;wBAEE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACnB,qBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;wBAAtB,SAAsB,CAAC;wBACvB,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;wBAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;;;KACrB;IAEK,4CAAiB,GAAvB;;;;;;KAQC;IAEO,gCAAK,GAAb,UAAc,EAAU;QAEtB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACzD,CAAC;IAED,+CAAoB,GAApB,UAAqB,KAAU;QAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,6BAA6B;IAC7B,4CAAiB,GAAjB;QACE,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iGAAsB,EAAG;YAC5D,IAAI,EAAE;gBACJ,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS;aACtC;SACE,CAAC,CAAC;IACL,CAAC;IAtJU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,iHAAuC;;SAExC,CAAC;+EAmBiC,yEAAW,EAAiB,2DAAS,EAAiB,+DAAU,EAA2B,wEAAc;YACjH,oEAAY,EAA2B,8DAAc;OAnBnE,gBAAgB,CAwJ5B;IAAD,uBAAC;CAAA;AAxJ4B;;;;;;;;;;;;ACnB7B,qCAAqC,kBAAkB,KAAK,WAAW,kBAAkB,KAAK,iBAAiB,mBAAmB,oBAAoB,0BAA0B,8BAA8B,wBAAwB,KAAK,eAAe,sBAAsB,KAAK,kBAAkB,wBAAwB,yBAAyB,KAAK,cAAc,mBAAmB,KAAK,eAAe,gCAAgC,KAAK,cAAc,gCAAgC,KAAK,aAAa,sBAAsB,sBAAsB,KAAK,+CAA+C,+yC;;;;;;;;;;;ACAvlB,uiEAAuiE,uGAAuG,sPAAsP,cAAc,6OAA6O,kBAAkB,oUAAoU,iCAAiC,gCAAgC,sxBAAsxB,8DAA8D,gHAAgH,kEAAkE,+aAA+a,oMAAoM,2BAA2B,sUAAsU,2CAA2C,sMAAsM,yCAAyC,kMAAkM,uBAAuB,sRAAsR,KAAK,sBAAsB,4LAA4L,cAAc,kKAAkK,cAAc,gTAAgT,2BAA2B,03EAA03E,gBAAgB,sdAAsd,eAAe,8cAA8c,eAAe,qWAAqW,yCAAyC,kVAAkV,uCAAuC,klBAAklB,yQAAyQ,cAAc,yX;;;;;;;;;;;;;;;;;;;;;;;;ACAz0W;AACnC;AACwB;AACJ;AAExB;AAC4F;AAC5D;AACR;AAO7D;IAeE,2BAAmB,YAAyB,EAAU,gBAAiC,EAAU,cAA8B,EACrH,YAA0B,EAAU,OAAe;QAD7D,iBACkE;QAD/C,iBAAY,GAAZ,YAAY,CAAa;QAAU,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QACrH,iBAAY,GAAZ,YAAY,CAAc;QAAU,YAAO,GAAP,OAAO,CAAQ;QAf7D,qBAAgB,GAAa,CAAC,UAAU,CAAC,CAAC;QAC1C,eAAU,GAAG,IAAI,oEAAkB,EAAY,CAAC;QAChD,WAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,CAAC,MAAM,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC;QACxE,kBAAa,GAAG,IAAI,CAAC;QAGrB,YAAO,GAAQ,EAAE,CAAC;QAElB,WAAM,GAAY,KAAK,CAAC;QACxB,eAAU,GAAY,IAAI,CAAC;QAmBpB,aAAQ,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAC5D,CAAC,CAAC;IAf+D,CAAC;IAElE,oCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,2CAAe,GAAf;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAMD,0CAAc,GAAd;QAAA,iBAIC;QAHC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,aAAG;YAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAiB,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAwB,GAAxB;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,aAAG;YAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAiB,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,kDAAsB,GAAtB;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,aAAG;YACtD,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAiB,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEK,kCAAM,GAAZ;;;;;wBAEE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACnB,qBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;wBAAtB,SAAsB,CAAC;wBACvB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;wBACnC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;;;KACrB;IAED,2CAAe,GAAf,UAAgB,SAAc;QAC5B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC;IACrD,CAAC;IAED,2CAAe,GAAf,UAAgB,GAAQ;QACtB,IAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,EAC3B;YACE,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;SAChD;;YAEC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IAED,qCAAS,GAAT,UAAU,GAAQ;QAChB,IAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,EAC3B;YACE,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;SAC1C;;YAEC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IAED,6GAA6G;IAEvG,yCAAa,GAAnB;;;;gBACE,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;gBACjD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;oBAC3D,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,KAAK,EAAE,CAAC;oBACrD,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACjD,CAAC,CAAC,CAAC;;;;KACJ;IAED,wCAAY,GAAZ;QACE,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QACzC,OAAO;IACT,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAEC;QADC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,CAAC,CAAC;IACvE,CAAC;IAED,2CAAe,GAAf;QAAA,iBAEC;QADC,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,SAAS,GAAG,IAAI,EAArB,CAAqB,CAAC,CAAC;IAClG,CAAC;IAED,6DAAiC,GAAjC,UAAkC,UAAU;QAA5C,iBAEC;QADC,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,QAAQ,GAAG,IAAI,EAApB,CAAoB,CAAC,CAAC;IAC1G,CAAC;IAEO,iCAAK,GAAb,UAAc,EAAU;QAEpB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACzD,CAAC;IArGsB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;wDAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;mDAAC;IAbvB,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,oHAAwC;;SAEzC,CAAC;+EAgBiC,yEAAW,EAA4B,iFAAe,EAA0B,wEAAc;YACvG,oEAAY,EAAmB,sDAAM;OAhBlD,iBAAiB,CAqK7B;IAAD,wBAAC;CAAA;AArK6B;;;;;;;;;;;;ACf9B,+DAA+D,+K;;;;;;;;;;;ACA/D,2IAA2I,MAAM,kL;;;;;;;;;;;;;;;;;;ACAvF;AACQ;AAOlE;IAEE,gCAAmB,SAA+C,EAChC,IAAS;QADxB,cAAS,GAAT,SAAS,CAAsC;QAChC,SAAI,GAAJ,IAAI,CAAK;IAEzC,CAAC;IAEH,yCAAQ,GAAR;IACA,CAAC;IAED,sCAAK,GAAL;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAZU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,yIAA+C;;SAEhD,CAAC;QAIG,6GAAM,CAAC,iEAAe,CAAC;+EADI,8DAAY;OAF/B,sBAAsB,CAalC;IAAD,6BAAC;CAAA;AAbkC;;;;;;;;;;;;;ACRnC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class OrgUser {\r\n    id: any;\r\n    username: any;\r\n    password: any;\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Directive } from '@angular/core';\r\nimport { AbstractControl, FormGroup, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn } from \"@angular/forms\";\r\n\r\n\r\nfunction validatePassword(): ValidatorFn {\r\n  return (control: AbstractControl) => {\r\n    let isValid = false;\r\n    if (control && control instanceof FormGroup) {\r\n      let group = control as FormGroup;\r\n      if (group.controls['passwordA'] && group.controls['passwordB']) {\r\n        isValid = group.controls['passwordA'].value == group.controls['passwordB'].value;\r\n      }\r\n    }\r\n    if (isValid) {\r\n      return null;\r\n    } else {\r\n      return { 'passwordCheck': 'failed' }\r\n    }\r\n  }\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\n@Directive({\r\n  selector: '[appCheckPassword]',\r\n  providers: [{ provide: NG_VALIDATORS, useExisting: CheckPasswordDirectiveService, multi: true }]\r\n})\r\nexport class CheckPasswordDirectiveService implements Validator{\r\n\r\n  private valFn;\r\n\r\n  constructor() {\r\n    this.valFn = validatePassword();\r\n  }\r\n\r\n  validate(c: AbstractControl): ValidationErrors | null {\r\n    return this.valFn(c);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { User } from '../_models/user';\r\nimport { map } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  \r\n  private _baseUrl = 'https://wpms.azurewebsites.net/api/';\r\n  roles: any;\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) { }\r\n\r\n  register(user: any) {\r\n    return this.http.post(this._baseUrl + 'admin/register', user).pipe(\r\n      map((response: any) => {\r\n        const name = response;\r\n      })\r\n    );\r\n  }\r\n\r\n  resetPassword(value: any) {\r\n    return this.http.put(this._baseUrl + 'admin/resetpassword', value);\r\n  }\r\n\r\n  changePassword(values: any) {\r\n    return this.http.put(this._baseUrl + 'admin/changepassword', values);\r\n  }\r\n\r\n  maskUser(id: any) {\r\n    return this.http.put(this._baseUrl + 'admin/maskuser',  id);\r\n  }\r\n\r\n  getUsersOnRole(id: any) {\r\n    return this.http.get(this._baseUrl + 'role/roleusers/' + id);\r\n  }\r\n\r\n  getAllClaims() {\r\n    return this.http.get(this._baseUrl + 'role/claims');\r\n  }\r\n\r\n  getAllRoleWithClaims() {\r\n    return this.http.get(this._baseUrl + 'role/roleclaims');\r\n  }\r\n\r\n  changeRoleClaims(role: any) {\r\n    return this.http.put(this._baseUrl + 'role/roleclaims', role).subscribe();\r\n  }\r\n\r\n  getAllRoles() {\r\n    return this.http.get(this._baseUrl + 'role/role');\r\n  }\r\n\r\n  getUsersWithRoles() {\r\n    return this.http.get(this._baseUrl + 'role/usersWithRoles');\r\n  }\r\n\r\n  updateUserRoles(user: any, roles: {}) {\r\n    return this.http.post(this._baseUrl + 'api/role/editRoles/' + user, roles);\r\n  }\r\n\r\n  // updateUserOrganizations(userId: number) {\r\n  //   this.http.put(this._baseUrl + \"hej\");\r\n  // }\r\n  \r\n  getRoles() {\r\n    return this.http.get(this._baseUrl + 'api/role/getRoles');\r\n  }\r\n\r\n  createCustomRole(role: any) {\r\n    return this.http.post(this._baseUrl + 'role/role', role);\r\n  }\r\n\r\n  deleteCustomRole(role: any) {\r\n    return this.http.delete(this._baseUrl + 'role/role/' + role).subscribe();\r\n  }\r\n\r\n  updateRoleClaims(role: any) {\r\n    return this.http.put(this._baseUrl + 'role/roleclaims', role).subscribe();\r\n  }\r\n\r\n  createRole(roleName: any) {\r\n    const url = this._baseUrl + 'role/role';\r\n    return this.http.post(url, roleName);\r\n  }\r\n\r\n  deleteRole(id: any) {\r\n    var urlDelete = this._baseUrl + 'role/role/' + id;\r\n    return this.http.delete(urlDelete).subscribe();\r\n  }\r\n\r\n  getUsersOrganizations(name: any) {\r\n    return this.http.get(this._baseUrl + \"admin/organizationbyuser/\" + name).pipe();\r\n  }\r\n\r\n  getUsersOrganizationsToken() {\r\n    return this.http.get(this._baseUrl + \"admin/organizationbyusertoken/\");\r\n  }\r\n\r\n  getAllUsers() {\r\n    return this.http.get(this._baseUrl + 'api/users/allusersinorganization');\r\n  }\r\n\r\n  getUsersOrganizationById(userId: number) {\r\n    return this.http.get(this._baseUrl + \"organizationbyuserid/\" + userId);\r\n  }\r\n\r\n  getAllOrganizations() {\r\n    return this.http.get(this._baseUrl + 'admin/organization').pipe();\r\n  }\r\n\r\n\r\n  postNewOrganization(model: any) {\r\n    return this.http.post(this._baseUrl + 'admin/organization', model);\r\n  }\r\n\r\n  updateOrganization(id: any, body: any) {\r\n    var urlToUpdate = this._baseUrl + 'admin/organization/' + id;\r\n    return this.http.put(urlToUpdate, body).subscribe();\r\n  }\r\n\r\n  deleteOrganization(id: any) {\r\n    var urlDelete = this._baseUrl + 'admin/organization/' + id;\r\n    return this.http.delete(urlDelete).subscribe();\r\n  }\r\n\r\n  getAllProjects() {\r\n    return this.http.get(this._baseUrl + 'project/projects');\r\n  }\r\n\r\n  getProjectList() {\r\n    return this.http.get(this._baseUrl + \"project/projectslist/true\");\r\n  }\r\n\r\n  getUnactiveProjectList() {\r\n    return this.http.get(this._baseUrl + \"project/projectslist/false\");\r\n  }\r\n\r\n  getOneProject(id: string) {\r\n    return this.http.get(this._baseUrl + 'project/project/' + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpBackend } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, subscribeOn } from 'rxjs/operators';\r\nimport { User } from '../_models/user';\r\nimport { AdminService } from './admin.service';\r\nimport {JwtHelperService} from '@auth0/angular-jwt';\r\nimport { isSameMonth } from 'ngx-bootstrap';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  roles: any [];\r\n  baseUrl = 'https://wpms.azurewebsites.net/api/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\nlogin(model: any) {\r\n  return this.http.post(this.baseUrl + 'login', model)\r\n  .pipe(map((respone: any) => {\r\n    const user = respone;\r\n    this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n    if (user) {\r\n      localStorage.setItem('token', user.token);\r\n  }\r\n   })\r\n  );\r\n  }\r\n\r\n  FirstLogin(model: any) {\r\n    return this.http.post(this.baseUrl + \"firstlogin\", model)\r\n      .pipe(map((response: any) => {\r\n        const user = response;\r\n        this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n        }\r\n      })\r\n      );\r\n  }\r\n\r\n  secondLogin(model: any, id: number) {\r\n    return this.http.post(this.baseUrl + \"loginorganization/\" + id, model)\r\n    .pipe(map((response: any) => {\r\n      const user = response;\r\n      this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n      if (user) {\r\n        localStorage.setItem('token', user.token);\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n  roleMatch(allowedRoles): boolean {\r\n    let isMatch = false;\r\n    const userRoles = this.decodedToken.role as Array<string>;\r\n    allowedRoles.foreach(element => {\r\n      if (userRoles.includes(element)) {\r\n      isMatch = true;\r\n      return;\r\n      }\r\n    });\r\n    return isMatch;\r\n  }\r\n\r\n  changeOrg(orgId: any) {\r\n    return this.http.get(this.baseUrl + \"changeorganizationtoken/\" + orgId)\r\n    .pipe(map((response: any) => {\r\n      const user = response;\r\n      this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n      if (user) {\r\n        localStorage.setItem('token', user.token);\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n  isSystemAdmin() {\r\n    return this.http.get(this.baseUrl + \"issystemadmin\");\r\n  }\r\n\r\n  getLoggedInUser(){\r\n    return this.http.get(this.baseUrl + \"loggedinuser\");\r\n  }\r\n\r\n  getLoggedInUsersRole() {\r\n    return this.http.get(this.baseUrl + \"loggedinuserroles\");\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpBackend } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n  private _baseUrl = 'https://wpms.azurewebsites.net/api/customer/';\r\n  private _userUrl = 'https://wpms.azurewebsites.net/api/users/';\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\n // Create Activity\r\n  getAllUsersInOrganization() {\r\n    return this.http.get(this._userUrl + \"allusersinorganization\");\r\n  }\r\n\r\n  getAllCustomersForOrganization() {\r\n    return this.http.get(this._baseUrl + \"customers/true\");\r\n  }\r\n\r\n  getAllInactiveCustomersForOrganization() {\r\n    return this.http.get(this._baseUrl + \"customers/false\");\r\n  }\r\n\r\n  getCustomerById(id: number) {\r\n    return this.http.get(this._baseUrl + \"customerwithcustomfields/\" + id);\r\n  }\r\n\r\n  getSpecifiedCustomer(id: number)\r\n  {\r\n    return this.http.get(this._baseUrl + \"customer/\" + id);\r\n  }\r\n\r\n  addNewActivity(newActivity: any) {\r\n    return this.http.post(this._baseUrl + \"activities\", newActivity);\r\n  }\r\n\r\n  addNewActivityWithNextStep(newActivityWithNextStep: any) {\r\n    return this.http.post(this._baseUrl + \"activitynextstep\", newActivityWithNextStep);\r\n  }\r\n\r\n  // Create next step\r\n  addNewNextStep(nextstep: any) {\r\n    return this.http.post(this._baseUrl + \"nextstep\", nextstep);\r\n  }\r\n\r\n  // Customersida\r\n  getContactpersonsByCustomerId(id: number) {\r\n    return this.http.get(this._baseUrl + \"contactpersons/\" + id);\r\n  }\r\n\r\n  addNewContactperson(contact: any) {\r\n    return this.http.post(this._baseUrl + \"contactperson/\", contact);\r\n  }\r\n\r\n  addNewCustomer(customer: any) {\r\n    return this.http.post(this._baseUrl + \"customer\", customer);\r\n  }\r\n\r\n  maskContactperson(contact: any) {\r\n    return this.http.put(this._baseUrl + \"maskcontactperson/\", contact);\r\n  }\r\n\r\n  editContactperson(contact: any) {\r\n    return this.http.put(this._baseUrl + \"contactperson/\", contact);\r\n  }\r\n\r\n  changeResponsibleContact(contact: any) {\r\n    return this.http.put(this._baseUrl + \"responsiblecontactperson/\", contact);\r\n  }\r\n\r\n  getAllProjectsForCustomer(customer: number) {      //! FLYTTA TILL PROJECTSERVICE NÄR DEN BLIR KLAR \r\n    return this.http.get(this._baseUrl + 'project/projectsforcustomer/' + customer);\r\n  }\r\n\r\n  getAllActivitiesForCustomer(customer: number) {\r\n    return this.http.get(this._baseUrl + \"activities/\" + customer + \"/false\");\r\n  }\r\n\r\n  getArchivedActivitiesForCustomer(customer: number) {\r\n    return this.http.get(this._baseUrl + \"activities/\" + customer + \"/true\");\r\n  }\r\n  \r\n  getAllActivitiesForOrganization() { //DESSA\r\n    return this.http.get(this._baseUrl + \"allactivities/false\");\r\n  }\r\n\r\n  getArchivedActivitiesForOrganization() { //DESSA\r\n    return this.http.get(this._baseUrl + \"allactivities/true\");\r\n  }\r\n\r\n  addNewCustomField(customField: any) {\r\n    return this.http.post(this._baseUrl + \"customfield\", customField);\r\n  }\r\n\r\n  deleteCustomField(customField: any) {\r\n    return this.http.delete(this._baseUrl + \"customfield/\" + customField);\r\n  }\r\n\r\n  editCustomer(customer: any) {\r\n    return this.http.put(this._baseUrl + \"customer/\", customer);\r\n  }\r\n\r\n  archiveActivity(activityId: number) {\r\n    return this.http.put(this._baseUrl + \"archiveactivity\", activityId);\r\n  } \r\n\r\n  unArchiveActivity(activityId: number) {\r\n    return this.http.put(this._baseUrl + \"unarchiveactivity\", activityId);\r\n  }\r\n\r\n  getNotificationsForUser() {\r\n    return this.http.get(this._baseUrl + \"usernotifications\");\r\n  }\r\n\r\n  getTodosForUser() {\r\n    return this.http.get(this._baseUrl + \"alltodos/false\");\r\n  }\r\n\r\n  getCheckedTodosForUser() {\r\n    return this.http.get(this._baseUrl + \"alltodos/true\");\r\n  }\r\n\r\n  checkTodo(activityId) {\r\n    return this.http.put(this._baseUrl + \"checktodo/\" + activityId, null);\r\n  }\r\n\r\n  unCheckTodo(activityId) {\r\n    return this.http.put(this._baseUrl + \"unchecktodo/\" + activityId, null);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n\r\n  private BaseUrl = 'https://wpms.azurewebsites.net/api/';\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n\r\n  createProject(project: any) {\r\n    return this.http.post(this.BaseUrl + 'createproject', project);\r\n  }\r\n\r\n  getAllProjectUsers(id: any) {\r\n    return this.http.get(this.BaseUrl + 'projectmembers/' + id);\r\n  }\r\n\r\n  getAllCurrentProjectUsers(id: any) {\r\n    return this.http.get(this.BaseUrl + 'projectmembersinproject/' + id);\r\n  }\r\n\r\n  addUsersToProject(id: any, users: any) {\r\n    return this.http.post(this.BaseUrl + 'createprojectusers/' + id, users);\r\n  }\r\n\r\n  updateTrelloData() {\r\n    return this.http.get(this.BaseUrl + 'trello/updatetrellodata');\r\n  }\r\n\r\n  getAllProjects() {\r\n    return this.http.get(this.BaseUrl + 'projectmembers/' + 'projects');\r\n  }\r\n\r\n  getUserTasks(projectId: any, listId: any) {\r\n    return this.http.get(this.BaseUrl + 'getUserTasks/' + projectId + \"/\" + listId);\r\n  }\r\n\r\n  getProjectValues(id: any) {\r\n    return this.http.get(this.BaseUrl + 'projectvalues/' + id)\r\n  }\r\n\r\n  getBoardLists(Id: any) {\r\n    return this.http.get(this.BaseUrl + 'boardlists/' + Id);\r\n  }\r\n\r\n  getAvaliableBoards() {\r\n    return this.http.get(this.BaseUrl + 'availableboards');\r\n  }\r\n\r\n  changeTrelloBoardConnection(values: any) {\r\n    return this.http.put(this.BaseUrl + 'changetrelloboard', values);\r\n  }\r\n\r\n  removeTrelloBoardConnection(id: any) {\r\n    return this.http.put(this.BaseUrl + 'removetrelloconnection', id);\r\n  }\r\n\r\n  createTrelloBoard(values: any) {\r\n    return this.http.post(this.BaseUrl + 'createtrelloboard', values);\r\n  }\r\n\r\n  changeActiveBool(value: any) {\r\n    return this.http.put(this.BaseUrl + 'changeactiveproject', value);\r\n  }\r\n\r\n  // Projectsidan\r\n  changePriority(values: any) {\r\n    return this.http.put(this.BaseUrl + 'changepriority', values);\r\n  }\r\n\r\n  getDashboardProjects() {\r\n    return this.http.get(this.BaseUrl + 'dashboardprojects');\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \".date {\\r\\n    margin-top: 8px;\\r\\n    font-size: 13px;\\r\\n    padding-left: 0px;\\r\\n}\\r\\n\\r\\ntr {\\r\\n    color: #333333;\\r\\n}\\r\\n\\r\\n.tr-big {\\r\\n    font-size: 15px;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.panel-default {\\r\\n    margin-top: 4px;\\r\\n    margin-bottom: 4px;\\r\\n}\\r\\n\\r\\n.panel-heading {\\r\\n    padding: 10px 10px;\\r\\n}\\r\\n\\r\\n.activity-card {\\r\\n    max-height: 140px; \\r\\n    min-height: 120px; /* Test från att ha fast height på 140px */\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.createActivity-modal {\\r\\n    position: absolute;\\r\\n    z-index: 5000;\\r\\n}\\r\\n\\r\\n.no-overflow {\\r\\n    margin-left: 20px;\\r\\n}\\r\\n\\r\\n.max-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.row-no-padding {\\r\\n    padding: 0px;\\r\\n    margin: 0px;\\r\\n}\\r\\n\\r\\n.no-overflow {\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    display: -webkit-box;\\r\\n    line-height: 18px;\\r\\n    max-height: 70px;\\r\\n    -webkit-line-clamp: 4;\\r\\n}\\r\\n\\r\\n.p {\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n.initials-top {\\r\\n    margin-top: 7px;\\r\\n    overflow: hidden;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.circle-text-user {\\r\\n    display: table-cell;\\r\\n    height: 38px;\\r\\n    width: 38px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n    border-radius: 50%;\\r\\n    background: #F7B543;\\r\\n    color: #fff;\\r\\n    font: 11px \\\"josefin sans\\\", arial;\\r\\n}\\r\\n\\r\\n.circle-text-customer {\\r\\n    display: table-cell;\\r\\n    height: 38px; \\r\\n    width: 38px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n    border-radius: 50%;\\r\\n    background: #03909F;\\r\\n    color: #fff;\\r\\n    font: 11px \\\"josefin sans\\\", arial;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWN0aXZpdHkvYWN0aXZpdHkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixlQUFlO0lBQ2YsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGlCQUFpQixFQUFFLDBDQUEwQztJQUM3RCxXQUFXO0lBQ1gsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsb0JBQW9CO0lBQ3BCLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIscUJBQXFCO0FBRXpCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osV0FBVztJQUNYLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsZ0NBQWdDO0FBQ3BDIiwiZmlsZSI6InNyYy9hcHAvYWN0aXZpdHkvYWN0aXZpdHkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXRlIHtcclxuICAgIG1hcmdpbi10b3A6IDhweDtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIHBhZGRpbmctbGVmdDogMHB4O1xyXG59XHJcblxyXG50ciB7XHJcbiAgICBjb2xvcjogIzMzMzMzMztcclxufVxyXG5cclxuLnRyLWJpZyB7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLnBhbmVsLWRlZmF1bHQge1xyXG4gICAgbWFyZ2luLXRvcDogNHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG59XHJcblxyXG4ucGFuZWwtaGVhZGluZyB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDEwcHg7XHJcbn1cclxuXHJcbi5hY3Rpdml0eS1jYXJkIHtcclxuICAgIG1heC1oZWlnaHQ6IDE0MHB4OyBcclxuICAgIG1pbi1oZWlnaHQ6IDEyMHB4OyAvKiBUZXN0IGZyw6VuIGF0dCBoYSBmYXN0IGhlaWdodCBww6UgMTQwcHggKi9cclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxufVxyXG5cclxuLmNyZWF0ZUFjdGl2aXR5LW1vZGFsIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHotaW5kZXg6IDUwMDA7XHJcbn1cclxuXHJcbi5uby1vdmVyZmxvdyB7XHJcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcclxufVxyXG5cclxuLm1heC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnJvdy1uby1wYWRkaW5nIHtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIG1hcmdpbjogMHB4O1xyXG59XHJcblxyXG4ubm8tb3ZlcmZsb3cge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICBsaW5lLWhlaWdodDogMThweDtcclxuICAgIG1heC1oZWlnaHQ6IDcwcHg7XHJcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDQ7XHJcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xyXG59XHJcblxyXG4ucCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbn1cclxuXHJcbi5pbml0aWFscy10b3Age1xyXG4gICAgbWFyZ2luLXRvcDogN3B4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uY2lyY2xlLXRleHQtdXNlciB7XHJcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xyXG4gICAgaGVpZ2h0OiAzOHB4O1xyXG4gICAgd2lkdGg6IDM4cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZDogI0Y3QjU0MztcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgZm9udDogMTFweCBcImpvc2VmaW4gc2Fuc1wiLCBhcmlhbDtcclxufVxyXG5cclxuLmNpcmNsZS10ZXh0LWN1c3RvbWVyIHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgICBoZWlnaHQ6IDM4cHg7IFxyXG4gICAgd2lkdGg6IDM4cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZDogIzAzOTA5RjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgZm9udDogMTFweCBcImpvc2VmaW4gc2Fuc1wiLCBhcmlhbDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <h3>Latest events</h3>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-9\\\">\\r\\n            <div fxLayout fxLayoutAlign=\\\"left\\\" class=\\\"m-l-30\\\">\\r\\n              <mat-form-field fxFlex=\\\"40%\\\">\\r\\n                <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div *ngIf=\\\"!showArchived\\\">\\r\\n              <button class=\\\"btn btn-default btn-rounded pull-right\\\" (click)=\\\"GetArchivedActivities()\\\">Show\\r\\n                Archived</button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"showArchived\\\">\\r\\n              <button class=\\\"btn btn-default btn-rounded pull-right\\\" (click)=\\\"GetAllActivities()\\\">Hide Archived</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <table mat-table class=\\\"table-hover max-width\\\" [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"date\\\"\\r\\n          matSortDirection=\\\"desc\\\">\\r\\n          <ng-container matColumnDef=\\\"date\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header style=\\\"font-size: 15px;\\\">Date</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <div style=\\\"cursor:pointer\\\" class=\\\"container container-activity\\\" data-toggle=\\\"modal\\\" data-target=\\\".showActivity-modal\\\"\\r\\n                (click)=\\\"activityClick(element.id)\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 col-lg-6 col-sm-12\\\">\\r\\n                    <div class=\\\"panel panel-default\\\">\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-md-12 col-lg-2\\\">\\r\\n                            <h3>Result</h3>\\r\\n                          </div>\\r\\n                          <div class=\\\" col-lg-6 col-md-12 col-sm-10\\\">\\r\\n                            <div class=\\\"initials-top\\\">\\r\\n                              <div class=\\\"circle-text-user\\\" *ngFor=\\\"let user of element.businessParticipants\\\">\\r\\n                                {{user.initials}}\\r\\n                              </div>\\r\\n                              <div class=\\\"circle-text-customer\\\"\\r\\n                                *ngFor=\\\"let contactperson of element.customerParticipiants\\\">\\r\\n                                {{contactperson.initials}}\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-md-12 col-lg-4 date\\\">\\r\\n                            <p class=\\\"pull-right\\\">{{element.date | date: \\\"yyyy-MM-dd HH:mm\\\"}}</p>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"panel-body activity-card\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-lg-2 col-md-3 col-sm-3\\\">\\r\\n                            <table>\\r\\n                              <tbody class=\\\"tr-big\\\">\\r\\n                                <tr>{{element.title}}</tr>\\r\\n                                <tr>{{element.type}}</tr>\\r\\n                                <tr>{{element.creator}}</tr>\\r\\n                              </tbody>\\r\\n                            </table>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-lg-10 col-md-9 col-sm-9\\\">\\r\\n                            <table>\\r\\n                              <tbody>\\r\\n                                <tr>\\r\\n                                  <p class=\\\"no-overflow\\\">\\r\\n                                    {{element.description}}\\r\\n                                  </p>\\r\\n                                </tr>\\r\\n                              </tbody>\\r\\n                            </table>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-6 col-lg-6 col-sm-12\\\">\\r\\n                    <div class=\\\"panel panel-default\\\">\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-md-2\\\">\\r\\n                            <h3>Next</h3>\\r\\n                          </div>\\r\\n                          <div class=\\\" col-lg-6 col-md-12 col-sm-10\\\">\\r\\n                            <div class=\\\"initials-top\\\">\\r\\n                              <div class=\\\"circle-text-user\\\" *ngFor=\\\"let user of element.nextStepBusinessParticipants\\\">\\r\\n                                {{user.initials}}\\r\\n                              </div>\\r\\n                              <div class=\\\"circle-text-customer\\\"\\r\\n                                *ngFor=\\\"let contactperson of element.nextStepCustomerParticipiants\\\">\\r\\n                                {{contactperson.initials}}\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-md-12 col-lg-4 text-center date\\\">\\r\\n                            <p class=\\\"pull-right\\\">{{element.nextStepDate | date: \\\"yyyy-MM-dd HH:mm\\\"}}</p>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"panel-body activity-card\\\">\\r\\n                        <div *ngIf=\\\"element.nextStepTitle === null && element.nextStepCreator === null\\\">\\r\\n                            <h4>No next step found for this activity</h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-lg-2 col-md-3 col-sm-3\\\">\\r\\n                            <table>\\r\\n                              <tbody class=\\\"tr-big\\\">\\r\\n                                <tr>{{element.nextStepTitle}}</tr>\\r\\n                                <tr>{{element.nextStepType}}</tr>\\r\\n                                <tr>{{element.nextStepCreator}}</tr>\\r\\n                              </tbody>\\r\\n                            </table>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-lg-10 col-md-9 col-sm-9\\\">\\r\\n                            <table>\\r\\n                              <tbody>\\r\\n                                <tr>\\r\\n                                  <p class=\\\"no-overflow\\\">\\r\\n                                    {{element.nextStepDescription}}\\r\\n                                  </p>\\r\\n                                </tr>\\r\\n                              </tbody>\\r\\n                            </table>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n\\r\\n        <div *ngIf=\\\"noData | async\\\" class=\\\"no-records\\\">\\r\\n          No activities found for customer\\r\\n        </div>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100, 250]\\\" showFirstLastButtons></mat-paginator>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade showActivity-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <h4 class=\\\"modal-title\\\" id=\\\"myLargeModalLabel\\\">Activity summary</h4>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-7\\\">\\r\\n            <div *ngIf=\\\"!activity.archived\\\">\\r\\n              <!-- Button for archiving an activity-->\\r\\n              <button class=\\\"close pull-right\\\" style=\\\"font-size: 14px; margin-top: 3px;\\\"\\r\\n                (click)=\\\"archiveActivity(activity.id)\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">Archive\\r\\n                <i class=\\\"glyphicon glyphicon-folder-close\\\" style=\\\"margin-left: 5px;\\\"></i></button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"activity.archived\\\">\\r\\n              <!-- Button for unarchiving an activity-->\\r\\n              <button class=\\\"close pull-right\\\" style=\\\"font-size: 14px; margin-top: 3px;\\\"\\r\\n                (click)=\\\"unArchiveActivity(activity.id)\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">Unarchive\\r\\n                <i class=\\\"glyphicon glyphicon-folder-open\\\" style=\\\"margin-left: 5px;\\\"></i></button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-1 text-center\\\">\\r\\n            <button type=\\\"button\\\" id=\\\"closeActivityModal\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n              aria-hidden=\\\"true\\\">×</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <h3>Result</h3>\\r\\n            <h4>{{activity.title}}</h4>\\r\\n            <p>{{activity.date | date: \\\"yyyy-MM-dd HH:mm\\\"}}</p>\\r\\n            <p>{{activity.creator}}</p>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <h3>Next Step</h3>\\r\\n            <div *ngIf=\\\"activity.nextStepTitle === null\\\">\\r\\n              <a data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" (click)=\\\"createNextStep(activity.id)\\\">Lägg till nextstep</a>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"activity.nextStepTitle != null\\\">\\r\\n              <h4>{{activity.nextStepTitle}}</h4>\\r\\n            </div>\\r\\n\\r\\n            <p>{{activity.nextStepDate | date: \\\"yyyy-MM-dd HH:mm\\\"}}</p>\\r\\n            <p>{{activity.nextStepCreator}}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <h4 class=\\\"text-center\\\" style=\\\"background-color: #F1F1F2;\\\">Businessparticipants</h4>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div *ngFor=\\\"let item of activity.businessParticipants\\\">\\r\\n              <p>{{item.fullName}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div *ngFor=\\\"let item of activity.nextStepBusinessParticipants\\\">\\r\\n              <p>{{item.fullName}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <h4 class=\\\"text-center\\\" style=\\\"background-color: #F1F1F2;\\\">Customerparticipants</h4>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div *ngFor=\\\"let item of activity.customerParticipiants\\\">\\r\\n              <p>{{item.name}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div *ngFor=\\\"let item of activity.nextStepCustomerParticipiants\\\">\\r\\n              <p>{{item.name}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <h4 class=\\\"text-center\\\" style=\\\"background-color: #F1F1F2;\\\">Descriptions</h4>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <p>{{activity.description}}</p>\\r\\n          </div>\\r\\n          <div class=\\\"v1\\\"></div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <p>{{activity.nextStepDescription}}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"pull-left\\\"><i class=\\\"ti-angle-left\\\" (click)=\\\"leftClick()\\\"></i></div>\\r\\n          <div class=\\\"pull-right\\\"><i class=\\\"ti-angle-right\\\" (click)=\\\"rightClick()\\\"></i></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div> <!--ShowActivity modal END-->\\r\\n\\r\\n<!-- <div class=\\\"modal fade createActivity-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <app-createActivity [customerId]=\\\"id\\\"></app-createActivity>\\r\\n    </div>\\r\\n  </div>\\r\\n</div> -->\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatTableDataSource, MatSortModule, MatSort, MatFormFieldModule, MatInputModule } from '@angular/material';\r\nimport { map } from 'rxjs/operators';\r\nimport { Activity } from '../_models/activity';\r\nimport { CustomerService } from '../_services/customer.service';\r\nimport { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: \"app-activity\",\r\n  templateUrl: \"./activity.component.html\",\r\n  styleUrls: [\"./activity.component.css\"]\r\n})\r\nexport class ActivityComponent implements OnInit {\r\n  id: number;\r\n  displayedColumns: string[] = [\"date\"];\r\n  dataSource = new MatTableDataSource<Activity>();\r\n  noData = this.dataSource.connect().pipe(map(data => data.length === 0));\r\n  activity: any = {};\r\n  showArchived: boolean = false;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    public _authService: AuthService, \r\n    private _customerService: CustomerService,\r\n    private _activatedroute: ActivatedRoute,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.GetCurrentCustomer();\r\n    this.GetAllActivities();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  GetCurrentCustomer() {\r\n    this._activatedroute.params.subscribe(params => {\r\n      this.id = params[\"id\"];\r\n    });\r\n  }\r\n\r\n  GetAllActivities() {\r\n    this.showArchived = false;\r\n    this._customerService\r\n      .getAllActivitiesForCustomer(this.id)\r\n      .subscribe(res => {\r\n        this.dataSource.data = res as Activity[];\r\n      });\r\n  }\r\n\r\n  GetArchivedActivities() {\r\n    this.showArchived = true;\r\n    this._customerService\r\n      .getArchivedActivitiesForCustomer(this.id)\r\n      .subscribe(res => {\r\n        this.dataSource.data = res as Activity[];\r\n      });\r\n  }\r\n\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  };\r\n\r\n  activityClick(activityId: number) {\r\n    for (let i = 0; i < this.dataSource.data.length; i++) \r\n    {\r\n      if(this.dataSource.data[i].id == activityId)\r\n      {\r\n        this.activity = this.dataSource.data[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  createNextStep(activityId) {\r\n    this._router.navigateByUrl('createnextstep/' + activityId + \"/\" + this.id);\r\n  }\r\n\r\n  async archiveActivity(activityId: any) {\r\n    this._customerService.archiveActivity(activityId).subscribe();\r\n    await this.delay(500);\r\n    this.GetAllActivities();\r\n  }\r\n\r\n  async unArchiveActivity(activityId: any) {\r\n    this._customerService.unArchiveActivity(activityId).subscribe();\r\n    await this.delay(500);\r\n    this.GetAllActivities();\r\n  }\r\n\r\n  leftClick() {\r\n    console.log(\"Left Click\");\r\n  }\r\n\r\n  rightClick() {\r\n    console.log(\"Right Click\");\r\n  }\r\n\r\n  private delay(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}\r\n","module.exports = \".date {\\r\\n    margin-top: 8px;\\r\\n    font-size: 13px;\\r\\n    padding-left: 0px;\\r\\n}\\r\\n\\r\\ntr {\\r\\n    color: #333333;\\r\\n}\\r\\n\\r\\n.tr-big {\\r\\n    font-size: 15px;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.panel-default {\\r\\n    margin-top: 4px;\\r\\n    margin-bottom: 4px;\\r\\n}\\r\\n\\r\\n.panel-heading {\\r\\n    padding: 10px 10px;\\r\\n}\\r\\n\\r\\n.activity-card {\\r\\n    max-height: 140px; \\r\\n    min-height: 120px; /* Test från att ha fast height på 140px */\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.createActivity-modal {\\r\\n    position: absolute;\\r\\n    z-index: 5000;\\r\\n}\\r\\n\\r\\n.no-overflow {\\r\\n    margin-left: 20px;\\r\\n}\\r\\n\\r\\n.max-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.row-no-padding {\\r\\n    padding: 0px;\\r\\n    margin: 0px;\\r\\n}\\r\\n\\r\\n.no-overflow {\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    display: -webkit-box;\\r\\n    line-height: 18px;\\r\\n    max-height: 70px;\\r\\n    -webkit-line-clamp: 4;\\r\\n}\\r\\n\\r\\n.p {\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n.initials-top {\\r\\n    margin-top: 7px;\\r\\n    overflow: hidden;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.circle-text-user {\\r\\n    display: table-cell;\\r\\n    height: 38px;\\r\\n    width: 38px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n    border-radius: 50%;\\r\\n    background: #F7B543;\\r\\n    color: #fff;\\r\\n    font: 11px \\\"josefin sans\\\", arial;\\r\\n}\\r\\n\\r\\n.circle-text-customer {\\r\\n    display: table-cell;\\r\\n    height: 38px; \\r\\n    width: 38px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n    border-radius: 50%;\\r\\n    background: #03909F;\\r\\n    color: #fff;\\r\\n    font: 11px \\\"josefin sans\\\", arial;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWN0aXZpdHkvYWxsLWFjdGl2aXRpZXMvYWxsLWFjdGl2aXRpZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixlQUFlO0lBQ2YsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGlCQUFpQixFQUFFLDBDQUEwQztJQUM3RCxXQUFXO0lBQ1gsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsb0JBQW9CO0lBQ3BCLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIscUJBQXFCO0FBRXpCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osV0FBVztJQUNYLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsZ0NBQWdDO0FBQ3BDIiwiZmlsZSI6InNyYy9hcHAvYWN0aXZpdHkvYWxsLWFjdGl2aXRpZXMvYWxsLWFjdGl2aXRpZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXRlIHtcclxuICAgIG1hcmdpbi10b3A6IDhweDtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIHBhZGRpbmctbGVmdDogMHB4O1xyXG59XHJcblxyXG50ciB7XHJcbiAgICBjb2xvcjogIzMzMzMzMztcclxufVxyXG5cclxuLnRyLWJpZyB7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLnBhbmVsLWRlZmF1bHQge1xyXG4gICAgbWFyZ2luLXRvcDogNHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG59XHJcblxyXG4ucGFuZWwtaGVhZGluZyB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDEwcHg7XHJcbn1cclxuXHJcbi5hY3Rpdml0eS1jYXJkIHtcclxuICAgIG1heC1oZWlnaHQ6IDE0MHB4OyBcclxuICAgIG1pbi1oZWlnaHQ6IDEyMHB4OyAvKiBUZXN0IGZyw6VuIGF0dCBoYSBmYXN0IGhlaWdodCBww6UgMTQwcHggKi9cclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxufVxyXG5cclxuLmNyZWF0ZUFjdGl2aXR5LW1vZGFsIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHotaW5kZXg6IDUwMDA7XHJcbn1cclxuXHJcbi5uby1vdmVyZmxvdyB7XHJcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcclxufVxyXG5cclxuLm1heC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnJvdy1uby1wYWRkaW5nIHtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIG1hcmdpbjogMHB4O1xyXG59XHJcblxyXG4ubm8tb3ZlcmZsb3cge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICBsaW5lLWhlaWdodDogMThweDtcclxuICAgIG1heC1oZWlnaHQ6IDcwcHg7XHJcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDQ7XHJcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xyXG59XHJcblxyXG4ucCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbn1cclxuXHJcbi5pbml0aWFscy10b3Age1xyXG4gICAgbWFyZ2luLXRvcDogN3B4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uY2lyY2xlLXRleHQtdXNlciB7XHJcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xyXG4gICAgaGVpZ2h0OiAzOHB4O1xyXG4gICAgd2lkdGg6IDM4cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZDogI0Y3QjU0MztcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgZm9udDogMTFweCBcImpvc2VmaW4gc2Fuc1wiLCBhcmlhbDtcclxufVxyXG5cclxuLmNpcmNsZS10ZXh0LWN1c3RvbWVyIHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgICBoZWlnaHQ6IDM4cHg7IFxyXG4gICAgd2lkdGg6IDM4cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZDogIzAzOTA5RjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgZm9udDogMTFweCBcImpvc2VmaW4gc2Fuc1wiLCBhcmlhbDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div *ngIf=\\\"url == '/allactivities'\\\">\\r\\n                <h2>All Activities</h2>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"url == '/todos'\\\">\\r\\n                <h2>Todos</h2>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-9 pull-right\\\">\\r\\n              <!--Kolla ifall om på todo eller på activities-->\\r\\n\\r\\n              <div *ngIf=\\\"url == '/allactivities'\\\">\\r\\n                <div *ngIf=\\\"!showArchived\\\">\\r\\n                  <button class=\\\"btn btn-default btn-rounded pull-right\\\" (click)=\\\"GetArchivedActivities()\\\">Show\\r\\n                    Archived</button>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"showArchived\\\">\\r\\n                  <button class=\\\"btn btn-default btn-rounded pull-right\\\" (click)=\\\"GetAllActivities()\\\">Hide\\r\\n                    Archived</button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"url == '/todos'\\\">\\r\\n                <div *ngIf=\\\"!showChecked\\\">\\r\\n                  <button class=\\\"btn btn-default btn-rounded pull-right\\\" (click)=\\\"GetCheckedTodos()\\\">Show\\r\\n                    Checked</button>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"showChecked\\\">\\r\\n                  <button class=\\\"btn btn-default btn-rounded pull-right\\\" (click)=\\\"GetAllActivities()\\\">Hide\\r\\n                    Checked</button>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div fxLayout fxLayoutAlign=\\\"left\\\" class=\\\"m-l-30\\\">\\r\\n                <mat-form-field fxFlex=\\\"32%\\\">\\r\\n                  <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <table mat-table class=\\\"table-hover max-width\\\" [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"date\\\"\\r\\n            matSortDirection=\\\"asc\\\">\\r\\n            <ng-container matColumnDef=\\\"date\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header style=\\\"font-size: 15px;\\\">Date</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                <div class=\\\"container container-activity\\\" data-toggle=\\\"modal\\\" data-target=\\\".showActivity-modal\\\"\\r\\n                  (click)=\\\"activityClick(element.id)\\\">\\r\\n                  <div #then>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6 col-lg-6 col-sm-12\\\">\\r\\n                      <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-lg-2 col-md-12\\\">\\r\\n                              <h3>Result</h3>\\r\\n                            </div>\\r\\n                            <div class=\\\" col-lg-6 col-md-12 col-sm-10\\\">\\r\\n                              <div class=\\\"initials-top\\\">\\r\\n                                <div class=\\\"circle-text-user\\\" *ngFor=\\\"let user of element.businessParticipants\\\">\\r\\n                                  {{user.initials}}\\r\\n                                </div>\\r\\n                                <div class=\\\"circle-text-customer\\\"\\r\\n                                  *ngFor=\\\"let contactperson of element.customerParticipiants\\\">\\r\\n                                  {{contactperson.initials}}\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-4 col-md-12 date\\\">\\r\\n                              <p class=\\\"pull-right\\\">{{element.date | date: \\\"yyyy-MM-dd HH:mm\\\"}}</p>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel-body activity-card\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-lg-2 col-md-3 col-sm-3\\\">\\r\\n                              <table>\\r\\n                                <tbody class=\\\"tr-big\\\">\\r\\n                                  <tr>{{element.title}}</tr>\\r\\n                                  <tr>{{element.type}}</tr>\\r\\n                                  <tr>{{element.creator}}</tr>\\r\\n                                </tbody>\\r\\n                              </table>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-10 col-md-9 col-sm-9\\\">\\r\\n                              <table>\\r\\n                                <tbody>\\r\\n                                  <tr>\\r\\n                                    <p class=\\\"no-overflow\\\">\\r\\n                                      {{element.description}}\\r\\n                                    </p>\\r\\n                                  </tr>\\r\\n                                </tbody>\\r\\n                              </table>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-6 col-lg-6 col-sm-12\\\">\\r\\n                      <div class=\\\"panel panel-default\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-2\\\">\\r\\n                              <h3>Next</h3>\\r\\n                            </div>\\r\\n                            <div class=\\\" col-lg-6 col-md-12 col-sm-10\\\">\\r\\n                              <div class=\\\"initials-top\\\">\\r\\n                                <div class=\\\"circle-text-user\\\" *ngFor=\\\"let user of element.nextStepBusinessParticipants\\\">\\r\\n                                  {{user.initials}}\\r\\n                                </div>\\r\\n                                <div class=\\\"circle-text-customer\\\"\\r\\n                                  *ngFor=\\\"let contactperson of element.nextStepCustomerParticipiants\\\">\\r\\n                                  {{contactperson.initials}}\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-12 col-lg-4 date\\\">\\r\\n                              <p class=\\\"pull-right\\\">{{element.nextStepDate | date: \\\"yyyy-MM-dd HH:mm\\\"}}</p>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"panel-body activity-card\\\">\\r\\n                          <div *ngIf=\\\"element.nextStepTitle === null && element.nextStepCreator === null && url == '/allactivities'\\\">\\r\\n                            <h4>No next step found for this activity</h4>\\r\\n                          </div>\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-lg-2 col-md-3 col-sm-3\\\">\\r\\n                              <table>\\r\\n                                <tbody class=\\\"tr-big\\\">\\r\\n                                  <tr>{{element.nextStepTitle}}</tr>\\r\\n                                  <tr>{{element.nextStepType}}</tr>\\r\\n                                  <tr>{{element.nextStepCreator}}</tr>\\r\\n                                </tbody>\\r\\n                              </table>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-10 col-md-9 col-sm-9\\\">\\r\\n                              <table>\\r\\n                                <tbody>\\r\\n                                  <tr>\\r\\n                                    <p class=\\\"no-overflow\\\">\\r\\n                                      {{element.nextStepDescription}}\\r\\n                                    </p>\\r\\n                                  </tr>\\r\\n                                </tbody>\\r\\n                              </table>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n          </table>\\r\\n\\r\\n          <div *ngIf=\\\"noData | async\\\" class=\\\"no-records\\\"> <!--Todo fixa beroende på url-->\\r\\n            No activities found for organization\\r\\n          </div>\\r\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100, 250]\\\" showFirstLastButtons></mat-paginator>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"modal fade showActivity-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <!--If on allactivity view-->\\r\\n    <div *ngIf=\\\"url == '/allactivities'\\\" class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"myLargeModalLabel\\\">Activity summary</h4>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-7\\\">\\r\\n                <div *ngIf=\\\"!activity.archived\\\">\\r\\n                  <button class=\\\"close pull-right\\\" style=\\\"font-size: 14px; margin-top: 3px;\\\"\\r\\n                    (click)=\\\"archiveActivity(activity.id)\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">Archive\\r\\n                    <i class=\\\"glyphicon glyphicon-folder-close\\\" style=\\\"margin-left: 5px;\\\"></i></button>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"activity.archived\\\">\\r\\n                  <button class=\\\"close pull-right\\\" style=\\\"font-size: 14px; margin-top: 3px;\\\"\\r\\n                    (click)=\\\"unArchiveActivity(activity.id)\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">Unarchive\\r\\n                    <i class=\\\"glyphicon glyphicon-folder-open\\\" style=\\\"margin-left: 5px;\\\"></i></button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1 text-center\\\">\\r\\n                <button type=\\\"button\\\" id=\\\"closeActivityModal\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n                  aria-hidden=\\\"true\\\">×</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <h3>Result</h3>\\r\\n                <h4>{{activity.title}}</h4>\\r\\n                <p>{{activity.date | date: \\\"yyyy-MM-dd HH:mm\\\"}}</p>\\r\\n                <p>{{activity.creator}}</p>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <h3>Next Step</h3>\\r\\n                <div *ngIf=\\\"activity.nextStepTitle === null\\\">\\r\\n                  <a data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" (click)=\\\"createNextStep(activity.id)\\\">Lägg till\\r\\n                    nextstep</a>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"activity.nextStepTitle != null\\\">\\r\\n                  <h4>{{activity.nextStepTitle}}</h4>\\r\\n                </div>\\r\\n\\r\\n                <p>{{activity.nextStepDate | date: \\\"yyyy-MM-dd HH:mm\\\"}}</p>\\r\\n                <p>{{activity.nextStepCreator}}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <h4 class=\\\"text-center\\\" style=\\\"background-color: #F1F1F2;\\\">Businessparticipants</h4>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div *ngFor=\\\"let item of activity.businessParticipants\\\">\\r\\n                  <p>{{item.fullName}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div *ngFor=\\\"let item of activity.nextStepBusinessParticipants\\\">\\r\\n                  <p>{{item.fullName}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <h4 class=\\\"text-center\\\" style=\\\"background-color: #F1F1F2;\\\">Customerparticipants</h4>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div *ngFor=\\\"let item of activity.customerParticipiants\\\">\\r\\n                  <p>{{item.name}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div *ngFor=\\\"let item of activity.nextStepCustomerParticipiants\\\">\\r\\n                  <p>{{item.name}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <h4 class=\\\"text-center\\\" style=\\\"background-color: #F1F1F2;\\\">Descriptions</h4>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <p>{{activity.description}}</p>\\r\\n              </div>\\r\\n              <div class=\\\"v1\\\"></div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <p>{{activity.nextStepDescription}}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"pull-left\\\"><i class=\\\"ti-angle-left\\\" (click)=\\\"leftClick()\\\"></i></div>\\r\\n              <div class=\\\"pull-right\\\"><i class=\\\"ti-angle-right\\\" (click)=\\\"rightClick()\\\"></i></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--If on todo view-->\\r\\n    <div *ngIf=\\\"url == '/todos'\\\">\\r\\n      <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <div class=\\\"row no-gutters\\\">\\r\\n              <div class=\\\"col-md-8 pull-left\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"myLargeModalLabel\\\" style=\\\"display: inline;\\\">Todo summary</h4>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <div *ngIf=\\\"!activity.todoChecked\\\">\\r\\n                    <button class=\\\"close pull-right\\\" style=\\\"font-size: 15px; margin-top: 3px;\\\"\\r\\n                    (click)=\\\"markTodoDone(activity.id)\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">Done\\r\\n                    <i class=\\\"mdi mdi-checkbox-marked-outline\\\" style=\\\"margin-left: 5px;\\\"></i></button>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"activity.todoChecked\\\">\\r\\n                    <button class=\\\"close pull-right\\\" style=\\\"font-size: 15px; margin-top: 3px;\\\"\\r\\n                    (click)=\\\"markTodoNotDone(activity.id)\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">Not Done\\r\\n                    <i class=\\\"mdi mdi-checkbox-blank-outline\\\" style=\\\"margin-left: 5px;\\\"></i></button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\">\\r\\n              <button type=\\\"button\\\" id=\\\"closeActivityModal\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\"\\r\\n              style=\\\"display: inline;\\\">×</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <h4>{{activity.title}}</h4>\\r\\n                <p>{{activity.date | date: \\\"yyyy-MM-dd HH:mm\\\"}}</p>\\r\\n                <p>{{activity.creator}}</p>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-7\\\">\\r\\n                <p>{{activity.description}}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--ShowActivity modal END-->\"","import { Component, OnInit, ViewChild, AfterViewInit, Input } from '@angular/core';\r\nimport { MatPaginator, MatTableDataSource, MatSortModule, MatSort, MatFormFieldModule, MatInputModule } from '@angular/material';\r\nimport { map } from 'rxjs/operators';\r\nimport { Activity } from '../../_models/activity';\r\nimport { CustomerService } from '../../_services/customer.service';\r\nimport { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { AuthService } from '../../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-all-activities',\r\n  templateUrl: './all-activities.component.html',\r\n  styleUrls: ['./all-activities.component.css']\r\n})\r\nexport class AllActivitiesComponent implements OnInit {\r\n  id: number;\r\n  displayedColumns: string[] = [\"date\"];\r\n  dataSource = new MatTableDataSource<Activity>();\r\n  noData = this.dataSource.connect().pipe(map(data => data.length === 0));\r\n  activity: any = {};\r\n  showArchived: boolean = false;\r\n  showChecked: boolean = false;\r\n  url: any;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    public _authService: AuthService, \r\n    private _customerService: CustomerService,\r\n    private _activatedroute: ActivatedRoute,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.checkUrl();\r\n    this.GetAllActivities();\r\n  }\r\n  \r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  \r\n  checkUrl() {\r\n    this.url = this._router.url;\r\n  }\r\n\r\n  GetAllActivities() {\r\n    if(this.url == '/allactivities')\r\n    {\r\n    this.showArchived = false;\r\n    this._customerService\r\n      .getAllActivitiesForOrganization()\r\n      .subscribe(res => {\r\n        this.dataSource.data = res as Activity[];\r\n      });\r\n    }\r\n    else if(this.url == '/todos')\r\n    {\r\n      this.showChecked = false;\r\n      this._customerService\r\n      .getTodosForUser()\r\n      .subscribe(res => {\r\n        this.dataSource.data = res as Activity[];\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  GetArchivedActivities() {\r\n    this.showArchived = true;\r\n    this._customerService\r\n      .getArchivedActivitiesForOrganization()\r\n      .subscribe(res => {\r\n        this.dataSource.data = res as Activity[];\r\n      });\r\n  }\r\n\r\n  GetCheckedTodos() {\r\n    this.showChecked = true;\r\n    this._customerService\r\n      .getCheckedTodosForUser()\r\n      .subscribe(res => {\r\n        this.dataSource.data = res as Activity[];\r\n      });\r\n  }\r\n\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  };\r\n\r\n  activityClick(activityId: number) {\r\n    for (let i = 0; i < this.dataSource.data.length; i++) \r\n    {\r\n      if(this.dataSource.data[i].id == activityId)\r\n      {\r\n        this.activity = this.dataSource.data[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  createNextStep(activityId) {\r\n    this._router.navigateByUrl('createnextstep/' + activityId + \"/\" + this.id);\r\n  }\r\n\r\n  async archiveActivity(activityId: any) {\r\n    this._customerService.archiveActivity(activityId).subscribe();\r\n    await this.delay(500);\r\n    this.GetAllActivities();\r\n  }\r\n\r\n  async unArchiveActivity(activityId: any) {\r\n    this._customerService.unArchiveActivity(activityId).subscribe();\r\n    await this.delay(500);\r\n    this.GetAllActivities();\r\n  }\r\n\r\n  async markTodoDone(activityId: any) {\r\n    document.getElementById(\"closeActivityModal\").click();\r\n    this._customerService.checkTodo(activityId).subscribe();\r\n    await this.delay(500);\r\n    this.GetAllActivities();\r\n  }\r\n\r\n  async markTodoNotDone(activityId: any) {\r\n    document.getElementById(\"closeActivityModal\").click();\r\n    this._customerService.unCheckTodo(activityId).subscribe();\r\n    await this.delay(500);\r\n    this.GetCheckedTodos();\r\n  }\r\n\r\n  leftClick() {\r\n    console.log(\"Left Click\");\r\n  }\r\n\r\n  rightClick() {\r\n    console.log(\"Right Click\");\r\n  }\r\n\r\n  private delay(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}","module.exports = \".topz {\\r\\n    position: relative;\\r\\n    z-index: 10040;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWN0aXZpdHkvY3JlYXRlQWN0aXZpdHkvY3JlYXRlQWN0aXZpdHkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvYWN0aXZpdHkvY3JlYXRlQWN0aXZpdHkvY3JlYXRlQWN0aXZpdHkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b3B6IHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHotaW5kZXg6IDEwMDQwO1xyXG59Il19 */\"","module.exports = \"<div *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"panel\\\">\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h2 class=\\\"modal-title pull-left m-b-15\\\">Create Activity</h2>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <form class=\\\"form-group\\\" (ngSubmit)=\\\"addActivity(activityForm.value)\\\" #activityForm=\\\"ngForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"col-md-6 form-group\\\">\\r\\n                  <label>Title</label>\\r\\n                  <input type=\\\"text\\\" required minlength=\\\"2\\\" maxlength=\\\"20\\\" class=\\\"form-control\\\" name=\\\"title\\\" ngModel>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-6 col-xs-12\\\">\\r\\n                  <div *ngIf=\\\"!isCustomer\\\">\\r\\n                    <label>Choose Customer</label>\\r\\n                    <select type=\\\"text\\\" class=\\\"form-control\\\" ngModel name=\\\"customerId\\\" #customer=\\\"ngModel\\\"\\r\\n                      (change)=\\\"getAllContactsForSelectedCustomer($event.target.value)\\\">\\r\\n                      <option *ngFor=\\\"let customer of customers\\\" [value]=\\\"customer?.id\\\">{{customer?.name}}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"isCustomer\\\">\\r\\n                    <label>Choosen Customer</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{customer?.name}}\\\" readonly=\\\"readonly\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"form-group col-md-6 col-xs-12 pull-left\\\">\\r\\n                  <label>Type</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" ngModel name=\\\"type\\\" #type=\\\"ngModel\\\">\\r\\n                    <option *ngFor=\\\"let type of types\\\">{{type}}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-6 col-xs-12 pull-right\\\" #createActivityModal>\\r\\n                  <label style=\\\"margin-right: 6px;\\\">Date</label>\\r\\n                  <br>\\r\\n                  <mat-form-field class=\\\"topz\\\">\\r\\n                    <input matInput [matDatepickerFilter]=\\\"myFilter\\\" [matDatepicker]=\\\"picker\\\"\\r\\n                      (dateChange)=\\\"setDate(picker)\\\" ngModel name=\\\"date\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker touchUi #picker></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                  <input class=\\\"m-l-15\\\" type=\\\"time\\\" value=\\\"{{model?.time}}\\\" [(ngModel)]=\\\"model.time\\\" name=\\\"time\\\"\\r\\n                    #time=\\\"ngModel\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label>Result</label>\\r\\n                  <textarea type=\\\"text\\\" rows=\\\"8\\\" class=\\\"form-control\\\" required minlength=\\\"2\\\" maxlength=\\\"1000\\\" ngModel\\r\\n                    name=\\\"description\\\" #result=\\\"ngModel\\\">\\r\\n                    </textarea>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group col-md-6 pull-left\\\">\\r\\n                <label>Businessparticipants</label>\\r\\n                <mat-selection-list ngModel name=\\\"UsersForActivity\\\">\\r\\n                  <mat-list-option *ngFor=\\\"let businessParticipant of businessParticipants\\\"\\r\\n                    [value]=\\\"businessParticipant\\\">\\r\\n                    {{businessParticipant?.fullName}}\\r\\n                  </mat-list-option>\\r\\n                </mat-selection-list>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group col-md-6 pull-right\\\">\\r\\n                <label>Customerparticipants</label>\\r\\n                <mat-selection-list ngModel name=\\\"ContactpersonsForActivity\\\">\\r\\n                  <mat-list-option *ngFor=\\\"let customerParticipant of customerParticipants\\\"\\r\\n                    [value]=\\\"customerParticipant\\\">\\r\\n                    {{customerParticipant?.name}}\\r\\n                  </mat-list-option>\\r\\n                </mat-selection-list>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!--Nextstep Panel-->\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"panel-group\\\" id=\\\"accordion-test-2\\\">\\r\\n                  <div class=\\\"panel panel-primary panel-color\\\">\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <h4 class=\\\"panel-title\\\">\\r\\n                        <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion-test-2\\\" href=\\\"#collapseOne-2\\\"\\r\\n                          aria-expanded=\\\"false\\\" class=\\\"collapsed\\\">\\r\\n                          Nextstep\\r\\n                        </a>\\r\\n                      </h4>\\r\\n                    </div>\\r\\n                    <div id=\\\"collapseOne-2\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                      <div class=\\\"panel-body\\\">\\r\\n                        <!--Form för nextstep-->\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"col-md-6 form-group\\\">\\r\\n                              <label>Title</label>\\r\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" ngModel name=\\\"nextstepTitle\\\">\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group col-md-6 col-xs-12 pull-left\\\">\\r\\n                              <label>Type</label>\\r\\n                              <select type=\\\"text\\\" class=\\\"form-control\\\" ngModel name=\\\"nextstepType\\\" #type=\\\"ngModel\\\">\\r\\n                                <option *ngFor=\\\"let type of types\\\">{{type}}</option>\\r\\n                              </select>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group col-md-6 col-xs-12 pull-right\\\" #createActivityModal>\\r\\n                              <label style=\\\"margin-right: 6px;\\\">Date</label>\\r\\n                              <br>\\r\\n                              <mat-form-field>\\r\\n                                <input matInput [matDatepickerFilter]=\\\"myFilter\\\" [matDatepicker]=\\\"pickernextstep\\\"\\r\\n                                  (dateChange)=\\\"setNextStepDate(picker)\\\" ngModel name=\\\"nextstepDate\\\">\\r\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"pickernextstep\\\"></mat-datepicker-toggle>\\r\\n                                <mat-datepicker touchUi #pickernextstep></mat-datepicker>\\r\\n                              </mat-form-field>\\r\\n\\r\\n                              <input class=\\\"m-l-15\\\" type=\\\"time\\\" value=\\\"{{model?.nextstepTime}}\\\"\\r\\n                                [(ngModel)]=\\\"model.nextstepTime\\\" name=\\\"nextstepTime\\\" #time=\\\"ngModel\\\">\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group col-md-12\\\">\\r\\n                              <label>Result</label>\\r\\n                              <textarea type=\\\"text\\\" rows=\\\"8\\\" class=\\\"form-control\\\" required minlength=\\\"2\\\"\\r\\n                                maxlength=\\\"1000\\\" ngModel name=\\\"nextstepDescription\\\" #result=\\\"ngModel\\\">\\r\\n                                    </textarea>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"form-group col-md-6 pull-left\\\">\\r\\n                            <label>Businessparticipants</label>\\r\\n                            <mat-selection-list ngModel name=\\\"nextstepUsersForActivity\\\">\\r\\n                              <mat-list-option *ngFor=\\\"let businessParticipant of businessParticipants\\\"\\r\\n                                [value]=\\\"businessParticipant\\\">\\r\\n                                {{businessParticipant?.fullName}}\\r\\n                              </mat-list-option>\\r\\n                            </mat-selection-list>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group col-md-6 pull-right\\\">\\r\\n                            <label>Customerparticipants</label>\\r\\n                            <mat-selection-list ngModel name=\\\"nextstepContactpersonsForActivity\\\">\\r\\n                              <mat-list-option *ngFor=\\\"let customerParticipant of customerParticipants\\\"\\r\\n                                [value]=\\\"customerParticipant\\\">\\r\\n                                {{customerParticipant?.name}}\\r\\n                              </mat-list-option>\\r\\n                            </mat-selection-list>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\"></div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <div class=\\\"col-md-5 col-md-offset-7\\\">\\r\\n                  <div class=\\\"col-md-8\\\">\\r\\n                    <mat-selection-list #nextstep (click)=\\\"changeSelected()\\\">\\r\\n                      <mat-list-option>\\r\\n                        Include Nextstep\\r\\n                      </mat-list-option>\\r\\n                    </mat-selection-list>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\" style=\\\"padding-top: 10px;\\\">\\r\\n                    <button class=\\\"btn btn-primary btn-rounded waves-effect waves-light\\\" type=\\\"submit\\\">Create\\r\\n                      Activity</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, AfterViewInit, Input, ElementRef, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomerService } from '../../_services/customer.service';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDatepickerModule, MatInputModule, MatNativeDateModule } from '@angular/material';\r\nimport { AmazingTimePickerService } from 'amazing-time-picker';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-createActivity',\r\n  templateUrl: './createActivity.component.html',\r\n  styleUrls: ['./createActivity.component.css']\r\n})\r\nexport class CreateActivityComponent implements OnInit, AfterViewInit {\r\n  model: any = {};\r\n  customers: any;\r\n  types: string[] = ['Telephone', 'Email', 'Meeting', 'ToDo'];\r\n  businessParticipants: any = [];\r\n  customerParticipants: any = [];\r\n  includeNextStep: boolean = false;\r\n  customer: any = {};\r\n  isCustomer: boolean = false; \r\n\r\n  @Input() customerId: number = 0;\r\n\r\n  myFilter = (d: Date): boolean => {\r\n    const day = d.getDay();\r\n    // Prevent Saturday and Sunday from being selected.\r\n    return day !== 0 && day !== 6;\r\n  }\r\n\r\n  constructor(public _authService: AuthService, private _activatedroute: ActivatedRoute, private _customerService: CustomerService, private _router: Router, private _atp: AmazingTimePickerService) { }\r\n\r\n  ngOnInit() {\r\n    this.checkIfOnCustomerComponent();\r\n  }\r\n  \r\n  ngAfterViewInit() {\r\n    this.getAllCustomers();\r\n    this.getAllUsers();\r\n  }\r\n\r\n  async checkIfOnCustomerComponent() {\r\n    if(this.customerId == 0)\r\n    {\r\n      this.isCustomer = false;\r\n    }\r\n    else if(this.customerId > 0)\r\n    {\r\n      this.isCustomer = true;\r\n      this._customerService.getSpecifiedCustomer(this.customerId).subscribe(data => {\r\n        this.customer = data;\r\n      });\r\n      await this.delay(800);\r\n      this.getAllContactsForSelectedCustomer(this.customer.id);\r\n    }\r\n  }\r\n\r\n  getAllCustomers() {  \r\n    this._customerService.getAllCustomersForOrganization().subscribe(data => this.customers = data);\r\n  }\r\n\r\n  getAllUsers() {\r\n    this._customerService.getAllUsersInOrganization().subscribe(data => this.businessParticipants = data);\r\n  }\r\n\r\n  getAllContactsForSelectedCustomer(customerId) { // Hämtar alla kontaktpersoner för en viss kund\r\n    this._customerService.getContactpersonsByCustomerId(customerId).subscribe(data => this.customerParticipants = data);\r\n  }\r\n\r\n  addActivity(value: any) {\r\n    console.log(value);\r\n    if(this.isCustomer)\r\n    {\r\n      value.customerId = this.customer.id;\r\n    }\r\n    if(this.includeNextStep)\r\n    {\r\n      this._customerService.addNewActivityWithNextStep(value).subscribe();\r\n    }\r\n    else if (!this.includeNextStep)\r\n    {\r\n      this._customerService.addNewActivity(value).subscribe();\r\n    }\r\n  }\r\n\r\n  changeSelected()\r\n  {\r\n    this.includeNextStep = !this.includeNextStep;\r\n  }\r\n  \r\n  setDate(date) {\r\n    const amazingTimePicker = this._atp.open({\r\n      theme: 'dark',\r\n    });\r\n    amazingTimePicker.afterClose().subscribe(time => {\r\n      this.model.time = time;\r\n    });\r\n  }\r\n\r\n  setNextStepDate(picker) {\r\n    const amazingTimePicker = this._atp.open({\r\n      theme: 'dark',\r\n    });\r\n    amazingTimePicker.afterClose().subscribe(time => {\r\n      this.model.nextstepTime = time;\r\n    });\r\n  }\r\n\r\n  private delay(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjdGl2aXR5L2NyZWF0ZW5leHRzdGVwL2NyZWF0ZW5leHRzdGVwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- <div *ngIf=\\\"_authService.loggedIn()\\\"> -->\\r\\n<div class=\\\"container\\\">\\r\\n  <h2 class=\\\"pull-left\\\">Create Nextstep</h2>\\r\\n  \\r\\n  <form class=\\\"form-group\\\" (ngSubmit)=\\\"addNextstep(activityForm.value)\\\" #activityForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"col-md-6 form-group\\\">\\r\\n          <label>Title</label>\\r\\n          <input type=\\\"text\\\" required minlength=\\\"2\\\" maxlength=\\\"20\\\" class=\\\"form-control\\\" name=\\\"title\\\" ngModel>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"form-group col-md-6 col-xs-12 pull-left\\\">\\r\\n          <label>Type</label>\\r\\n          <select type=\\\"text\\\" class=\\\"form-control\\\" ngModel name=\\\"type\\\" #type=\\\"ngModel\\\">\\r\\n            <option *ngFor=\\\"let type of types\\\">{{type}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-md-6 col-xs-12 pull-right\\\" #createActivityModal>\\r\\n          <label style=\\\"margin-right: 6px;\\\">Date</label>\\r\\n          <br>\\r\\n          <mat-form-field>\\r\\n            <input matInput [matDatepickerFilter]=\\\"myFilter\\\" [matDatepicker]=\\\"picker\\\" (dateChange)=\\\"setDate(picker)\\\"\\r\\n              ngModel name=\\\"date\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker touchUi #picker></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <input class=\\\"m-l-15\\\" type=\\\"time\\\" value=\\\"{{model?.time}}\\\" [(ngModel)]=\\\"model.time\\\" name=\\\"time\\\"\\r\\n            #time=\\\"ngModel\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"form-group col-md-12\\\">\\r\\n          <label>Result</label>\\r\\n          <textarea type=\\\"text\\\" rows=\\\"8\\\" class=\\\"form-control\\\" required minlength=\\\"2\\\" maxlength=\\\"1000\\\" ngModel\\r\\n            name=\\\"description\\\" #result=\\\"ngModel\\\">\\r\\n                </textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-md-6 pull-left\\\">\\r\\n        <label>Businessparticipants</label>\\r\\n        <mat-selection-list ngModel name=\\\"UsersForActivity\\\">\\r\\n          <mat-list-option *ngFor=\\\"let businessParticipant of businessParticipants\\\" [value]=\\\"businessParticipant\\\">\\r\\n            {{businessParticipant?.fullName}}\\r\\n          </mat-list-option>\\r\\n        </mat-selection-list>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group col-md-6 pull-right\\\">\\r\\n        <label>Customerparticipants</label>\\r\\n        <mat-selection-list ngModel name=\\\"ContactpersonsForActivity\\\">\\r\\n          <mat-list-option *ngFor=\\\"let customerParticipant of customerParticipants\\\" [value]=\\\"customerParticipant\\\">\\r\\n            {{customerParticipant?.name}}\\r\\n          </mat-list-option>\\r\\n        </mat-selection-list>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\"></div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <button class=\\\"btn btn-primary btn-rounded waves-effect waves-light pull-right\\\" type=\\\"submit\\\">Add Nextstep</button>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<!-- </div> -->\"","import { Component, OnInit, AfterViewInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { CustomerService } from 'src/app/_services/customer.service';\r\nimport { AmazingTimePickerService } from 'amazing-time-picker';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-createnextstep',\r\n  templateUrl: './createnextstep.component.html',\r\n  styleUrls: ['./createnextstep.component.css']\r\n})\r\nexport class CreatenextstepComponent implements OnInit, AfterViewInit {\r\n  model: any = {};\r\n  types: string[] = ['Telephone', 'Email', 'Meeting', 'ToDo'];\r\n  businessParticipants: any = [];\r\n  customerParticipants: any = [];\r\n  customer: any = {};\r\n  activityId: any;\r\n  customerId: any;\r\n\r\n  myFilter = (d: Date): boolean => {\r\n    const day = d.getDay();\r\n    // Prevent Saturday and Sunday from being selected.\r\n    return day !== 0 && day !== 6;\r\n  }\r\n\r\n  constructor(private _authService: AuthService, private _customerService: CustomerService, private _atp: AmazingTimePickerService, private _activatedroute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.getActivity();\r\n    this.getContactpersons();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.getAllUsers();    \r\n  }\r\n\r\n  getActivity() {\r\n    this._activatedroute.params.subscribe(params => { \r\n      this.activityId = params['actId']; \r\n      this.customerId = params['custId'];\r\n    });\r\n  }\r\n\r\n  getAllUsers() {\r\n    this._customerService.getAllUsersInOrganization().subscribe(data => this.businessParticipants = data);\r\n  }\r\n\r\n  getContactpersons() {\r\n    this._customerService.getContactpersonsByCustomerId(this.customerId).subscribe(data => this.customerParticipants = data);\r\n  }\r\n\r\n  getAllContactsForSelectedCustomer(customerId) { // Hämtar alla kontaktpersoner för en viss kund\r\n    this._customerService.getContactpersonsByCustomerId(customerId).subscribe(data => this.customerParticipants = data);\r\n  }\r\n\r\n  setDate(date) {\r\n    const amazingTimePicker = this._atp.open({\r\n      theme: 'dark',\r\n    });\r\n    amazingTimePicker.afterClose().subscribe(time => {\r\n      this.model.time = time;\r\n    });\r\n  }\r\n\r\n  addNextstep(value) {\r\n    value.activityId = this.activityId;\r\n    value.customerId = this.customerId;\r\n    this._customerService.addNewNextStep(value).subscribe();\r\n\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjdGl2aXR5L3RvZG9zL3RvZG9zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-all-activities></app-all-activities>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-todos',\r\n  templateUrl: './todos.component.html',\r\n  styleUrls: ['./todos.component.css']\r\n})\r\nexport class TodosComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NoYW5nZS1wYXNzd29yZC9jaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"p-3\\\">\\r\\n  <br>\\r\\n  <br>\\r\\n  <form #passwordsForm='ngForm'>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label> Current Password</label>\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"oldPassword\\\" required minlength=\\\"4\\\" maxlength=\\\"10\\\"\\r\\n            name=\\\"oldPassword\\\" [(ngModel)]=\\\"model.oldPassword\\\">\\r\\n        </div>\\r\\n        <br>\\r\\n    <div ngModelGroup=\\\"passwords\\\" #passwords=\\\"ngModelGroup\\\" appCheckPassword>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label> New Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" required minlength=\\\"4\\\" maxlength=\\\"10\\\"\\r\\n          name=\\\"passwordA\\\" #passwordA=\\\"ngModel\\\" [(ngModel)]=\\\"model.newPassword\\\" required\\r\\n          id=\\\"passwordA\\\">\\r\\n        <div *ngIf=\\\"passwordA.invalid && (passwordA.dirty || passwordA.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n          Password is required! and min 4 max 10 characters.\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group mt-1\\\">\\r\\n          <label> Confirm Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword2\\\" required\\r\\n          minlength=\\\"4\\\" maxlength=\\\"10\\\" #passwordB=\\\"ngModel\\\" name=\\\"passwordB\\\" [(ngModel)]=\\\"model.confirmPassword\\\"\\r\\n          required id=\\\"passwordB\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"passwordB.invalid && (passwordB.dirty || passwordB.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n      Password confirming is required!\\r\\n    </div>\\r\\n    <div *ngIf=\\\"passwords.errors?.passwordCheck && (passwordB.dirty || passwordB.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n      Passwords do not match.\\r\\n    </div>\\r\\n    <br>\\r\\n    <b>{{infoText}}</b>\\r\\n    <br>\\r\\n    <button [disabled]=\\\"!passwordsForm.valid\\\" class=\\\"btn btn-primary waves-effect waves-light m-r-15\\\" (click)=\\\"changePassword()\\\">Change Password</button>\\r\\n  </form>\\r\\n  <br>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { CheckPasswordDirectiveService } from 'src/app/_services/CheckPasswordDirective.service';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  model: any = {};\r\n  infoText: any;\r\n\r\n  constructor(private _adminservice: AdminService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  changePassword()\r\n  {\r\n    console.log(this.model);\r\n    this._adminservice.changePassword(this.model).subscribe(res => {},\r\n      error => {\r\n        console.log(error);\r\n        if(error.error.text == \"Success\")\r\n        {\r\n          this.infoText = \"Password has been changed!\"\r\n          this.model = {};\r\n        }\r\n        else\r\n        {\r\n          this.infoText = error.error;\r\n        }\r\n        });\r\n  }\r\n\r\n}\r\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\r\\n    border-left: 5px solid #42A948; /* green */\\r\\n  }\\r\\n  \\r\\n  .ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vb3JnYW5pemF0aW9uLW1hbmFnZW1lbnQvb3JnYW5pemF0aW9uLW1hbmFnZW1lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDhCQUE4QixFQUFFLFVBQVU7RUFDNUM7O0VBRUE7SUFDRSw4QkFBOEIsRUFBRSxRQUFRO0VBQzFDIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vb3JnYW5pemF0aW9uLW1hbmFnZW1lbnQvb3JnYW5pemF0aW9uLW1hbmFnZW1lbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uZy12YWxpZFtyZXF1aXJlZF0sIC5uZy12YWxpZC5yZXF1aXJlZCAge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjNDJBOTQ4OyAvKiBncmVlbiAqL1xyXG4gIH1cclxuICBcclxuICAubmctaW52YWxpZDpub3QoZm9ybSkgIHtcclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2E5NDQ0MjsgLyogcmVkICovXHJcbiAgfVxyXG4gICJdfQ== */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <h2 class=\\\"m-b-30 m-t-0\\\">Organization Manager</h2>\\r\\n      <div class=\\\"panel panel-body\\\">\\r\\n        <h4>All Organizations</h4>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12 m-r-15\\\">\\r\\n\\r\\n          \\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Trellokey</th>\\r\\n                <th>Trellotoken</th>\\r\\n                <th>Trelloteam</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let organization of organizations\\\">\\r\\n                <td>{{organization.name}}</td>\\r\\n                <td>{{organization.trellokey}}</td>\\r\\n                <td>{{organization.trellotoken}}</td>\\r\\n                <td>{{organization.trelloTeamName}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n        </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"panel panel-body\\\">\\r\\n            <h4 class=\\\"m-b-30 m-t-0\\\">Create new Organization <i class=\\\"mdi mdi-information-outline m-r-15\\\" data-toggle=\\\"tooltip\\\"\\r\\n              data-placement=\\\"top\\\" title=\\\"Make sure the Trellokey and Trellotoken is from an Admin in the Trelloteam you want to add\\\"></i></h4>\\r\\n            <form #addOrgForm=\\\"ngForm\\\" (ngSubmit)=\\\"createNewOrganization()\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" required minlength=\\\"2\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"model.name\\\" placeholder=\\\"Name\\\" #name=\\\"ngModel\\\">\\r\\n                <div *ngIf=\\\"name.errors && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div [hidden]=\\\"!name.errors.required\\\">\\r\\n                   name is required! and max 20 characters.\\r\\n                  </div>\\r\\n                  <div [hidden]=\\\"!name.errors.minlength\\\">\\r\\n                    name must be at least 2 characters long.\\r\\n                  </div>\\r\\n              </div>\\r\\n              </div>\\r\\n              \\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"trellokey\\\" [(ngModel)]=\\\"model.trellokey\\\"\\r\\n                  placeholder=\\\"Trellokey\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"trellotoken\\\" [(ngModel)]=\\\"model.trellotoken\\\"\\r\\n                    placeholder=\\\"Trellotoken\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"trelloTeamName\\\" [(ngModel)]=\\\"model.trelloTeamName\\\"\\r\\n                      placeholder=\\\"trelloteam\\\">\\r\\n                  </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <button [disabled]=\\\"!addOrgForm.valid\\\" class=\\\"btn btn-primary btn-rounded waves-effect waves-light\\\" type=\\\"submit\\\">Confirm</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"panel panel-body\\\">\\r\\n            <h4 class=\\\"m-b-30 m-t-0\\\">Update Organization</h4>\\r\\n            <form #updateOrgForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateOrganization()\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <select id=\\\"organizationToUpdate\\\" class=\\\"form-control\\\">\\r\\n                  <option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">\\r\\n                    {{organization.name}}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\"required minlength=\\\"2\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"updateModel.name\\\" placeholder=\\\"Name\\\" #nameUpdate=\\\"ngModel\\\">\\r\\n                <div *ngIf=\\\"nameUpdate.errors && (nameUpdate.dirty || nameUpdate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div [hidden]=\\\"!nameUpdate.errors.required\\\">\\r\\n                   name is required! and max 20 characters.\\r\\n                  </div>\\r\\n                  <div [hidden]=\\\"!nameUpdate.errors.minlength\\\">\\r\\n                    name must be at least 2 characters long.\\r\\n                  </div>\\r\\n              </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"trellokey\\\" [(ngModel)]=\\\"updateModel.trellokey\\\" placeholder=\\\"Trellokey\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"trellotoken\\\" [(ngModel)]=\\\"updateModel.trellotoken\\\" placeholder=\\\"Trellotoken\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"trelloTeamName\\\" [(ngModel)]=\\\"updateModel.trelloTeamName\\\" placeholder=\\\"Trelloteam\\\">\\r\\n                  </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <button [disabled]=\\\"!updateOrgForm.valid\\\"class=\\\"btn btn-success btn-rounded waves-effect waves-light\\\" type=\\\"submit\\\">Confirm</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"panel panel-body\\\">\\r\\n            <h4 class=\\\"m-b-30 m-t-0\\\">Delete Organization</h4>\\r\\n            <form #deleteOrgForm=\\\"ngForm\\\" (ngSubmit)=\\\"organizationToDelete()\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"organizationToDelete\\\" class=\\\"control-label\\\">Organization</label>\\r\\n                <select id=\\\"organizationToDelete\\\" class=\\\"form-control\\\">\\r\\n                  <option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">\\r\\n                    {{organization.name}}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <button [disabled]=\\\"!deleteOrgForm.valid\\\" class=\\\"btn-danger btn-rounded\\\" type=\\\"submit\\\">Confirm</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-organization-management',\r\n  templateUrl: './organization-management.component.html',\r\n  styleUrls: ['./organization-management.component.css']\r\n})\r\nexport class OrganizationManagementComponent implements OnInit {\r\n  organizations: any;\r\n  model: any = {};\r\n  updateModel: any = {};\r\n\r\n  constructor(public _authService: AuthService, private _adminService: AdminService) { }\r\n\r\n  ngOnInit() {\r\n    this.getOrganizations();\r\n  }\r\n\r\n  getOrganizations() {\r\n    this._adminService.getAllOrganizations()\r\n      .subscribe(data => this.organizations = data);\r\n  }\r\n\r\n  async createNewOrganization() {\r\n    this._adminService.postNewOrganization(this.model).subscribe(\r\n      () => console.log('Posted new Organization')\r\n    );\r\n    await this.delay(1000);\r\n    this.getOrganizations();\r\n  }\r\n\r\n  async organizationToDelete() {\r\n    const id = (document.getElementById('organizationToDelete') as HTMLInputElement).value;\r\n    this._adminService.deleteOrganization(id);\r\n    await this.delay(1000);\r\n    this.getOrganizations();\r\n  }\r\n\r\n  async updateOrganization() {\r\n    const id = (document.getElementById('organizationToUpdate') as HTMLInputElement).value;\r\n    this._adminService.updateOrganization(id, this.updateModel);\r\n    await this.delay(1000);\r\n    this.getOrganizations();\r\n  }\r\n\r\n  private delay(ms: number)\r\n    {\r\n      return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n}\r\n","module.exports = \"\\r\\n.role-radio-group {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin: 15px 0;\\r\\n  }\\r\\n  \\r\\n  .role-radio-button {\\r\\n    margin: 5px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGNBQWM7RUFDaEI7O0VBRUE7SUFDRSxXQUFXO0VBQ2IiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5yb2xlLXJhZGlvLWdyb3VwIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWFyZ2luOiAxNXB4IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC5yb2xlLXJhZGlvLWJ1dHRvbiB7XHJcbiAgICBtYXJnaW46IDVweDtcclxuICB9Il19 */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <h3 class=\\\"m-b-30 m-t-0\\\">Register User <i class=\\\"mdi mdi-information-outline m-r-15\\\" data-toggle=\\\"tooltip\\\"\\r\\n              data-placement=\\\"top\\\" title=\\\"Make sure that the fullname matches with the persons fullname on Google\\\"></i>\\r\\n          </h3>\\r\\n          <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"r1\\\" placeholder=\\\"Username\\\" required minlength=\\\"2\\\"\\r\\n                maxlength=\\\"16\\\" [(ngModel)]=\\\"model.Username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\">\\r\\n              <div *ngIf=\\\"username.errors && (username.dirty || username.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div [hidden]=\\\"!username.errors.required\\\">\\r\\n                  username is required! and max 16 characters.\\r\\n                </div>\\r\\n                <div [hidden]=\\\"!username.errors.minlength\\\">\\r\\n                  username must be at least 2 characters long.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"r2\\\" placeholder=\\\"Fullname\\\" required minlength=\\\"2\\\"\\r\\n                maxlength=\\\"40\\\" [(ngModel)]=\\\"model.FullName\\\" name=\\\"fullname\\\" #username=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"r3\\\" placeholder=\\\"Email\\\" required minlength=\\\"2\\\"\\r\\n                maxlength=\\\"50\\\" [(ngModel)]=\\\"model.Email\\\" name=\\\"email\\\" #username=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"p-3\\\">\\r\\n              <form #passwordsForm='ngForm'>\\r\\n                <div ngModelGroup=\\\"passwords\\\" #passwords=\\\"ngModelGroup\\\" appCheckPassword>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" required minlength=\\\"4\\\"\\r\\n                      maxlength=\\\"10\\\" name=\\\"passwordA\\\" placeholder=\\\"Password\\\" #passwordA=\\\"ngModel\\\"\\r\\n                      [(ngModel)]=\\\"model.Password\\\" required id=\\\"passwordA\\\">\\r\\n                    <div *ngIf=\\\"passwordA.invalid && (passwordA.dirty || passwordA.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                      Password is required! and min 4 max 10 characters.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group mt-1\\\">\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword2\\\"\\r\\n                      placeholder=\\\"Confirm Password\\\" required minlength=\\\"4\\\" maxlength=\\\"10\\\" #passwordB=\\\"ngModel\\\"\\r\\n                      name=\\\"passwordB\\\" [(ngModel)]=\\\"model.confirmPassword\\\" required id=\\\"passwordB\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"passwordB.invalid && (passwordB.dirty || passwordB.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  Password confirming is required!\\r\\n                </div>\\r\\n                <div *ngIf=\\\"passwords.errors?.passwordCheck && (passwordB.dirty || passwordB.touched)\\\"\\r\\n                  class=\\\"alert alert-danger\\\">\\r\\n                  Passwords do not match.\\r\\n                </div>\\r\\n              </form>\\r\\n              <br>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isSystemAdmin\\\">\\r\\n              <select id=\\\"organizations\\\" class=\\\"form-control\\\">\\r\\n                <option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization?.id}}\\\">\\r\\n                  {{organization?.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div>\\r\\n              <mat-radio-group class=\\\"role-radio-group\\\" [(ngModel)]=\\\"model.Roles\\\" name=\\\"selectedRoles\\\" required>\\r\\n                <mat-radio-button class=\\\"role-radio-button\\\" *ngFor=\\\"let role of roles\\\" [value]=\\\"role.name\\\">\\r\\n                  {{role?.name}}\\r\\n                </mat-radio-button>\\r\\n              </mat-radio-group>\\r\\n            </div><b id=\\\"infoText\\\" class=\\\"m-b-5\\\">{{infoText}}</b>\\r\\n            <br>\\r\\n            <br>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <button [disabled]=\\\"!registerForm.valid\\\" class=\\\"btn btn-primary waves-effect waves-light m-r-15\\\"\\r\\n                type=\\\"submit\\\">Registrera ny användare</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from 'src/app/_services/auth.service';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\nimport { CheckPasswordDirectiveService } from 'src/app/_services/CheckPasswordDirective.service';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  selectedRoles: any;\r\n  model: any = {};\r\n  roles: any;\r\n  isSystemAdmin: boolean = false;\r\n  valueHolder: any;\r\n  organizations: any;\r\n  infoText: any;\r\n  orgId: any;\r\n \r\n\r\n  constructor(public _authService: AuthService, private adminService: AdminService) {}\r\n\r\n  ngOnInit() {\r\n    this.getAllRoles();\r\n    this.selectedRoles = [];\r\n    this.adminCheck();\r\n  }\r\n\r\n  getAllRoles() {\r\n   this.adminService.getRoles().subscribe(data => {\r\n     this.roles = data;\r\n   });\r\n  }\r\n\r\n  register() {\r\n    if(this.isSystemAdmin)\r\n    {\r\n      this.model.organizationId = (document.getElementById('organizations') as HTMLInputElement).value;\r\n    }\r\n    this.adminService.register(this.model).subscribe(res => {},\r\n      error => {\r\n        console.log(error);\r\n        if(error.error.text == \"Success\")\r\n        {\r\n          this.infoText = this.model.Username + \" has been created!\"\r\n          this.clearAllFields();\r\n        }\r\n        else\r\n        {\r\n          this.infoText = error.error;\r\n        }\r\n        });\r\n  }\r\n\r\n  clearAllFields()\r\n  {\r\n    this.model = {};\r\n  }\r\n\r\n\r\n  getOrganizations() {\r\n    this.adminService.getAllOrganizations()\r\n      .subscribe(data => this.organizations = data);\r\n  }\r\n\r\n\r\n  async adminCheck()\r\n  {\r\n    this._authService.isSystemAdmin().subscribe(data => this.valueHolder = data);\r\n    await this.delay(200);\r\n    if(this.valueHolder == 1)\r\n    {\r\n      this.isSystemAdmin = true;\r\n      this.getOrganizations();\r\n    }\r\n    else\r\n    {\r\n      this.isSystemAdmin = false;\r\n    }\r\n  }\r\n  \r\n\r\n  private delay(ms: number)\r\n    {\r\n      return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n}\r\n","module.exports = \"#fixedbutton {\\r\\n    margin-left: 300px\\r\\n}\\r\\n.ng-valid[required], .ng-valid.required  {\\r\\n    border-left: 5px solid #42A948; /* green */\\r\\n  }\\r\\n.ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n  }\\r\\n.selectedItem {\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcm9sZS1tYW5hZ2VtZW50L3JvbGUtbWFuYWdlbWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7QUFDSjtBQUNBO0lBQ0ksOEJBQThCLEVBQUUsVUFBVTtFQUM1QztBQUVBO0lBQ0UsOEJBQThCLEVBQUUsUUFBUTtFQUMxQztBQUVBO0lBQ0UsaUJBQWlCO0VBQ25CIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vcm9sZS1tYW5hZ2VtZW50L3JvbGUtbWFuYWdlbWVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2ZpeGVkYnV0dG9uIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAzMDBweFxyXG59XHJcbi5uZy12YWxpZFtyZXF1aXJlZF0sIC5uZy12YWxpZC5yZXF1aXJlZCAge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjNDJBOTQ4OyAvKiBncmVlbiAqL1xyXG4gIH1cclxuICBcclxuICAubmctaW52YWxpZDpub3QoZm9ybSkgIHtcclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2E5NDQ0MjsgLyogcmVkICovXHJcbiAgfVxyXG5cclxuICAuc2VsZWN0ZWRJdGVtIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuICAiXX0= */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12 col-sm-12\\\">\\r\\n        <h2 style=\\\"display:inline;\\\">Role Manager</h2>\\r\\n        <div class=\\\"col-md-2  col-xs-2 pull-right\\\">\\r\\n            <a style=\\\"display:inline;\\\" type=\\\"button\\\" (click)=\\\"backToUsers()\\\"\\r\\n                class=\\\"btn waves-effect btn-default m-t-5 btn-lg pull-right\\\"><i\\r\\n                    class=\\\"glyphicon glyphicon-remove\\\"></i> </a>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <br>\\r\\n    <br>\\r\\n    <br>\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div class=\\\"col-md-12 pull-left\\\">\\r\\n        <div class=\\\"panel panel-primary\\\">\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <h4 class=\\\"m-b-30 m-t-0\\\">Roles</h4>\\r\\n            <table class=\\\"table table-hover\\\" id=\\\"datatable-keytable\\\" role=\\\"grid\\\">\\r\\n              <tbody>\\r\\n                <tr class=\\\"row\\\" *ngFor=\\\"let role of dbRoles\\\">\\r\\n                  <a type=\\\"button\\\" class=\\\"btn waves-effect btn-default m-t-5\\\" (click)='roleInfo(role.id, role.name)'\\r\\n                    data-toggle=\\\"modal\\\" data-target=\\\".roleuser-modal\\\">\\r\\n                    <i class=\\\"ti-user\\\"></i> </a>\\r\\n                  <td id=\\\"{{role.id}}\\\" (click)=\\\"changeClaimsOnClick(role.name)\\\"> {{role.name}}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 pull-left\\\">\\r\\n        <div class=\\\"panel panel-body\\\">\\r\\n          <h4 class=\\\"m-b-30 m-t-0\\\">Add Roles</h4>\\r\\n          <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"addRole()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input id=\\\"rolename\\\" type=\\\"text\\\" class=\\\"form-control\\\" required minlength=\\\"2\\\" maxlength=\\\"30\\\"\\r\\n                name=\\\"rolename\\\" [(ngModel)]=\\\"roleModel.rolename\\\" placeholder=\\\"Name\\\" #rolename=\\\"ngModel\\\">\\r\\n              <div *ngIf=\\\"rolename.errors && (rolename.dirty || rolename.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <button [disabled]=\\\"!registerForm.valid\\\" class=\\\"btn btn-primary btn-rounded waves-effect waves-light\\\" type=\\\"submit\\\">Add role</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 pull-left\\\">\\r\\n        <div class=\\\" panel panel-body\\\">\\r\\n          <h4 class=\\\"m-b-30 m-t-0\\\">Delete Role</h4>\\r\\n          <form (ngSubmit)=\\\"roleToDelete()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <select id=\\\"roleToDelete\\\" class=\\\"form-control\\\">\\r\\n                <option *ngFor=\\\"let role of dbRoles\\\" value=\\\"{{role.id}}\\\">\\r\\n                  {{role.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-rounded waves-effect waves-light\\\">Delete role</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <form (ngSubmit)=\\\"saveClaimChanges()\\\">\\r\\n            <h3 class=\\\"m-b-30 m-t-0\\\">{{choosenRoleToShow.Name}}</h3>\\r\\n            <table class=\\\"table table-hover\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>This role can:</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let claim of claimsToShow\\\">\\r\\n                  <td>{{claim.claimValue}}</td>\\r\\n                  <div class=\\\"checkbox checkbox-primary checkbox-single\\\">\\r\\n                    <input id=\\\"checkbox{{claim.claimType}}\\\" type=\\\"checkbox\\\"\\r\\n                      (change)=\\\"changeClaimBoolOnClick(claim, $event)\\\" [checked]=\\\"claim.hasClaim\\\"\\r\\n                      value=\\\"{{claim.hasClaim}}\\\" check-list=\\\"claim.hasClaim\\\">\\r\\n                    <label for=\\\"checkbox{{claim.claimType}}\\\"></label>\\r\\n                  </div>\\r\\n                </tr>\\r\\n                <br>\\r\\n                <button type=\\\"submit\\\" (click)='saveClaimChanges()'\\r\\n                  class=\\\"btn btn-primary btn-rounded waves-effect waves-light\\\">Save Changes</button>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <!-- USERS IN ROLE MODAL -->\\r\\n  <div class=\\\"modal fade roleuser-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\r\\n          <h4 class=\\\"modal-title\\\" id=\\\"myLargeModalLabel\\\">{{roleInfoName}}</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <table class=\\\"table table-hover\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Users that has this role:</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let user of roleInfoUsers\\\">\\r\\n                <td>{{user.userName}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\nimport { throwToolbarMixedModesError } from '@angular/material';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-role-management',\r\n  templateUrl: './role-management.component.html',\r\n  styleUrls: ['./role-management.component.css']\r\n})\r\nexport class RoleManagementComponent implements OnInit {\r\n  roleModel: any = {};\r\n  dbRoles: any;\r\n  dbClaims: any;\r\n  dbRoleWithClaims: any;\r\n  choosenRole: any = {};\r\n  choosenRoleToShow: any = [];\r\n  claimsToShow: any;\r\n  roleInfoUsers: any;\r\n  roleInfoName: any;\r\n\r\n  constructor(public _authService: AuthService, private _adminService: AdminService, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllRoles();\r\n    this.getAllRoleWithClaims();\r\n    this.getAllClaims();\r\n  }\r\n\r\n  getAllRoles() {\r\n    this._adminService.getAllRoles()\r\n      .subscribe(data => this.dbRoles = data);\r\n  }\r\n\r\n  getAllRoleWithClaims() {\r\n    this._adminService.getAllRoleWithClaims()\r\n      .subscribe(data => this.dbRoleWithClaims = data)\r\n  }\r\n\r\n  getAllClaims() {\r\n    this._adminService.getAllClaims()\r\n      .subscribe(data => this.dbClaims = data)\r\n  }\r\n\r\n  async addRole() {\r\n    this._adminService.createRole(this.roleModel).subscribe();\r\n    await this.delay(500);\r\n    this.getAllRoles();\r\n    this.getAllRoleWithClaims();\r\n    this.getAllClaims();\r\n  }\r\n\r\n  async roleToDelete() {\r\n    const id = (document.getElementById('roleToDelete') as HTMLInputElement).value;\r\n    this._adminService.deleteRole(id);\r\n    await this.delay(500);\r\n    this.getAllRoles();\r\n    this.getAllRoleWithClaims();\r\n    this.getAllClaims();\r\n  }\r\n\r\n  changeClaimsOnClick(role : any) {\r\n    for (let i = 0; i < this.dbRoleWithClaims.length; i++) \r\n    {\r\n      if(this.dbRoleWithClaims[i].name == role)\r\n      {\r\n          this.choosenRoleToShow.Name = role;\r\n          this.choosenRoleToShow.Id = this.dbRoleWithClaims[i].id;\r\n          this.claimsToShow = this.dbRoleWithClaims[i].claimsWithBool;\r\n          document.getElementById(this.dbRoleWithClaims[i].id).setAttribute(\"class\",\"selectedItem\");\r\n      }\r\n      else\r\n      {\r\n        document.getElementById(this.dbRoleWithClaims[i].id).removeAttribute(\"class\");\r\n      }\r\n    }\r\n  }\r\n\r\n  saveClaimChanges() {\r\n    this.choosenRole.ClaimsWithBool = this.claimsToShow;\r\n    this.choosenRole.Name = this.choosenRoleToShow.Name;\r\n    this.choosenRole.Id = this.choosenRoleToShow.Id;\r\n    this._adminService.changeRoleClaims(this.choosenRole);\r\n  }\r\n\r\n  changeClaimBoolOnClick(claim: any, event: any) {\r\n     for (let i = 0; i < this.claimsToShow.length; i++) \r\n    {\r\n      if(this.claimsToShow[i].claimValue == claim.claimValue)\r\n      {\r\n          this.claimsToShow[i].hasClaim = event.currentTarget.checked;\r\n      }\r\n    }\r\n  }\r\n\r\n  roleInfo(roleId :any, roleName :any) {\r\n    this._adminService.getUsersOnRole(roleId)\r\n    .subscribe(data => this.roleInfoUsers = data);\r\n    this.roleInfoName = roleName;\r\n }\r\n\r\n backToUsers()\r\n  {\r\n    this._router.navigateByUrl(\"users\");\r\n  }\r\n\r\n  private delay(ms: number)\r\n  {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JvbGVzLW1vZGFsL3JvbGVzLW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"modal-header\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <h4 class=\\\"modal-title pull-left\\\">Edit Roles for {{user.userName}}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <form #rolesForm=\\\"ngForm\\\" id=\\\"rolesForm\\\">\\r\\n    <div class=\\\"form-check\\\" *ngFor=\\\"let role of roles\\\">\\r\\n      <div *ngIf=\\\"role.name != 'SystemAdmin'\\\">\\r\\n        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"role.name\\\" [checked]=\\\"role.checked\\\"\\r\\n          (change)=\\\"role.checked = !role.checked\\\" [disabled]=\\\"role.name === 'Admin' && user.userName === 'Admin'\\\">\\r\\n        <label>{{role.name}}</label>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"bsModalRef.hide()\\\">Cancel</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateRoles()\\\" form=\\\"rolesForm\\\">Submit</button>\\r\\n</div>\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { User } from 'src/app/_models/user';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-roles-modal',\r\n  templateUrl: './roles-modal.component.html',\r\n  styleUrls: ['./roles-modal.component.css']\r\n})\r\nexport class RolesModalComponent implements OnInit {\r\n  @Output() updateSelectedRoles = new EventEmitter();\r\n  user: User;\r\n  roles: any[];\r\n\r\n  constructor(public _authService: AuthService, public bsModalRef: BsModalRef) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  updateRoles() {\r\n    this.updateSelectedRoles.emit(this.roles);\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}\r\n","module.exports = \".btn {\\r\\n    margin-left: 7px;\\r\\n}\\r\\n\\r\\n.circle-text-user {\\r\\n    display: table-cell;\\r\\n    height: 65px;\\r\\n    width: 65px;\\r\\n    text-align: center;\\r\\n    padding-top: 18px;\\r\\n    vertical-align: middle;\\r\\n    border-radius: 50%;\\r\\n    background: #F7B543;\\r\\n    color: #fff;\\r\\n    font: 25px \\\"josefin sans\\\", arial;\\r\\n}\\r\\n\\r\\n.hover:hover, .example-card:focus {\\r\\n    background-color: lightgray;\\r\\n    box-shadow: 0 0.3em 0.3em -0.2em var(--hover);\\r\\n    -webkit-transform: translateY(-0.15em);\\r\\n            transform: translateY(-0.15em); \\r\\n}\\r\\n\\r\\ninput[type=text] {\\r\\n    padding:5px; \\r\\n    border:2px solid #ccc;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\ninput[type=text]:focus {\\r\\n    border-color:#00FF00;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdXNlci1tYW5hZ2VtZW50L3VzZXItbWFuYWdlbWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsZ0NBQWdDO0FBQ3BDOztBQUVBO0lBQ0ksMkJBQTJCO0lBQzNCLDZDQUE2QztJQUM3QyxzQ0FBOEI7WUFBOUIsOEJBQThCO0FBQ2xDOztBQUNBO0lBQ0ksV0FBVztJQUNYLHFCQUFxQjtJQUVyQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxvQkFBb0I7QUFDeEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi91c2VyLW1hbmFnZW1lbnQvdXNlci1tYW5hZ2VtZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuIHtcclxuICAgIG1hcmdpbi1sZWZ0OiA3cHg7XHJcbn1cclxuXHJcbi5jaXJjbGUtdGV4dC11c2VyIHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgICBoZWlnaHQ6IDY1cHg7XHJcbiAgICB3aWR0aDogNjVweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiAxOHB4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQ6ICNGN0I1NDM7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGZvbnQ6IDI1cHggXCJqb3NlZmluIHNhbnNcIiwgYXJpYWw7XHJcbn1cclxuXHJcbi5ob3Zlcjpob3ZlciwgLmV4YW1wbGUtY2FyZDpmb2N1cyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XHJcbiAgICBib3gtc2hhZG93OiAwIDAuM2VtIDAuM2VtIC0wLjJlbSB2YXIoLS1ob3Zlcik7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTAuMTVlbSk7IFxyXG59XHJcbmlucHV0W3R5cGU9dGV4dF0ge1xyXG4gICAgcGFkZGluZzo1cHg7IFxyXG4gICAgYm9yZGVyOjJweCBzb2xpZCAjY2NjOyBcclxuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPXRleHRdOmZvY3VzIHtcclxuICAgIGJvcmRlci1jb2xvcjojMDBGRjAwO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"content\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h2 class=\\\"m-b-30 m-t-0\\\">Users</h2>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"panel panel-body hover\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\".addUser-modal\\\">\\r\\n          <h4 style=\\\"display:inline;\\\">Register new user</h4><i style=\\\"display:inline;\\\"\\r\\n            class=\\\"mdi mdi-account-plus m-l-15\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div *ngIf=\\\"!isSystemAdmin\\\" class=\\\"panel panel-body hover\\\" type=\\\"button\\\" (click)=\\\"toRoleManagement()\\\">\\r\\n          <h4 style=\\\"display:inline;\\\">Manage roles</h4><i style=\\\"display:inline;\\\" class=\\\"mdi mdi-account m-l-15\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"col-sm-4\\\" *ngFor=\\\"let user of users\\\">\\r\\n            <div class=\\\"panel\\\">\\r\\n              <div class=\\\"panel-body user-card\\\">\\r\\n                <div class=\\\"media-main\\\">\\r\\n                  <a class=\\\"pull-left\\\">\\r\\n                    <div class=\\\"circle-text-user col-lg-1 col-xs-5 col-md-2 pull-left\\\">\\r\\n                      {{user.initials}}\\r\\n                    </div>\\r\\n                  </a>\\r\\n                  <div class=\\\"info\\\">\\r\\n                    <h4>{{user.username}}</h4>\\r\\n                    <p class=\\\"text-muted\\\">{{user.fullName}}</p>\\r\\n                    <p class=\\\"text-muted\\\" *ngFor=\\\"let role of user.roles\\\">{{role.name}}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"clearfix\\\"></div>\\r\\n                <hr>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <button class=\\\"btn btn-default waves-effect\\\" (click)=\\\"editRolesModal(user)\\\" data-toggle=\\\"tooltip\\\"\\r\\n                  data-placement=\\\"top\\\" title=\\\"Change roles for user\\\"><i class=\\\"mdi mdi-account-settings-variant\\\"></i></button>\\r\\n                  <button class=\\\"btn btn-default waves-effect\\\" (click)=\\\"maskUserSwal.show()\\\" data-toggle=\\\"tooltip\\\"\\r\\n                  data-placement=\\\"top\\\" title=\\\"Mask this user\\\"><i class=\\\"mdi mdi-account-off\\\"></i></button>\\r\\n                  <swal #maskUserSwal title=\\\"Mask confirmation\\\" text=\\\"Are you sure you want to mask this user?\\\" type=\\\"question\\\" [showCancelButton]=\\\"true\\\" [focusCancel]=\\\"true\\\" (confirm)=\\\"maskUser(user.id)\\\">\\r\\n                  </swal>\\r\\n                  <button *ngIf=\\\"isSystemAdmin\\\" class=\\\"btn btn-default waves-effect\\\" (click)=\\\"resetPassword(user.id)\\\" data-toggle=\\\"tooltip\\\"\\r\\n                  data-placement=\\\"top\\\" title=\\\"Reset password for this user\\\"><i class=\\\"mdi mdi-account-key\\\"></i></button>\\r\\n                  <button *ngIf=\\\"isSystemAdmin\\\" class=\\\"btn btn-default waves-effect\\\" data-toggle=\\\"modal\\\"\\r\\n                  data-target=\\\".changeOrganizations-modal\\\" (click)=\\\"organizationClick(user.id)\\\"><i class=\\\"fa fa-institution\\\" data-toggle=\\\"tooltip\\\"\\r\\n                  data-placement=\\\"top\\\" title=\\\"Add or remove organizations for this user\\\"></i></button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--ADDUSER-MODAL-->\\r\\n<div class=\\\"modal fade addUser-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\"><button type=\\\"button\\\" id=\\\"closeAddCustomerModal\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n        aria-hidden=\\\"true\\\">×</button>\\r\\n      <app-register></app-register>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade changeOrganizations-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button id=\\\"closeChangeOrganizationsModal\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n          aria-hidden=\\\"true\\\">×</button>\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"myLargeModalLabel\\\">Change organizations</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #userOrganizationForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateUsersOrganizations(userOrganizationForm.value)\\\">\\r\\n          <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n            <mat-selection-list ngModel name=\\\"organization\\\">\\r\\n              <mat-list-option *ngFor=\\\"let organization of organizations\\\" [value]=\\\"organization\\\" [selected]=\\\"organization.name === 'SUP-Gruppen'\\\">\\r\\n                {{organization?.name}}\\r\\n              </mat-list-option>\\r\\n            </mat-selection-list>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-12\\\">\\r\\n              <select id=\\\"roleToDelete\\\" class=\\\"form-control\\\">\\r\\n                <option *ngFor=\\\"let organization of organizations\\\" [value]=\\\"organization\\\">\\r\\n                  {{organization.name}}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n          <div class=\\\"row\\\"></div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button [disabled]=\\\"!userOrganizationForm.valid\\\" class=\\\"btn btn-primary btn-rounded waves-effect waves-light\\\"\\r\\n              type=\\\"submit\\\">Change Organizations</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\nimport { RolesModalComponent } from '../roles-modal/roles-modal.component';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.css']\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n\r\n  users: any;\r\n  aUser: any;\r\n  bsModalRef: BsModalRef;\r\n  availableRoles: any;\r\n  valueHolder: any;\r\n  isSystemAdmin: boolean = false;\r\n  organizations: any;\r\n  usersOrganizations: any;\r\n\r\n\r\n  constructor(public _authService: AuthService, private adminService: AdminService, private modalService: BsModalService, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getUsersWithRoles();\r\n    this.adminCheck();\r\n    this.getAllOrganizations();\r\n  }\r\n\r\n  async getUsersWithRoles() {\r\n    await this.delay(500);\r\n    this.adminService.getUsersWithRoles().subscribe((users: User[]) => {\r\n      this.users = users;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getAllOrganizations() {\r\n    this.adminService.getAllOrganizations().subscribe(data => this.organizations = data);\r\n  }\r\n\r\n  updateUsersOrganizations(values: any) {\r\n    console.log(values);\r\n  }\r\n\r\n  organizationClick(userId: number) {\r\n    this.adminService.getUsersOrganizationById(userId).subscribe(data => this.usersOrganizations = data);\r\n    console.log(userId);\r\n    for (let i = 0; i < this.users.length; i++) \r\n    {\r\n      if(this.users[i].id == userId)\r\n      {\r\n        this.aUser = this.users[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  editRolesModal(user) {\r\n    const initialState = {\r\n      user,\r\n      roles: this.getRolesArray(user)\r\n    };\r\n    this.bsModalRef = this.modalService.show(RolesModalComponent, {initialState});\r\n    \r\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values) => {\r\n      const rolesToUpdate = {\r\n        roleNames: [...values.filter(el => el.checked === true).map(el => el.name)]\r\n      };\r\n      if (rolesToUpdate) {\r\n        this.adminService.updateUserRoles(user.username, rolesToUpdate).subscribe(() => {\r\n          user.roles = [...rolesToUpdate.roleNames];\r\n        }, error => {\r\n          console.log(error);\r\n        });\r\n        this.getUsersWithRoles();\r\n      }\r\n        \r\n    });\r\n\r\n  }\r\n\r\n  private getRolesArray(user) {\r\n    const roles = [];\r\n    const userRoles = user.roles;\r\n\r\n    this.adminService.getAllRoles().subscribe(data => {\r\n      this.availableRoles = data;\r\n    }, error => console.log(error),\r\n    () => {\r\n      for (let i = 0; i < this.availableRoles.length; i++) {\r\n        let isMatch = false;\r\n\r\n        for (let j = 0; j < userRoles.length; j++) {\r\n          if (this.availableRoles[i].name === userRoles[j].name) {\r\n            isMatch = true;\r\n            this.availableRoles[i].checked = true;\r\n            roles.push(this.availableRoles[i]);\r\n            break;\r\n          }\r\n        }\r\n        if (!isMatch) {\r\n          this.availableRoles[i].checked = false;\r\n          roles.push(this.availableRoles[i]);\r\n        }\r\n      }\r\n    });\r\n    return roles;\r\n  }\r\n\r\n  async maskUser(id)\r\n  {\r\n    this.adminService.maskUser(id).subscribe();\r\n    await this.delay(1000);\r\n    this.getUsersWithRoles();\r\n\r\n  }\r\n\r\n  resetPassword(id)\r\n  {\r\n    this.adminService.resetPassword(id).subscribe();\r\n  }\r\n\r\n  toRoleManagement()\r\n  {\r\n    this._router.navigateByUrl(\"rolemanagement\");\r\n  }\r\n\r\n  async adminCheck()\r\n  {\r\n    this._authService.isSystemAdmin().subscribe(data => this.valueHolder = data);\r\n    await this.delay(200);\r\n    if(this.valueHolder == 1)\r\n    {\r\n      this.isSystemAdmin = true;\r\n    }\r\n    else\r\n    {\r\n      this.isSystemAdmin = false;\r\n    }\r\n  }\r\n\r\n  private delay(ms: number)\r\n  {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProjectsComponent } from './project/projects/projects.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './admin/register/register.component';\r\nimport { RoleManagementComponent } from './admin/role-management/role-management.component';\r\nimport { OrganizationManagementComponent } from './admin/organization-management/organization-management.component';\r\nimport { ProjectComponent }  from './project/project/project.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { CustomerListComponent } from './customer-list/customer-list.component';\r\nimport { CreateActivityComponent } from './activity/createActivity/createActivity.component';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { CreatenextstepComponent } from './activity/createnextstep/createnextstep.component';\r\nimport { AllActivitiesComponent } from './activity/all-activities/all-activities.component';\r\nimport { TodosComponent } from './activity/todos/todos.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'users', component: UserManagementComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'rolemanagement', component: RoleManagementComponent},\r\n  { path: \"organizationmanagement\", component: OrganizationManagementComponent },\r\n  { path: 'project/:id', component: ProjectComponent},\r\n  { path: 'projects', component: ProjectsComponent},\r\n  { path: 'customer/:id', component: CustomerComponent},\r\n  { path: 'customerlist', component: CustomerListComponent},\r\n  { path: 'createactivity', component: CreateActivityComponent},\r\n  { path: 'createnextstep/:actId/:custId', component: CreatenextstepComponent},\r\n  { path: 'allactivities', component: AllActivitiesComponent},\r\n  { path: 'todos', component: TodosComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".btn:hover {\\r\\n  background-color: #1EA69A;\\r\\n  color: white;\\r\\n  }\\r\\n\\r\\n.circle-text-user {\\r\\n  display: table-cell;\\r\\n  height: 30px;\\r\\n  width: 30px;\\r\\n  text-align: center;\\r\\n  vertical-align: middle;\\r\\n  border-radius: 50%;\\r\\n  background: #F7B543;\\r\\n  color: #fff;\\r\\n  font: 10px \\\"josefin sans\\\", arial;\\r\\n}\\r\\n\\r\\n.button-pos {\\r\\n  padding-top: 25px;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.profile-username {\\r\\n  margin-left: 0px;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 768px) {\\r\\n  .button-pos {\\r\\n    padding-top: 0px;\\r\\n    background-color: rgb(166, 30, 30);\\r\\n  }\\r\\n  body {\\r\\n    background-color: #1EA69A;\\r\\n  }\\r\\n}\\r\\n\\r\\n.mobileShow {display: none;}\\r\\n\\r\\n/* Smartphone Portrait and Landscape */\\r\\n\\r\\n@media only screen \\r\\n    and (max-width : 768px){ \\r\\n      .mobileShow {display: inline-block;}\\r\\n  }\\r\\n\\r\\n.spinner  {\\r\\n  margin-right: 25px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaOztBQUVGO0VBQ0UsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCOztBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0U7SUFDRSxnQkFBZ0I7SUFDaEIsa0NBQWtDO0VBQ3BDO0VBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7QUFDRjs7QUFFQSxhQUFhLGFBQWEsQ0FBQzs7QUFFekIsc0NBQXNDOztBQUN0Qzs7TUFFSSxhQUFhLHFCQUFxQixDQUFDO0VBQ3ZDOztBQUVGO0VBQ0Usa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMUVBNjlBO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB9XHJcblxyXG4uY2lyY2xlLXRleHQtdXNlciB7XHJcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICBoZWlnaHQ6IDMwcHg7XHJcbiAgd2lkdGg6IDMwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIGJhY2tncm91bmQ6ICNGN0I1NDM7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgZm9udDogMTBweCBcImpvc2VmaW4gc2Fuc1wiLCBhcmlhbDtcclxufVxyXG5cclxuLmJ1dHRvbi1wb3Mge1xyXG4gIHBhZGRpbmctdG9wOiAyNXB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG4ucHJvZmlsZS11c2VybmFtZSB7XHJcbiAgbWFyZ2luLWxlZnQ6IDBweDtcclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gIC5idXR0b24tcG9zIHtcclxuICAgIHBhZGRpbmctdG9wOiAwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTY2LCAzMCwgMzApO1xyXG4gIH1cclxuICBib2R5IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxRUE2OUE7XHJcbiAgfVxyXG59XHJcblxyXG4ubW9iaWxlU2hvdyB7ZGlzcGxheTogbm9uZTt9IFxyXG5cclxuICAvKiBTbWFydHBob25lIFBvcnRyYWl0IGFuZCBMYW5kc2NhcGUgKi8gXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIFxyXG4gICAgYW5kIChtYXgtd2lkdGggOiA3NjhweCl7IFxyXG4gICAgICAubW9iaWxlU2hvdyB7ZGlzcGxheTogaW5saW5lLWJsb2NrO31cclxuICB9XHJcblxyXG4uc3Bpbm5lciAge1xyXG4gIG1hcmdpbi1yaWdodDogMjVweDtcclxufSJdfQ== */\"","module.exports = \"<app-login></app-login>\\r\\n<div id=\\\"wrapper\\\" class=\\\"forced\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"topbar\\\">\\r\\n    <div class=\\\"topbar-left\\\">\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <a routerLink=\\\"home\\\" class=\\\"logo\\\"><span>WP</span>MS</a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\r\\n      <div class=\\\"container\\\" style=\\\"height:40px\\\">\\r\\n        <div class=\\\"\\\">\\r\\n          <div class=\\\"pull-left\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"mobileShow button-menu-mobile open-left waves-effect waves-light\\\"\\r\\n              onclick=\\\"hamburger()\\\">\\r\\n              <i class=\\\"ion-navicon\\\"></i>\\r\\n            </button>\\r\\n            <button *ngIf=\\\"!isSystemAdmin\\\" type=\\\"button\\\" class=\\\"mobileShow button-menu-mobile open-left waves-effect waves-light\\\"\\r\\n              (click)=\\\"goToCreateNewActivity()\\\">\\r\\n              <i class=\\\"mdi mdi-comment-plus-outline\\\"></i>\\r\\n            </button>\\r\\n            <button *ngIf=\\\"!isSystemAdmin\\\" type=\\\"button\\\" class=\\\"mobileShow button-menu-mobile open-left waves-effect waves-light\\\" (click)=\\\"refreshTrello()\\\">\\r\\n              <i class=\\\"mdi mdi-refresh\\\"></i>\\r\\n            </button>\\r\\n            <span class=\\\"clearfix\\\"></span>\\r\\n          </div>\\r\\n          <ul class=\\\"nav navbar-nav navbar-right pull-right\\\">\\r\\n\\r\\n            <li *ngIf=\\\"!isSystemAdmin\\\" class=\\\"hidden-xs dropdown\\\">\\r\\n              <a class=\\\"dropdown-toggle waves-effect waves-light notification-icon-box\\\"\\r\\n                data-toggle=\\\"dropdown\\\" aria-expanded=\\\"true\\\">\\r\\n                <i class=\\\"mdi mdi-bell-outline\\\"></i> <span *ngIf=\\\"notifications?.numberOfTodos <= 5\\\"\\r\\n                  class=\\\"badge badge-xs badge-primary\\\" >{{ notifications?.numberOfTodos }}</span>\\r\\n                  <span *ngIf=\\\"notifications?.numberOfTodos > 5 && notifications?.numberOfTodos <= 10\\\"\\r\\n                  class=\\\"badge badge-xs badge-warning\\\" >{{ notifications?.numberOfTodos }}</span>\\r\\n                  <span *ngIf=\\\"notifications?.numberOfTodos > 5 && notifications?.numberOfTodos > 10\\\"\\r\\n                    class=\\\"badge badge-xs badge-danger\\\" >{{ notifications?.numberOfTodos }}</span>\\r\\n              </a>\\r\\n              <ul class=\\\"dropdown-menu dropdown-menu-lg\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <li class=\\\"text-center notifi-title\\\">Notifications</li>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2\\\" style=\\\"padding-top: 12px;\\\">\\r\\n                    <li><i class=\\\"mdi mdi-refresh\\\" style=\\\"font-size: 120%;\\\" (click)=\\\"getNotificationsForUser()\\\"></i></li>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <li class=\\\"list-group\\\">\\r\\n                  <!-- A list item-->\\r\\n                  <div *ngFor=\\\"let activity of notifications?.usersActivities | slice: 0:3;\\\">\\r\\n                    <a class=\\\"list-group-item\\\" data-toggle=\\\"modal\\\" data-target=\\\".showNotifications-modal\\\"\\r\\n                      (click)=\\\"activityClick(activity?.id)\\\">\\r\\n                      <div class=\\\"media\\\">\\r\\n                        <i class=\\\"ti-check-box text-primary noti-sm-icon\\\"></i>\\r\\n                        <div class=\\\"noti-content\\\">\\r\\n                          <div class=\\\"media-heading\\\">{{activity?.title}}</div>\\r\\n                          <div *ngIf=\\\"activity.delayed\\\">\\r\\n                            <p class=\\\"m-0\\\">\\r\\n                              <small style=\\\"color: red;\\\">{{activity?.date | date: \\\"yyyy-MM-dd\\\"}}</small>\\r\\n                            </p>\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"!activity.delayed\\\">\\r\\n                            <p class=\\\"m-0\\\">\\r\\n                              <small>{{activity?.date | date: \\\"yyyy-MM-dd\\\"}}</small>\\r\\n                            </p>\\r\\n                          </div>\\r\\n                          <p class=\\\"m-0\\\">\\r\\n                            <small>{{activity?.description}}</small>\\r\\n                          </p>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </a>\\r\\n                  </div>\\r\\n                  <!-- last list item -->\\r\\n                  <a [routerLink]=\\\"['/todos']\\\" class=\\\"list-group-item\\\">\\r\\n                    <small class=\\\"text-primary\\\">See Your Todos</small>\\r\\n                  </a>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </li>\\r\\n            <li *ngIf=\\\"!isSystemAdmin\\\" class=\\\"hidden-xs button-pos\\\">\\r\\n              <a data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" style=\\\"cursor:pointer\\\" title=\\\"Add Activity\\\" (click)=\\\"goToCreateNewActivity()\\\"><i\\r\\n                  class=\\\"mdi mdi-comment-plus-outline\\\"></i></a>\\r\\n            </li>\\r\\n            <li *ngIf=\\\"!updatingTrello\\\" class=\\\"hidden-xs button-pos\\\">\\r\\n              <a data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" style=\\\"cursor:pointer\\\" title=\\\"Refresh Trellodata\\\" (click)=\\\"refreshTrello()\\\"><i\\r\\n                  class=\\\"mdi mdi-refresh m-r-10\\\"></i></a>\\r\\n            </li>\\r\\n            <li *ngIf=\\\"updatingTrello\\\" class=\\\"hidden-xs button-pos\\\">\\r\\n              <mat-spinner [diameter]=\\\"20\\\" class=\\\"m-l-15 m-r-15 spinner\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" style=\\\"cursor:pointer\\\" title=\\\"Refreshing Trellodata...\\\"></mat-spinner>\\r\\n            </li>\\r\\n            <li class=\\\"hidden-xs\\\" style=\\\"padding-top: 20px;\\\">\\r\\n              <span class=\\\"circle-text-user\\\">\\r\\n                {{ loggedInUser.initials }}\\r\\n              </span>\\r\\n            </li>\\r\\n            <li class=\\\"dropdown\\\">\\r\\n              <a class=\\\"dropdown-toggle profile waves-effect waves-light\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"true\\\">\\r\\n                <span class=\\\"profile-username\\\">\\r\\n                  <b>{{ loggedInUser.userName }}</b> <span class=\\\"caret\\\"></span>\\r\\n                </span>\\r\\n              </a>\\r\\n              <ul class=\\\"dropdown-menu\\\">\\r\\n                <li *ngIf=\\\"!isSystemAdmin\\\">\\r\\n                  <a data-toggle=\\\"modal\\\" data-target=\\\".organization-modal\\\" (click)=\\\"showOrganizations()\\\">Switch\\r\\n                    Organization</a>\\r\\n                </li>\\r\\n                <li>\\r\\n                  <a data-toggle=\\\"modal\\\" data-target=\\\".changepassword-modal\\\" (click)=\\\"showOrganizations()\\\">Change\\r\\n                    Password</a>\\r\\n                </li>\\r\\n                <li><a (click)=\\\"signOut()\\\"> Logout</a></li>\\r\\n              </ul>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"left side-menu\\\" style=\\\"position: fixed;\\\">\\r\\n    <div class=\\\"sidebar-inner slimscrollleft\\\">\\r\\n      <div id=\\\"sidebar-menu\\\">\\r\\n        <ul>\\r\\n          <li *ngIf=\\\"isSystemAdmin\\\">\\r\\n            <a routerLink=\\\"organizationmanagement\\\" class=\\\"waves-effect\\\"><i class=\\\"fa fa-institution\\\"></i><span>\\r\\n                Organizations\\r\\n                <span class=\\\"badge badge-primary pull-right\\\"></span></span></a>\\r\\n          </li>\\r\\n          <li>\\r\\n            <a routerLink=\\\"users\\\" class=\\\"waves-effect\\\"><i class=\\\"glyphicon glyphicon-user\\\"></i><span> Users <span\\r\\n                  class=\\\"badge badge-primary pull-right\\\"></span></span></a>\\r\\n          </li>\\r\\n          <li *ngIf=\\\"!isSystemAdmin\\\">\\r\\n            <a routerLink=\\\"projects\\\" class=\\\"waves-effect\\\"><i class=\\\"mdi mdi-chart-line\\\"></i><span> Projects<span\\r\\n                  class=\\\"badge badge-primary pull-right\\\"></span></span></a>\\r\\n          </li>\\r\\n          <li *ngIf=\\\"!isSystemAdmin\\\">\\r\\n            <a routerLink=\\\"customerlist\\\" class=\\\"waves-effect\\\"><i class=\\\"ti-user\\\"></i><span> Customers <span\\r\\n                  class=\\\"badge badge-primary pull-right\\\"></span></span></a>\\r\\n          </li>\\r\\n          <li *ngIf=\\\"!isSystemAdmin\\\">\\r\\n            <a routerLink=\\\"allactivities\\\" class=\\\"waves-effect\\\"><i class=\\\"mdi mdi-comment-multiple-outline\\\"></i><span> Activities <span\\r\\n                  class=\\\"badge badge-primary pull-right\\\"></span></span></a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<script src=\\\"/frontend/src/app/app.js\\\"></script>\\r\\n<div class=\\\"content-page\\\">\\r\\n  <div class=\\\"content\\\">\\r\\n    <div class=\\\"modal fade organization-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n      aria-hidden=\\\"true\\\">\\r\\n      <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\" id=\\\"myLargeModalLabel\\\">Switch Organization</h4>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n              <thead>\\r\\n                <th *ngFor=\\\"let org of usersOrganizations\\\">\\r\\n                  <button class=\\\"btn btn-lg waves-effect waves-light\\\" (click)=\\\"changeOrg(org.id)\\\">{{org.name}}</button>\\r\\n                </th>\\r\\n              </thead>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal fade changepassword-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n      aria-hidden=\\\"true\\\">\\r\\n      <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\" id=\\\"myLargeModalLabel\\\">Change Password</h4>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <app-change-password></app-change-password>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade showNotifications-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <div class=\\\"row no-gutters\\\">\\r\\n            <div class=\\\"col-md-8 pull-left\\\">\\r\\n              <h4 class=\\\"modal-title\\\" id=\\\"myLargeModalLabel\\\" style=\\\"display: inline;\\\">Todo summary</h4>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div *ngIf=\\\"!activity.todoChecked\\\">\\r\\n                  <button class=\\\"close pull-right\\\" style=\\\"font-size: 15px; margin-top: 3px;\\\"\\r\\n                  (click)=\\\"markTodoDone(activity.id)\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">Done\\r\\n                  <i class=\\\"mdi mdi-checkbox-marked-outline\\\" style=\\\"margin-left: 5px;\\\"></i></button>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"activity.todoChecked\\\">\\r\\n                  <button class=\\\"close pull-right\\\" style=\\\"font-size: 15px; margin-top: 3px;\\\"\\r\\n                  (click)=\\\"markTodoNotDone(activity.id)\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">Not Done\\r\\n                  <i class=\\\"mdi mdi-checkbox-blank-outline\\\" style=\\\"margin-left: 5px;\\\"></i></button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\">\\r\\n            <button type=\\\"button\\\" id=\\\"closeActivityModal\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\"\\r\\n            style=\\\"display: inline;\\\">×</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n              <h4>{{activity.title}}</h4>\\r\\n              <p>{{activity.date | date: \\\"yyyy-MM-dd HH:mm\\\"}}</p>\\r\\n              <p>{{activity.creator}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-7\\\">\\r\\n              <p>{{activity.description}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { AuthService } from '../app/_services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { OrgUser } from './_models/orgUser';\r\nimport { AdminService } from './_services/admin.service';\r\nimport { ProjectService } from './_services/project.service';\r\nimport { CustomerService } from './_services/customer.service';\r\nimport { startTimeRange } from '@angular/core/src/profile/wtf_impl';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, AfterViewInit {\r\n  private _router: Router;\r\n  usersOrganizations: any = [];\r\n  isSystemAdmin: boolean = false;\r\n  valueHolder: any;\r\n  loggedInUser: any = {};\r\n  notifications: any;\r\n  activity: any = {};\r\n  updatingTrello: boolean = false;\r\n\r\n  timeLeft: number = 5;\r\n  interval;\r\n\r\n\r\n  constructor(public _authService: AuthService, private router: Router, private _adminservice: AdminService, private _projectservice: ProjectService, private _customerService: CustomerService) \r\n  { \r\n    this._router = router;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.adminCheck();\r\n    if(!this.isSystemAdmin)\r\n    {\r\n      this.getNotificationsForUser();\r\n      this.startTimer();\r\n    }\r\n    this.getLoggedInUser();\r\n  }\r\n  \r\n  ngAfterViewInit() {\r\n    \r\n  }\r\n  \r\n  async deactivateUpdateTrelloTimer()\r\n  {\r\n    this.updatingTrello = true;\r\n    await this.delay(30000);\r\n    this.updatingTrello = false;\r\n  }\r\n\r\n  startTimer() {\r\n    this.interval = setInterval(() => {\r\n      if(this.timeLeft > 0) {\r\n        this.timeLeft--;\r\n      } else {\r\n        this.getNotificationsForUser();\r\n        this.timeLeft = 300;\r\n      }\r\n    },1000)\r\n  }\r\n\r\n  pauseTimer() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  getNotificationsForUser() {\r\n    this._customerService.getNotificationsForUser().subscribe(data => {\r\n      this.notifications = data; // TODO: Ta bort\r\n    });\r\n  }\r\n\r\n  activityClick(activityId: number) {\r\n    for (let i = 0; i < this.notifications.usersActivities.length; i++) \r\n    {\r\n      if(this.notifications.usersActivities[i].id == activityId)\r\n      {\r\n        this.activity = this.notifications.usersActivities[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  goToCreateNewActivity() {\r\n    this._router.navigateByUrl('createactivity');\r\n  }\r\n\r\n  private signOut() \r\n  {\r\n    localStorage.clear()\r\n    this._router.navigateByUrl('');\r\n  }\r\n\r\n  getLoggedInUser() {\r\n    this._authService.getLoggedInUser().subscribe(data => this.loggedInUser = data);\r\n  }\r\n\r\n  showOrganizations()\r\n  {\r\n    this._adminservice.getUsersOrganizationsToken()\r\n    .subscribe(data => this.usersOrganizations = data);\r\n  }\r\n\r\n  changeOrg(orgId: number) \r\n  {\r\n    this._authService.changeOrg(orgId).subscribe();\r\n    location.reload();\r\n  }\r\n\r\n  refreshTrello()\r\n  {\r\n    this._projectservice.updateTrelloData().subscribe();\r\n    this.deactivateUpdateTrelloTimer();\r\n  }\r\n\r\n  async adminCheck() {\r\n    this._authService.isSystemAdmin().subscribe(data => {\r\n      this.valueHolder = data;\r\n      if (this.valueHolder == 1) {\r\n        this.isSystemAdmin = true;\r\n      }\r\n      else {\r\n        this.isSystemAdmin = false;\r\n      }\r\n    });\r\n    await this.delay(500);\r\n  }\r\n\r\n  async markTodoDone(activityId: any) {\r\n    document.getElementById(\"closeActivityModal\").click();\r\n    this._customerService.checkTodo(activityId).subscribe();\r\n    await this.delay(500);\r\n    this.getNotificationsForUser();\r\n  }\r\n\r\n  async markTodoNotDone(activityId: any) {\r\n    document.getElementById(\"closeActivityModal\").click();\r\n    this._customerService.unCheckTodo(activityId).subscribe();\r\n    await this.delay(500);\r\n    this.getNotificationsForUser();\r\n  }\r\n\r\n  private delay(ms: number)\r\n    {\r\n      return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProjectsComponent } from './project/projects/projects.component';\r\nimport { RegisterComponent } from './admin/register/register.component';\r\nimport { AdminService } from './_services/admin.service';\r\nimport { RolesModalComponent } from './admin/roles-modal/roles-modal.component';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { ModalModule } from 'ngx-bootstrap';\r\nimport { RoleManagementComponent } from './admin/role-management/role-management.component';\r\nimport { TabsModule } from 'ngx-tabset';\r\nimport { OrganizationManagementComponent } from './admin/organization-management/organization-management.component';\r\nimport { CheckPasswordDirectiveService } from 'src/app/_services/CheckPasswordDirective.service';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { ChooseorgComponent } from './login/chooseorg/chooseorg.component';\r\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\r\nimport { MatCardModule, MatButtonModule, MatSelectModule,MatDialogModule, MatRadioButton} from '@angular/material';\r\nimport { ProjectComponent } from './project/project/project.component';\r\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { MatRadioModule, MatProgressSpinnerModule, MatTableModule, MatPaginatorModule, MatSortModule, MatFormFieldModule, MatInputModule, MatOptionModule, MatCheckboxModule, MatChipsModule } from '@angular/material';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { CustomerListComponent } from './customer-list/customer-list.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { WavesModule } from 'angular-bootstrap-md';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { ActivityComponent } from './activity/activity.component';\r\nimport { CreateActivityComponent } from './activity/createActivity/createActivity.component';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDatepickerModule, MatNativeDateModule } from '@angular/material';\r\nimport { AmazingTimePickerModule } from 'amazing-time-picker';\r\nimport { GraphComponent } from './project/graph/graph.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CreatenextstepComponent } from './activity/createnextstep/createnextstep.component';\r\nimport { TaskListModalComponent } from './project/task-List-Modal/task-List-Modal.component';\r\nimport { ChangePasswordComponent } from './admin/change-password/change-password.component';\r\nimport { AllActivitiesComponent } from './activity/all-activities/all-activities.component';\r\nimport { TodosComponent } from './activity/todos/todos.component';\r\nimport { ProjectDashboardComponent } from './project/project-dashboard/project-dashboard.component';\r\n\r\nexport function tokenGetter() {\r\n   return localStorage.getItem('token');\r\n }\r\n\r\n@NgModule({\r\n   declarations: [\r\n      ProjectsComponent,\r\n      HomeComponent,\r\n      AppComponent,\r\n      LoginComponent,\r\n      ProjectsComponent,\r\n      RegisterComponent,\r\n      UserManagementComponent,\r\n      RolesModalComponent,\r\n      CheckPasswordDirectiveService,\r\n      RoleManagementComponent,\r\n      OrganizationManagementComponent,\r\n      ChooseorgComponent,\r\n      ProjectComponent,\r\n      CustomerComponent,\r\n      CustomerListComponent,\r\n      ActivityComponent,\r\n      CreateActivityComponent,\r\n      GraphComponent,\r\n      CreatenextstepComponent,\r\n      TaskListModalComponent,\r\n      ChangePasswordComponent,\r\n      AllActivitiesComponent,\r\n      TodosComponent,\r\n      ProjectDashboardComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      AppRoutingModule,\r\n      HttpClientModule,\r\n      MatRadioModule,\r\n      BrowserAnimationsModule,\r\n      MatOptionModule,\r\n      FormsModule,\r\n      MatInputModule,\r\n      MatDialogModule,\r\n      MatFormFieldModule,\r\n      ReactiveFormsModule,\r\n      MatCardModule,\r\n      MatSelectModule, \r\n      MatButtonModule,\r\n      ModalModule.forRoot(),\r\n      TabsModule.forRoot(),\r\n      DragDropModule,\r\n      SweetAlert2Module.forRoot({\r\n         buttonsStyling: false,\r\n         customClass: 'modal-content',\r\n         confirmButtonClass: 'btn btn-primary',\r\n         cancelButtonClass: 'btn'\r\n     }),\r\n      JwtModule.forRoot({\r\n         config: {\r\n           tokenGetter: tokenGetter,\r\n           whitelistedDomains: ['localhost:5000'],\r\n           blacklistedRoutes: ['localhost:5000/api/auth']\r\n         }\r\n       }),\r\n       BsDatepickerModule.forRoot(),\r\n       DatepickerModule.forRoot() ,\r\n      MatTableModule,\r\n      MatPaginatorModule,\r\n      MatSortModule,\r\n      BrowserAnimationsModule,\r\n      MatFormFieldModule,\r\n      MatInputModule,\r\n      FlexLayoutModule,\r\n      ChartsModule,\r\n      WavesModule,\r\n      MatListModule,\r\n      MatDatepickerModule,\r\n      MatNativeDateModule,\r\n      AmazingTimePickerModule,\r\n      MatCheckboxModule,\r\n      MatChipsModule,\r\n      NgbModule,\r\n      MatProgressSpinnerModule\r\n   ],\r\n   providers: [\r\n      AuthService,\r\n      AdminService,\r\n   ],\r\n   entryComponents: [\r\n      RolesModalComponent,\r\n      TaskListModalComponent\r\n   ],\r\n   bootstrap: [\r\n      AppComponent\r\n   ],\r\n   schemas: [\r\n      CUSTOM_ELEMENTS_SCHEMA,\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .no-records {\\r\\n    height: 48px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    background: white;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXItbGlzdC9jdXN0b21lci1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsaUJBQWlCO0VBQ25CIiwiZmlsZSI6InNyYy9hcHAvY3VzdG9tZXItbGlzdC9jdXN0b21lci1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgLm5vLXJlY29yZHMge1xyXG4gICAgaGVpZ2h0OiA0OHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gIH0iXX0= */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h2 class=\\\"m-b-30 m-t-0\\\">Customers</h2>\\r\\n\\r\\n      <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\">\\r\\n        <div class=\\\"panel panel-primary\\\">\\r\\n          <br>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div fxLayout fxLayoutAlign=\\\"left\\\" class=\\\"m-l-15\\\">\\r\\n              <mat-form-field fxFlex=\\\"40%\\\">\\r\\n                <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-2 pull-right\\\">\\r\\n            <a type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\".addCustomer-modal\\\"\\r\\n              class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\"><i data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Add new Customer\\\" class=\\\"mdi mdi-account-plus\\\"></i></a>\\r\\n              <a *ngIf=\\\"showActive && !waiter\\\" (click)=\\\"GetAllArchivedCustomerForOrganization()\\\" type=\\\"button\\\" class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Show Inactive Customers\\\"><i class=\\\"glyphicon glyphicon-folder-close\\\"></i></a>\\r\\n            <a *ngIf=\\\"!showActive && !waiter\\\" (click)=\\\"GetAllUnarchivedCustomerForOrganization()\\\" type=\\\"button\\\" class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Show Active Customers\\\"><i class=\\\"glyphicon glyphicon-folder-open\\\"></i></a>\\r\\n            <a *ngIf=\\\"waiter\\\" type=\\\"button\\\" class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\"><mat-spinner [diameter]=\\\"20\\\"></mat-spinner></a>\\r\\n            \\r\\n          </div>\\r\\n\\r\\n          <table mat-table class=\\\"table-hover\\\" [dataSource]=\\\"dataSource\\\" matSort>\\r\\n            <!--Matsort ger sorteringsalternativ-->\\r\\n\\r\\n            <!-- Name Column -->\\r\\n            <ng-container matColumnDef=\\\"name\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Region Column -->\\r\\n            <ng-container matColumnDef=\\\"region\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Region </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.region}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- OrgNr Column -->\\r\\n            <ng-container matColumnDef=\\\"org.nr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Org.Nr </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.organizationNumber}} </td>\\r\\n              </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef = \\\"responsible\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Responsible </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.responsible}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef = \\\"status\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr  style=\\\"cursor:pointer\\\" mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\r\\n              (click)=SelectedCustomer($event.target.parentElement.firstElementChild.innerText)></tr>\\r\\n          </table>\\r\\n\\r\\n          <div *ngIf=\\\"noData | async\\\" class=\\\"no-records\\\">\\r\\n            No records found\\r\\n          </div>\\r\\n          <mat-paginator [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\" showFirstLastButtons></mat-paginator>\\r\\n          <!--paginator ger sidor-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade addCustomer-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <!--ADDCUSTOMER-MODAL-->\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button id=\\\"closeCustomerModal\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"myLargeModalLabel\\\">Add new Customer</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <br>\\r\\n        <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"addCustomer()\\\">\\r\\n          <div class=\\\"form-group col-md-8\\\">\\r\\n            <label>Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" required minlength=\\\"2\\\" maxlength=\\\"25\\\" [(ngModel)]=\\\"model.name\\\"\\r\\n              name=\\\"name\\\" #name=\\\"ngModel\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-8\\\">\\r\\n            <label>Region</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" required minlength=\\\"0\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"model.region\\\"\\r\\n              name=\\\"region\\\" #region=\\\"ngModel\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-8\\\">\\r\\n            <label>Address</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" required minlength=\\\"0\\\" maxlength=\\\"45\\\" [(ngModel)]=\\\"model.address\\\"\\r\\n              name=\\\"address\\\" #address=\\\"ngModel\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-8\\\">\\r\\n            <label>Telephone</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" required minlength=\\\"0\\\" maxlength=\\\"15\\\" [(ngModel)]=\\\"model.telephone\\\"\\r\\n              name=\\\"telephone\\\" #telephone=\\\"ngModel\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-8\\\">\\r\\n            <label>Email</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" required minlength=\\\"0\\\" maxlength=\\\"50\\\"\\r\\n              [(ngModel)]=\\\"model.customermail\\\" name=\\\"customermail\\\" #customermail=\\\"ngModel\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-8\\\">\\r\\n            <label>Org.Nr</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" required minlength=\\\"0\\\" maxlength=\\\"20\\\"\\r\\n              [(ngModel)]=\\\"model.organizationNumber\\\" name=\\\"organizationnumber\\\" #organizationnumber=\\\"ngModel\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-8\\\">\\r\\n            <label>Customer Info</label>\\r\\n            <textarea rows=\\\"5\\\" type=\\\"textarea\\\" class=\\\"form-control\\\" required minlength=\\\"0\\\" maxlength=\\\"2000\\\"\\r\\n              [(ngModel)]=\\\"model.customerDescription\\\" name=\\\"customerdescription\\\" #customerdescription=\\\"ngModel\\\">\\r\\n              </textarea>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\"></div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button [disabled]=\\\"!registerForm.valid\\\" class=\\\"btn btn-primary btn-rounded waves-effect waves-light\\\" type=\\\"submit\\\">Add Customer</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, ChangeDetectionStrategy, AfterViewInit } from \"@angular/core\";\r\nimport { MatPaginator, MatTableDataSource, MatSortModule, MatSort, MatFormFieldModule, MatInputModule } from \"@angular/material\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Customer } from \"../_models/customer\";\r\nimport { CustomerService } from \"../_services/customer.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: \"app-customer-list\",\r\n  templateUrl: \"./customer-list.component.html\",\r\n  styleUrls: [\"./customer-list.component.css\"]\r\n})\r\nexport class CustomerListComponent implements OnInit, AfterViewInit {\r\n  displayedColumns: string[] = [\"name\", \"region\", \"org.nr\", \"responsible\", \"status\"];\r\n  dataSource = new MatTableDataSource<Customer>();\r\n  noData = this.dataSource.connect().pipe(map(data => data.length === 0));\r\n  model: any = {};\r\n  waiter: boolean = false;\r\n  showActive: boolean = true;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    public _authService: AuthService, \r\n    private _customerService: CustomerService,\r\n    private _router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.GetAllCustomerForOrganization();\r\n    \r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  removeData() {\r\n    //! används till ?\r\n    const data = this.dataSource.data.slice();\r\n    data.shift();\r\n    this.dataSource.data = data;\r\n  }\r\n\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  };\r\n\r\n  GetAllCustomerForOrganization() {\r\n    this._customerService.getAllCustomersForOrganization().subscribe(res => {\r\n      this.dataSource.data = res as Customer[];\r\n    });\r\n  }\r\n\r\n  GetAllArchivedCustomerForOrganization() {\r\n    this._customerService.getAllInactiveCustomersForOrganization().subscribe(res => {\r\n      this.dataSource.data = res as Customer[];\r\n    });\r\n    this.loader();\r\n  }\r\n\r\n  GetAllUnarchivedCustomerForOrganization() {\r\n    this._customerService.getAllCustomersForOrganization().subscribe(res => {\r\n      this.dataSource.data = res as Customer[];\r\n    });\r\n    this.loader();\r\n  }\r\n\r\n  SelectedCustomer(customer) {\r\n    for (let i = 0; i < this.dataSource.data.length; i++) {\r\n      if (this.dataSource.data[i].name == customer) {\r\n        this._router.navigateByUrl(\"customer/\" + this.dataSource.data[i].id);\r\n      }\r\n    }\r\n  }\r\n\r\n  addCustomer() {\r\n    this._customerService.addNewCustomer(this.model).subscribe(res => {\r\n      document.getElementById(\"closeCustomerModal\").click();\r\n      this._router.navigateByUrl(\"customer/\" + (res));\r\n    });\r\n  }\r\n\r\n  async loader()\r\n  {\r\n    this.waiter = true;\r\n    await this.delay(1000);\r\n    this.showActive = !this.showActive;\r\n    this.waiter = false;\r\n  }\r\n\r\n  private delay(ms: number)\r\n  {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}\r\n","module.exports = \".circle {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  width: 100%;\\r\\n  height: 0;\\r\\n  padding: 50% 0%;\\r\\n  border-radius: 50%;\\r\\n  background: #000;\\r\\n  color: white;\\r\\n  font-family: \\\"josefin sans\\\", Arial Black, sans;\\r\\n  font-size: 20px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.circle-text {\\r\\n  display: table-cell;\\r\\n  height: 65px;\\r\\n  width: 65px;\\r\\n  text-align: center;\\r\\n  padding-top: 18px;\\r\\n  vertical-align: middle;\\r\\n  border-radius: 50%;\\r\\n  background: rgb(95, 114, 136);\\r\\n  color: #fff;\\r\\n  font: 25px \\\"josefin sans\\\", arial;\\r\\n}\\r\\n\\r\\n.circle-text-responsible {\\r\\n  display: table-cell;\\r\\n  height: 65px;\\r\\n  width: 65px;\\r\\n  text-align: center;\\r\\n  padding-top: 18px;\\r\\n  vertical-align: middle;\\r\\n  border-radius: 50%;\\r\\n  background: #03909F;\\r\\n  color: #fff;\\r\\n  font: 25px \\\"josefin sans\\\", arial; \\r\\n}\\r\\n\\r\\n.table-hover {\\r\\n  width: 100%\\r\\n}\\r\\n\\r\\n#contactCard {\\r\\n  width: 100%;  \\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.contactNameIcon {\\r\\n  margin-top: 32px\\r\\n}\\r\\n\\r\\n.valueChangerIcon {\\r\\n  color: rgb(139, 139, 139);\\r\\n}\\r\\n\\r\\n.customerInfoAttributeForm {\\r\\n  border-bottom: 1px darkgray solid;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXIvY3VzdG9tZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsV0FBVztFQUNYLFNBQVM7RUFDVCxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osOENBQThDO0VBQzlDLGVBQWU7RUFDZixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsNkJBQTZCO0VBQzdCLFdBQVc7RUFDWCxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRTtBQUNGOztBQUVBO0VBQ0UsV0FBVztFQUNYLGVBQWU7QUFDakI7O0FBRUE7RUFDRTtBQUNGOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUNBQWlDO0FBQ25DIiwiZmlsZSI6InNyYy9hcHAvY3VzdG9tZXIvY3VzdG9tZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaXJjbGUge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAwO1xyXG4gIHBhZGRpbmc6IDUwJSAwJTtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgYmFja2dyb3VuZDogIzAwMDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgZm9udC1mYW1pbHk6IFwiam9zZWZpbiBzYW5zXCIsIEFyaWFsIEJsYWNrLCBzYW5zO1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jaXJjbGUtdGV4dCB7XHJcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICBoZWlnaHQ6IDY1cHg7XHJcbiAgd2lkdGg6IDY1cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmctdG9wOiAxOHB4O1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIGJhY2tncm91bmQ6IHJnYig5NSwgMTE0LCAxMzYpO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGZvbnQ6IDI1cHggXCJqb3NlZmluIHNhbnNcIiwgYXJpYWw7XHJcbn1cclxuXHJcbi5jaXJjbGUtdGV4dC1yZXNwb25zaWJsZSB7XHJcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICBoZWlnaHQ6IDY1cHg7XHJcbiAgd2lkdGg6IDY1cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmctdG9wOiAxOHB4O1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIGJhY2tncm91bmQ6ICMwMzkwOUY7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgZm9udDogMjVweCBcImpvc2VmaW4gc2Fuc1wiLCBhcmlhbDsgXHJcbn1cclxuXHJcbi50YWJsZS1ob3ZlciB7XHJcbiAgd2lkdGg6IDEwMCVcclxufVxyXG5cclxuI2NvbnRhY3RDYXJkIHtcclxuICB3aWR0aDogMTAwJTsgIFxyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmNvbnRhY3ROYW1lSWNvbiB7XHJcbiAgbWFyZ2luLXRvcDogMzJweFxyXG59XHJcblxyXG4udmFsdWVDaGFuZ2VySWNvbiB7XHJcbiAgY29sb3I6IHJnYigxMzksIDEzOSwgMTM5KTtcclxufVxyXG5cclxuLmN1c3RvbWVySW5mb0F0dHJpYnV0ZUZvcm0ge1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBkYXJrZ3JheSBzb2xpZDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <!--Logo namn + Settings o status-->\\r\\n      <div class=\\\"col-md-12 col-xs-12 col-sm-12\\\">\\r\\n        <div class=\\\"col-md-2 col-lg-1 col-sm-2 col-xs-3\\\">\\r\\n          <!--Logo-->\\r\\n          <div class=\\\"media-main\\\">\\r\\n            <a class=\\\"pull-left\\\">\\r\\n              <img class=\\\"thumb-lg img-circle\\\" src=\\\"assets/images/users/avatar-2.jpg\\\" alt=\\\"\\\">\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4  col-sm-5 col-xs-7 pull-left\\\">\\r\\n          <!--namn-->\\r\\n          <div class=\\\"info\\\">\\r\\n            <h1 class=\\\"m-l-15\\\" style=\\\"display:inline;\\\">{{customer?.customer.name}}</h1>\\r\\n            <a style=\\\"display:inline;\\\" id=\\\"customerName\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeCustomerName\\\"\\r\\n              class=\\\"collapsed\\\" aria-expanded=\\\"false\\\"><i class=\\\"mdi mdi-lead-pencil valueChangerIcon m-l-15\\\"></i></a>\\r\\n\\r\\n            <div id=\\\"showChangeCustomerName\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\" style=\\\"height: 0px;\\\">\\r\\n              <div class=\\\"panel-body\\\">\\r\\n                <br>\\r\\n\\r\\n                <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeCustomerName()\\\">\\r\\n                  <div class=\\\"col-lg-7\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\" required minlength=\\\"2\\\"\\r\\n                        maxlength=\\\"30\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"CustomerName\\\" #name=\\\"ngModel\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-lg-4 pull-right\\\">\\r\\n                    <button type=\\\"button\\\" href=\\\"#showChangeCustomerName\\\" data-toggle=\\\"collapse\\\"\\r\\n                      class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                        class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                        class=\\\"mdi mdi-check\\\"></i></button>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <br>\\r\\n            <h3 style=\\\"display:inline;\\\" class=\\\"text-muted m-l-15\\\">{{customer?.status}}</h3>\\r\\n            <a style=\\\"display:inline;\\\" id=\\\"customerStatus\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeCustomerStatus\\\"\\r\\n              class=\\\"collapsed\\\" aria-expanded=\\\"false\\\"><i class=\\\"mdi mdi-lead-pencil valueChangerIcon m-l-15\\\"></i></a>\\r\\n\\r\\n            <div id=\\\"showChangeCustomerStatus\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\"\\r\\n              style=\\\"height: 0px;\\\">\\r\\n              <div class=\\\"panel-body\\\">\\r\\n\\r\\n                <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeCustomerStatus()\\\">\\r\\n                  <div class=\\\"col-lg-7\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <select type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\"\\r\\n                        [(ngModel)]=\\\"model.customerStatus\\\" name=\\\"CustomerStatus\\\" #name=\\\"ngModel\\\">\\r\\n                        <option value=\\\"2\\\">\\r\\n                          Customer\\r\\n                        </option>\\r\\n                        <option value=\\\"0\\\">\\r\\n                          Suspect\\r\\n                        </option>\\r\\n                        <option value=\\\"1\\\">\\r\\n                          Prospect\\r\\n                        </option>\\r\\n                        <option value=\\\"3\\\">\\r\\n                          Inactive\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-lg-4 pull-right\\\">\\r\\n                    <button type=\\\"button\\\" href=\\\"#showChangeCustomerStatus\\\" data-toggle=\\\"collapse\\\"\\r\\n                      class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                        class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                        class=\\\"mdi mdi-check\\\"></i></button>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2  col-xs-2 pull-right\\\">\\r\\n          <!--settings-->\\r\\n          <a type=\\\"button\\\" (click)=\\\"backToCustomerList()\\\"\\r\\n            class=\\\"btn waves-effect btn-default m-t-5 btn-lg pull-right\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i> </a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <app-activity></app-activity>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-md-7 col-lg-8 pull-left\\\">\\r\\n        <!-- CUSTOMER INFO -->\\r\\n        <div class=\\\"panel panel-primary\\\">\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <h3 class=\\\"m-t-0 m-b-30\\\">Customer Info</h3>\\r\\n            <br>\\r\\n            <p>{{customer?.customer.customerDescription}}<a id=\\\"customerDescription\\\" data-toggle=\\\"collapse\\\"\\r\\n                href=\\\"#showChangeCustomerDescription\\\" class=\\\"collapsed\\\" aria-expanded=\\\"false\\\"><i\\r\\n                  class=\\\"mdi mdi-lead-pencil valueChangerIcon m-l-15\\\"></i></a></p>\\r\\n\\r\\n            <div id=\\\"showChangeCustomerDescription\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\"\\r\\n              style=\\\"height: 0px;\\\">\\r\\n              <div class=\\\"panel-body\\\">\\r\\n                <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeCustomerCustomerDescription()\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <textarea type=\\\"text\\\" rows=\\\"6\\\" class=\\\"form-control customerInfoAttributeForm\\\"\\r\\n                        [(ngModel)]=\\\"model.customerDescription\\\" name=\\\"customerDescription\\\"\\r\\n                        #name=\\\"ngModel\\\">{{customer?.customer.customerDescription}}</textarea>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-lg-2 pull-right\\\">\\r\\n                    <button type=\\\"button\\\" href=\\\"#showChangeCustomerDescription\\\" data-toggle=\\\"collapse\\\"\\r\\n                      class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                        class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                        class=\\\"mdi mdi-check\\\"></i></button>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <div class=\\\"col-lg-6 col-md-12 col-xs-12 pull-left\\\">\\r\\n              <div>\\r\\n                <table class=\\\"table table-striped\\\">\\r\\n                  <tbody>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        Region:\\r\\n                      </td>\\r\\n                      <td>{{customer?.customer.region}}\\r\\n                        <a id=\\\"region\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeRegion\\\" class=\\\"collapsed\\\"\\r\\n                          aria-expanded=\\\"false\\\"><i class=\\\"mdi mdi-lead-pencil valueChangerIcon m-l-15\\\"></i></a>\\r\\n                        <div id=\\\"showChangeRegion\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\"\\r\\n                          style=\\\"height: 0px;\\\">\\r\\n                          <div class=\\\"panel-body\\\">\\r\\n                            <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeCustomerRegion()\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                  <input type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\" required\\r\\n                                    minlength=\\\"2\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"model.region\\\" name=\\\"region\\\"\\r\\n                                    #name=\\\"ngModel\\\">\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-lg-6 pull-right\\\">\\r\\n                                <button type=\\\"button\\\" href=\\\"#showChangeRegion\\\" data-toggle=\\\"collapse\\\"\\r\\n                                  class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                                    class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                                <button type=\\\"submit\\\"\\r\\n                                  class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                                    class=\\\"mdi mdi-check\\\"></i></button>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        Address:\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{customer?.customer.address}}\\r\\n                        <a id=\\\"address\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeAddress\\\" class=\\\"collapsed\\\"\\r\\n                          aria-expanded=\\\"false\\\"><i class=\\\"mdi mdi-lead-pencil valueChangerIcon m-l-15\\\"></i></a>\\r\\n                        <div id=\\\"showChangeAddress\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\"\\r\\n                          style=\\\"height: 0px;\\\">\\r\\n                          <div class=\\\"panel-body\\\">\\r\\n                            <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeCustomerAddress()\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                  <input type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\" required\\r\\n                                    minlength=\\\"2\\\" maxlength=\\\"30\\\" [(ngModel)]=\\\"model.address\\\" name=\\\"Address\\\"\\r\\n                                    #name=\\\"ngModel\\\">\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-lg-6 pull-right\\\">\\r\\n                                <button type=\\\"button\\\" href=\\\"#showChangeAddress\\\" data-toggle=\\\"collapse\\\"\\r\\n                                  class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                                    class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                                <button type=\\\"submit\\\"\\r\\n                                  class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                                    class=\\\"mdi mdi-check\\\"></i></button>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        Org.Nr:\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{customer?.customer.organizationNumber}}\\r\\n                        <a id=\\\"organizationNumber\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeOrganizationNumber\\\"\\r\\n                          class=\\\"collapsed\\\" aria-expanded=\\\"false\\\"><i\\r\\n                            class=\\\"mdi mdi-lead-pencil valueChangerIcon m-l-15\\\"></i></a>\\r\\n                        <div id=\\\"showChangeOrganizationNumber\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\"\\r\\n                          style=\\\"height: 0px;\\\">\\r\\n                          <div class=\\\"panel-body\\\">\\r\\n                            <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeCustomerOrganizationNumber()\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                  <input type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\" required\\r\\n                                    minlength=\\\"2\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"model.organizationNumber\\\"\\r\\n                                    name=\\\"organizationNumber\\\" #name=\\\"ngModel\\\">\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-lg-6 pull-right\\\">\\r\\n                                <button type=\\\"button\\\" href=\\\"#showChangeOrganizationNumber\\\" data-toggle=\\\"collapse\\\"\\r\\n                                  class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                                    class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                                <button type=\\\"submit\\\"\\r\\n                                  class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                                    class=\\\"mdi mdi-check\\\"></i></button>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-12 col-xs-12 pull-right\\\">\\r\\n              <div class=\\\"table-responsive\\\">\\r\\n                <table id=\\\"mainTable\\\" class=\\\"table table-striped m-b-0\\\">\\r\\n                  <tbody>\\r\\n\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        Mail:\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{customer?.customer.customermail}}\\r\\n                        <a id=\\\"customermail\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeCustomermail\\\" class=\\\"collapsed\\\"\\r\\n                          aria-expanded=\\\"false\\\"><i class=\\\"mdi mdi-lead-pencil valueChangerIcon m-l-15\\\"></i></a>\\r\\n                        <div id=\\\"showChangeCustomermail\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\"\\r\\n                          style=\\\"height: 0px;\\\">\\r\\n                          <div class=\\\"panel-body\\\">\\r\\n                            <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeCustomerCustomermail()\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                  <input type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\" required\\r\\n                                    minlength=\\\"2\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"model.customermail\\\" name=\\\"customermail\\\"\\r\\n                                    #name=\\\"ngModel\\\">\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-lg-8 pull-right\\\">\\r\\n                                <button type=\\\"button\\\" href=\\\"#showChangeCustomermail\\\" data-toggle=\\\"collapse\\\"\\r\\n                                  class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                                    class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                                <button type=\\\"submit\\\"\\r\\n                                  class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                                    class=\\\"mdi mdi-check\\\"></i></button>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        Telephone:\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{customer?.customer.telephone}}\\r\\n                        <a id=\\\"telephone\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeTelephone\\\" class=\\\"collapsed\\\"\\r\\n                          aria-expanded=\\\"false\\\"><i class=\\\"mdi mdi-lead-pencil valueChangerIcon m-l-15\\\"></i></a>\\r\\n                        <div id=\\\"showChangeTelephone\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\"\\r\\n                          style=\\\"height: 0px;\\\">\\r\\n                          <div class=\\\"panel-body\\\">\\r\\n                            <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeCustomerTelephone()\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                  <input type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\" required\\r\\n                                    minlength=\\\"2\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"model.telephone\\\" name=\\\"telephone\\\"\\r\\n                                    #name=\\\"ngModel\\\">\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-lg-8 pull-right\\\">\\r\\n                                <button type=\\\"button\\\" href=\\\"#showChangeTelephone\\\" data-toggle=\\\"collapse\\\"\\r\\n                                  class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                                    class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                                <button type=\\\"submit\\\"\\r\\n                                  class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                                    class=\\\"mdi mdi-check\\\"></i></button>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        First Contacted:\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{customer?.customer.firstContacted | date:'yyyy-MM-dd'}}\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let customfield of customer?.customer.customFields\\\">\\r\\n                      <td>\\r\\n                        {{customfield.title}}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{customfield.data}}\\r\\n                        <swal #deleteSwal title=\\\"Delete customfield\\\" text=\\\"{{customfield.title}}: {{customfield.data}}\\\"\\r\\n                          type=\\\"question\\\" [showCancelButton]=\\\"true\\\" [focusCancel]=\\\"true\\\"\\r\\n                          (confirm)=\\\"deleteCustomField(customfield.id)\\\">\\r\\n                        </swal>\\r\\n                        <a style=\\\"cursor:pointer;\\\" (click)=\\\"deleteSwal.show()\\\"><i\\r\\n                            class=\\\"glyphicon glyphicon-remove valueChangerIcon m-l-15\\\"></i></a>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12 pull-right\\\">\\r\\n                <div class=\\\"panel panel-info\\\">\\r\\n                  <div class=\\\"col-md-2 pull-right\\\">\\r\\n                    <a type=\\\"button\\\" id=\\\"addCustomFieldBtn\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion-test-2\\\"\\r\\n                      href=\\\"#showCustomFieldEdit\\\" class=\\\"collapsed\\\" aria-expanded=\\\"false\\\"\\r\\n                      class=\\\"btn waves-effect m-t-5 btn-default btn-lg pull-right\\\"><i class=\\\"mdi mdi-playlist-plus\\\"></i>\\r\\n                    </a>\\r\\n                  </div>\\r\\n                  <div id=\\\"showCustomFieldEdit\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\"\\r\\n                    style=\\\"height: 0px;\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                      <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"addCustomField()\\\">\\r\\n                        <hr>\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"form-group col-md-6 pull-left\\\">\\r\\n                            <label>Title</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\" required minlength=\\\"2\\\"\\r\\n                              maxlength=\\\"20\\\" [(ngModel)]=\\\"model.title\\\" name=\\\"title\\\" #name=\\\"ngModel\\\">\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group col-md-6 pull-right\\\">\\r\\n                            <label>Data</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\" required minlength=\\\"1\\\"\\r\\n                              maxlength=\\\"25\\\" [(ngModel)]=\\\"model.data\\\" name=\\\"data\\\" #region=\\\"ngModel\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-footer\\\">\\r\\n                          <button type=\\\"button\\\" href=\\\"#showCustomFieldEdit\\\" data-toggle=\\\"collapse\\\"\\r\\n                            class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                              class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                          <button [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\"\\r\\n                            class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                              class=\\\"mdi mdi-check\\\"></i></button>\\r\\n                        </div>\\r\\n                      </form>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-5 col-lg-4 col-xs-12 col-sm-12 pull-right\\\">\\r\\n        <!-- CONTACTS -->\\r\\n        <div class=\\\"panel panel-primary\\\">\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <h3 class=\\\"m-t-0 m-b-30\\\">Contacts</h3>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                <div class=\\\"col-md-10 pull-left\\\">\\r\\n                  <div fxLayout fxLayoutAlign=\\\"left\\\" class=\\\"m-l-15\\\">\\r\\n                    <mat-form-field fxFlex=\\\"50%\\\">\\r\\n                      <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2 pull-right\\\">\\r\\n                  <a type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\".addContact-modal\\\"\\r\\n                    class=\\\"btn waves-effect m-t-5 btn-default btn-lg pull-right\\\"><i class=\\\"mdi mdi-account-plus\\\"></i>\\r\\n                  </a>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <hr style=\\\"margin-bottom: 0px;\\\">\\r\\n\\r\\n            <table mat-table class=\\\"table-hover\\\" [dataSource]=\\\"dataSource\\\" matSort>\\r\\n              <ng-container matColumnDef=\\\"name\\\">\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"padding-right: 0px;\\\">\\r\\n                  <div class=\\\"row justify-content-between\\\" id=\\\"contactCard\\\" (click)=SelectedContact(element.id)\\r\\n                    data-toggle=\\\"modal\\\" data-target=\\\".viewContact-modal\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-12 col-xs-12 col-sm-12\\\">\\r\\n                        <div style=\\\"padding-top: 18px;\\\">\\r\\n                          <div *ngIf=\\\"element.responsible\\\" class=\\\"circle-text-responsible col-lg-1 col-xs-5 col-md-2 pull-left\\\">\\r\\n                            {{element.initials}}\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"!element.responsible\\\" class=\\\"circle-text col-lg-1 col-xs-5 col-md-2 pull-left\\\">\\r\\n                            {{element.initials}}\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-8 col-md-6 col-xs-7\\\" >\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <h4 style=\\\"padding-left: 25px;\\\">{{element.name}}</h4>\\r\\n                          </div>\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <h5 class=\\\"text-muted\\\" style=\\\"padding-left: 25px;\\\">{{element.role}}</h5>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n            <div *ngIf=\\\"noData | async\\\" class=\\\"no-records\\\">\\r\\n              No contacts found\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-7 col-lg-8 col-sm-12 pull-left\\\">\\r\\n        <!-- PROJECT INFO -->\\r\\n        <div class=\\\"panel panel-primary\\\">\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <h3 class=\\\"m-t-0 m-b-30\\\">Projects</h3>\\r\\n            <hr>\\r\\n            <div class=\\\"col-lg-6\\\" *ngFor=\\\"let project of projects\\\">\\r\\n              <h4>{{project.name}}</h4>\\r\\n              <br>\\r\\n              <div id={{project.id}} style=\\\"display: block\\\" *ngIf=\\\"project.estimatedTime > 2\\\">\\r\\n                <canvas baseChart [data]=\\\"[project.estimatedTime - project.usedTime, project.usedTime]\\\"\\r\\n                  [colors]=\\\"pieChartColors\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\">\\r\\n                </canvas>\\r\\n              </div>\\r\\n              <div id={{project.id}} style=\\\"display: block\\\" *ngIf=\\\"project.estimatedTime < 2\\\">\\r\\n                <canvas baseChart [data]=\\\"[1]\\\" [colors]=\\\"pieChartColorsWithoutTrello\\\"\\r\\n                  [labels]=\\\"pieChartLabelsWithoutTrello\\\" [chartType]=\\\"pieChartType\\\">\\r\\n                </canvas>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--VIEWCONTACT-MODAL-->\\r\\n<div class=\\\"modal fade viewContact-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <div *ngIf=\\\"contact.responsible\\\" class=\\\"circle-text-responsible col-lg-1 col-xs-5 col-md-2 m-r-5 pull-left\\\">\\r\\n          {{contact.initials}}\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!contact.responsible\\\" class=\\\"circle-text col-lg-1 col-xs-5 col-md-2 m-r-5 pull-left\\\">\\r\\n          {{contact.initials}}\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" id=\\\"closeCustomerModal\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\r\\n        <div class=\\\"col-md-6 col-xs-5 m-l-15 m-t-15\\\">\\r\\n          <h2 class=\\\"modal-title\\\" id=\\\"myLargeModalLabel\\\">{{contact.name}}</h2>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!contact.masked\\\" class=\\\"col-md-1 col-xs-2\\\">\\r\\n          <a id=\\\"contactName\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeContactName\\\" class=\\\"collapsed\\\"\\r\\n            aria-expanded=\\\"false\\\"><i class=\\\"mdi mdi-lead-pencil valueChangerIcon pull-left contactNameIcon\\\"></i></a>\\r\\n        </div>\\r\\n        <div id=\\\"showChangeContactName\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\" style=\\\"height: 0px;\\\">\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <br>\\r\\n            <br>\\r\\n            <br>\\r\\n            <br>\\r\\n            <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeContactName()\\\">\\r\\n              <div class=\\\"col-lg-7\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\" required minlength=\\\"2\\\"\\r\\n                    maxlength=\\\"30\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"ContactName\\\" #name=\\\"ngModel\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-4 pull-right\\\">\\r\\n                <button type=\\\"button\\\" href=\\\"#showChangeContactName\\\" data-toggle=\\\"collapse\\\"\\r\\n                  class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                    class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                    class=\\\"mdi mdi-check\\\"></i></button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <br>\\r\\n        <br>\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table id=\\\"mainTable\\\" class=\\\"table table-striped m-b-0\\\">\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  Role:\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{contact.role}}\\r\\n                  <a *ngIf=\\\"!contact.masked\\\" id=\\\"contactRole\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeContactRole\\\"\\r\\n                    class=\\\"collapsed\\\" aria-expanded=\\\"false\\\"><i\\r\\n                      class=\\\"mdi mdi-lead-pencil valueChangerIcon m-l-15\\\"></i></a>\\r\\n                  <div id=\\\"showChangeContactRole\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\"\\r\\n                    style=\\\"height: 0px;\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                      <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeContactRole()\\\">\\r\\n                        <div class=\\\"col-lg-7\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\" required minlength=\\\"2\\\"\\r\\n                              maxlength=\\\"30\\\" [(ngModel)]=\\\"model.role\\\" name=\\\"ContactRole\\\" #name=\\\"ngModel\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-4 pull-right\\\">\\r\\n                          <button type=\\\"button\\\" href=\\\"#showChangeContactRole\\\" data-toggle=\\\"collapse\\\"\\r\\n                            class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                              class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                          <button type=\\\"submit\\\"\\r\\n                            class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                              class=\\\"mdi mdi-check\\\"></i></button>\\r\\n                        </div>\\r\\n                      </form>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"!contact.masked\\\">\\r\\n                <td>\\r\\n                  Mail:\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{contact.mail}}\\r\\n                  <a id=\\\"contactMail\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeContactMail\\\" class=\\\"collapsed\\\"\\r\\n                    aria-expanded=\\\"false\\\"><i class=\\\"mdi mdi-lead-pencil valueChangerIcon m-l-15\\\"></i></a>\\r\\n                  <div id=\\\"showChangeContactMail\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\"\\r\\n                    style=\\\"height: 0px;\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                      <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeContactMail()\\\">\\r\\n                        <div class=\\\"col-lg-7\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\" required minlength=\\\"2\\\"\\r\\n                              maxlength=\\\"30\\\" [(ngModel)]=\\\"model.mail\\\" name=\\\"ContactMail\\\" #name=\\\"ngModel\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-4 pull-right\\\">\\r\\n                          <button type=\\\"button\\\" href=\\\"#showChangeContactMail\\\" data-toggle=\\\"collapse\\\"\\r\\n                            class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                              class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                          <button type=\\\"submit\\\"\\r\\n                            class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                              class=\\\"mdi mdi-check\\\"></i></button>\\r\\n                        </div>\\r\\n                      </form>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"!contact.masked\\\">\\r\\n                <td>\\r\\n                  Telephone:\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{contact.telephone}}\\r\\n                  <a id=\\\"contactTelephone\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeContactTelephone\\\" class=\\\"collapsed\\\"\\r\\n                    aria-expanded=\\\"false\\\"><i class=\\\"mdi mdi-lead-pencil valueChangerIcon m-l-15\\\"></i></a>\\r\\n                  <div id=\\\"showChangeContactTelephone\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\"\\r\\n                    style=\\\"height: 0px;\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                      <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeContactTelephone()\\\">\\r\\n                        <div class=\\\"col-lg-7\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control customerInfoAttributeForm\\\" required minlength=\\\"2\\\"\\r\\n                              maxlength=\\\"30\\\" [(ngModel)]=\\\"model.telephone\\\" name=\\\"ContactTelephone\\\" #name=\\\"ngModel\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-4 pull-right\\\">\\r\\n                          <button type=\\\"button\\\" href=\\\"#showChangeContactTelephone\\\" data-toggle=\\\"collapse\\\"\\r\\n                            class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\"><i\\r\\n                              class=\\\"mdi mdi-close\\\"></i></button>\\r\\n                          <button type=\\\"submit\\\"\\r\\n                            class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\"><i\\r\\n                              class=\\\"mdi mdi-check\\\"></i></button>\\r\\n                        </div>\\r\\n                      </form>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"!contact.masked\\\">\\r\\n                <td>\\r\\n                  Responsible:\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div *ngIf=\\\"!contact.responsible\\\" class=\\\"checkbox checkbox-primary checkbox-single\\\">\\r\\n                    <input id=\\\"responsible\\\" type=\\\"checkbox\\\" (change)=\\\"changeResponsibleContact($event)\\\"\\r\\n                      [checked]=\\\"contact.responsible\\\" value=\\\"{{contact.responsible}}\\\">\\r\\n                    <label for=\\\"responsible\\\"></label>\\r\\n                  </div>\\r\\n                  <p *ngIf=\\\"contact.responsible\\\">Yes</p>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!contact.masked\\\" class=\\\"modal-footer\\\">\\r\\n        <button class=\\\"btn btn-danger btn-rounded waves-effect waves-light\\\" (click)=\\\"maskContactSwal.show()\\\">Mask\\r\\n          Contact</button>\\r\\n        <swal #maskContactSwal title=\\\"Mask confirmation\\\" text=\\\"Are you sure you want to mask {{contact.name}}?\\\"\\r\\n          type=\\\"question\\\" [showCancelButton]=\\\"true\\\" [focusCancel]=\\\"true\\\" (confirm)=\\\"maskContact()\\\">\\r\\n        </swal>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade addContact-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <!--ADDCONTACT-MODAL-->\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" id=\\\"closeAddCustomerModal\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n          aria-hidden=\\\"true\\\">×</button>\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"myLargeModalLabel\\\">Add new Contact</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <br>\\r\\n        <br>\\r\\n        <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"addContact()\\\">\\r\\n\\r\\n          <div class=\\\"form-group col-md-8\\\">\\r\\n            <label>Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" required minlength=\\\"2\\\" maxlength=\\\"30\\\" [(ngModel)]=\\\"model.name\\\"\\r\\n              name=\\\"name\\\" #name=\\\"ngModel\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-8\\\">\\r\\n            <label>Role</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" required minlength=\\\"1\\\" maxlength=\\\"25\\\" [(ngModel)]=\\\"model.role\\\"\\r\\n              name=\\\"role\\\" #region=\\\"ngModel\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-8\\\">\\r\\n            <label>Telephone</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" required minlength=\\\"5\\\" maxlength=\\\"15\\\" [(ngModel)]=\\\"model.telephone\\\"\\r\\n              name=\\\"telephone\\\" #telephone=\\\"ngModel\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-8\\\">\\r\\n            <label>Mail</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" required minlength=\\\"2\\\" maxlength=\\\"50\\\" [(ngModel)]=\\\"model.mail\\\"\\r\\n              name=\\\"mail\\\" #customermail=\\\"ngModel\\\">\\r\\n          </div>\\r\\n\\r\\n          <br>\\r\\n          <br>\\r\\n          <br>\\r\\n          <div class=\\\"row\\\">\\r\\n          </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button [disabled]=\\\"!registerForm.valid\\\" class=\\\"btn btn-primary btn-rounded waves-effect waves-light\\\" type=\\\"submit\\\">Add\\r\\n              Contact</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, ChangeDetectionStrategy, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatTableDataSource, MatSortModule, MatSort, MatFormFieldModule, MatInputModule } from '@angular/material';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Xeditable } from 'angular-xeditable';\r\nimport { map } from 'rxjs/operators';\r\nimport { CustomerService } from '../_services/customer.service';\r\nimport { Router } from '@angular/router';\r\nimport { Contact } from '../_models/contact';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent implements OnInit, AfterViewInit {\r\n  id: number;\r\n  customer: any;\r\n  displayedColumns: string[] = ['name'];\r\n  dataSource = new MatTableDataSource<Contact>();\r\n  noData = this.dataSource.connect().pipe(map(data => data.length === 0));\r\n  model: any = {};\r\n  contact: any = {};\r\n  projects: any;\r\n  public pieChartLabels = ['Hours Remaining', 'Hours Completed'];\r\n  public pieChartLabelsWithoutTrello = ['No Trello Connection'];\r\n  public pieChartType = 'pie';\r\n  public pieChartColors:{}[]= [ { backgroundColor: ['#F3A09E', '#3ABAAF'] } ];\r\n  public pieChartColorsWithoutTrello:{}[]= [ { backgroundColor: ['#404040'] } ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(public _authService: AuthService, private _activatedroute: ActivatedRoute, private _customerService: CustomerService, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.GetCustomer();\r\n    this.GetAllContacts();\r\n    this.getAllProjects();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  removeData() {          //! används till ?\r\n    const data = this.dataSource.data.slice();\r\n    data.shift();\r\n    this.dataSource.data = data;\r\n  }\r\n\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  GetCustomer()\r\n  {\r\n    this._activatedroute.params.subscribe(params => { this.id = params['id']; });\r\n    this._customerService.getCustomerById(this.id).subscribe(data => this.customer = data);\r\n  }\r\n\r\n  GetAllContacts() {\r\n    this._customerService.getContactpersonsByCustomerId(this.id).subscribe(res => {\r\n      this.dataSource.data = res as Contact[];\r\n    });\r\n  }\r\n\r\n  async getAllProjects()\r\n  {\r\n    this._customerService.getAllProjectsForCustomer(this.id).subscribe(data => this.projects = data);\r\n    await this.delay(500);\r\n  }\r\n\r\n  backToCustomerList()\r\n  {\r\n    this._router.navigateByUrl(\"customerlist\");\r\n  }\r\n\r\n  SelectedContact(contactId)\r\n  {\r\n      \r\n    for (let i = 0; i < this.dataSource.data.length; i++) \r\n    {\r\n      if(this.dataSource.data[i].id == contactId)\r\n      {\r\n        this.contact = this.dataSource.data[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  async deleteCustomField(customfieldId)\r\n  {\r\n    this._customerService.deleteCustomField(customfieldId).subscribe();\r\n    await this.delay(800);\r\n    this.GetCustomer()\r\n  }\r\n\r\n    //!________________________Customer__________________________________________\r\n\r\n    async addCustomField()\r\n    {\r\n      this.model.customerId = this.id;\r\n      this._customerService.addNewCustomField(this.model).subscribe();\r\n      await this.delay(500);\r\n      document.getElementById(\"addCustomFieldBtn\").click();\r\n      this.GetCustomer();\r\n      this.model = {};\r\n    }\r\n\r\n    async changeCustomerName()\r\n    {\r\n      this.customer.customer.name = this.model.name;\r\n      this._customerService.editCustomer(this.customer.customer).subscribe();\r\n      document.getElementById(\"customerName\").click();\r\n      await this.delay(500);\r\n      this.GetCustomer();\r\n      this.model = {};\r\n    }\r\n\r\n    async changeCustomerStatus()\r\n    {\r\n      \r\n      this.customer.customer.customerStatus = this.model.customerStatus;\r\n      this._customerService.editCustomer(this.customer.customer).subscribe();\r\n      document.getElementById(\"customerStatus\").click();\r\n      await this.delay(500);\r\n      this.GetCustomer();\r\n      this.model = {};\r\n    }\r\n\r\n    async changeCustomerRegion()\r\n    {\r\n      this.customer.customer.region = this.model.region;\r\n      this._customerService.editCustomer(this.customer.customer).subscribe();\r\n      document.getElementById(\"region\").click();\r\n      await this.delay(500);\r\n      this.GetCustomer();\r\n      this.model = {};\r\n    }\r\n\r\n    async changeCustomerAddress()\r\n    {\r\n      this.customer.customer.address = this.model.address;\r\n      this._customerService.editCustomer(this.customer.customer).subscribe();\r\n      document.getElementById(\"address\").click();\r\n      await this.delay(500);\r\n      this.GetCustomer();\r\n      this.model = {};\r\n    }\r\n\r\n    async changeCustomerOrganizationNumber()\r\n    {\r\n      this.customer.customer.organizationNumber = this.model.organizationNumber;\r\n      this._customerService.editCustomer(this.customer.customer).subscribe();\r\n      document.getElementById(\"organizationNumber\").click();\r\n      await this.delay(500);\r\n      this.GetCustomer();\r\n      this.model = {};\r\n    }\r\n\r\n    async changeCustomerCustomermail()\r\n    {\r\n      this.customer.customer.customermail = this.model.customermail;\r\n      this._customerService.editCustomer(this.customer.customer).subscribe();\r\n      document.getElementById(\"customermail\").click();\r\n      await this.delay(500);\r\n      this.GetCustomer();\r\n      this.model = {};\r\n    }\r\n\r\n    async changeCustomerTelephone()\r\n    {\r\n      this.customer.customer.telephone = this.model.telephone;\r\n      this._customerService.editCustomer(this.customer.customer).subscribe();\r\n      document.getElementById(\"telephone\").click();\r\n      await this.delay(500);\r\n      this.GetCustomer();\r\n      this.model = {};\r\n    }\r\n\r\n    async changeCustomerCustomerDescription()\r\n    {\r\n      this.customer.customer.customerDescription = this.model.customerDescription;\r\n      this._customerService.editCustomer(this.customer.customer).subscribe();\r\n      document.getElementById(\"customerDescription\").click();\r\n      await this.delay(500);\r\n      this.GetCustomer();\r\n      this.model = {};\r\n    }\r\n\r\n//!______________________________Contacts_____________________________\r\n\r\n    async addContact()\r\n    {\r\n      this.model.customerId = this.id;\r\n      this._customerService.addNewContactperson(this.model).subscribe();\r\n      await this.delay(1000);\r\n      document.getElementById(\"closeAddCustomerModal\").click();\r\n      this.GetAllContacts();\r\n      this.model = {};\r\n    }\r\n\r\n    async maskContact()\r\n    {\r\n      this._customerService.maskContactperson(this.contact.id).subscribe();\r\n      await this.delay(500);\r\n      document.getElementById(\"closeCustomerModal\").click();\r\n      this.GetAllContacts();\r\n    }\r\n\r\n    async changeContactName()\r\n    {\r\n      this.contact.name = this.model.name;\r\n      this._customerService.editContactperson(this.contact).subscribe();\r\n      document.getElementById(\"contactName\").click();\r\n      await this.delay(500);\r\n      this.GetAllContacts();\r\n      await this.delay(500);\r\n      this.SelectedContact(this.contact.id);\r\n      this.model = {};\r\n    }\r\n\r\n    async changeContactRole()\r\n    {\r\n      this.contact.role = this.model.role;\r\n      this._customerService.editContactperson(this.contact).subscribe();\r\n      document.getElementById(\"contactRole\").click();\r\n      await this.delay(500);\r\n      this.GetAllContacts();\r\n      await this.delay(500);\r\n      this.SelectedContact(this.contact.id);\r\n      this.model = {};\r\n    }\r\n\r\n    async changeContactMail()\r\n    {\r\n      this.contact.mail = this.model.mail;\r\n      this._customerService.editContactperson(this.contact).subscribe();\r\n      document.getElementById(\"contactMail\").click();\r\n      await this.delay(500);\r\n      this.GetAllContacts();\r\n      await this.delay(500);\r\n      this.SelectedContact(this.contact.id);\r\n      this.model = {};\r\n    }\r\n\r\n    async changeContactTelephone()\r\n    {\r\n      this.contact.telephone = this.model.telephone;\r\n      this._customerService.editContactperson(this.contact).subscribe();\r\n      document.getElementById(\"contactTelephone\").click();\r\n      await this.delay(500);\r\n      this.GetAllContacts();\r\n      await this.delay(500);\r\n      this.SelectedContact(this.contact.id);\r\n      this.model = {};\r\n    }\r\n\r\n    async changeResponsibleContact(event: any)\r\n    {\r\n      this.contact.responsible = event.currentTarget.checked;\r\n      this._customerService.changeResponsibleContact(this.contact).subscribe();\r\n      await this.delay(500);\r\n      this.GetAllContacts();\r\n      await this.delay(500);\r\n      this.SelectedContact(this.contact.id);\r\n    }\r\n\r\n    private delay(ms: number)\r\n    {\r\n      return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <h2>Welcome Back!</h2>\\r\\n    <h2>{{ loggedInUser?.fullName }}</h2>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"isCrm\\\">\\r\\n    <app-all-activities></app-all-activities>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"isPms\\\">\\r\\n    <app-project-dashboard></app-project-dashboard>\\r\\n    <app-projects></app-projects>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!isCrm && !isPms\\\">\\r\\n    \\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n  loggedInUser: any;\r\n  loggedInRole: any;\r\n  isCrm: boolean = false;\r\n  isPms: boolean = false;\r\n\r\n  constructor(public _authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.getCurrentUser();\r\n    this.getLoggedInUsersRoles();\r\n  }\r\n\r\n  getCurrentUser() {\r\n    this._authService.getLoggedInUser()\r\n      .subscribe(data => this.loggedInUser = data);\r\n  }\r\n\r\n  getLoggedInUsersRoles() {\r\n    this._authService.getLoggedInUsersRole()\r\n      .subscribe(data => {\r\n        this.loggedInRole = data;\r\n        if (this.loggedInRole.name == \"CRM\") {\r\n          this.isCrm = true;\r\n          this.isPms = false;\r\n        }\r\n        else if (this.loggedInRole.name == \"PMS\") {\r\n          this.isPms = true;\r\n          this.isCrm = false;\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \".btn:hover {\\r\\nbackground-color: #1EA69A;\\r\\ncolor: white;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vY2hvb3Nlb3JnL2Nob29zZW9yZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EseUJBQXlCO0FBQ3pCLFlBQVk7QUFDWiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2Nob29zZW9yZy9jaG9vc2VvcmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG46aG92ZXIge1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiAjMUVBNjlBO1xyXG5jb2xvcjogd2hpdGU7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"accountbg\\\"></div>\\r\\n<div class=\\\"wrapper-page\\\">\\r\\n  <div class=\\\"panel panel-primary\\\">\\r\\n    <div class=\\\"panel-body\\\"> <!--Fruktansvärt fult, eventuellt göra om med buttongroup?-->\\r\\n      <h3 class=\\\"text-muted text-center m-t-0\\\"><b>Choose Organization</b></h3>\\r\\n      <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n          <th *ngFor=\\\"let Organization of organizations\\\">\\r\\n            <button class=\\\"btn btn-lg waves-effect waves-light\\\" (click)=\\\"loginWithOrg(Organization.id)\\\">{{Organization.name}}</button>\\r\\n\\r\\n          </th>\\r\\n        </thead>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { OrgUser } from 'src/app/_models/orgUser';\r\n\r\n@Component({\r\n  selector: 'app-chooseorg',\r\n  templateUrl: './chooseorg.component.html',\r\n  styleUrls: ['./chooseorg.component.css']\r\n})\r\nexport class ChooseorgComponent implements OnInit { \r\n  organizations: any = [];\r\n  @Input() userDetails: OrgUser;\r\n\r\n  constructor(private _adminService: AdminService, private _authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this._adminService.getUsersOrganizations(this.userDetails.username)\r\n    .subscribe(data => this.organizations = data);\r\n  }\r\n\r\n  loginWithOrg(orgId: number) {\r\n    this._authService.secondLogin(this.userDetails, orgId).subscribe(next => {\r\n      console.log('Logged in successfully');\r\n      location.reload();\r\n    }, error => {\r\n      console.log('Failed to login');\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\r\\n    border-left: 5px solid #42A948; /* green */\\r\\n  }\\r\\n  \\r\\n  .ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDhCQUE4QixFQUFFLFVBQVU7RUFDNUM7O0VBRUE7SUFDRSw4QkFBOEIsRUFBRSxRQUFRO0VBQzFDIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uZy12YWxpZFtyZXF1aXJlZF0sIC5uZy12YWxpZC5yZXF1aXJlZCAge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjNDJBOTQ4OyAvKiBncmVlbiAqL1xyXG4gIH1cclxuICBcclxuICAubmctaW52YWxpZDpub3QoZm9ybSkgIHtcclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2E5NDQ0MjsgLyogcmVkICovXHJcbiAgfVxyXG4gICJdfQ== */\"","module.exports = \"<div *ngIf=\\\"loggedIn() && !showChooseOrg\\\">\\r\\n  <div class=\\\"accountbg\\\"></div>\\r\\n  <div class=\\\"wrapper-page\\\">\\r\\n    <div class=\\\"panel panel-color panel-primary panel-pages\\\">\\r\\n\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <h3 class=\\\"text-center m-t-0 m-b-15\\\">\\r\\n          <span>WPMS</span>\\r\\n        </h3>\\r\\n        <h4 class=\\\"text-muted text-center m-t-0\\\"><b>Sign In</b></h4>\\r\\n\\r\\n        <form #loginForm=\\\"ngForm\\\" class=\\\"form-horizontal m-t-20\\\" (ngSubmit)=\\\"firstLogin()\\\">\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-xs-12\\\">\\r\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required minlength=\\\"2\\\"\\r\\n                maxlength=\\\"16\\\" [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\">\\r\\n\\r\\n              <div *ngIf=\\\"username.errors && (username.dirty || username.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div [hidden]=\\\"!username.errors.required\\\">\\r\\n                  username is required!\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-xs-12\\\">\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" required maxlength=\\\"10\\\" minlength=\\\"4\\\" name=\\\"password\\\"\\r\\n                [(ngModel)]=\\\"model.password\\\" placeholder=\\\"Password\\\" #password=\\\"ngModel\\\">\\r\\n\\r\\n              <div *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\r\\n                <div [hidden]=\\\"!password.errors.required\\\">\\r\\n                  Password is required! and max 10 characters.\\r\\n                </div>\\r\\n                <div [hidden]=\\\"!password.errors.minlength\\\">\\r\\n                  Password must be at least 4 characters long.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group text-center m-t-40\\\">\\r\\n            <div class=\\\"col-xs-12\\\">\\r\\n              <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-primary btn-block btn-lg waves-effect waves-light\\\"\\r\\n                type=\\\"submit\\\">Log In</button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <b>{{errorText}}</b>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-chooseorg *ngIf=\\\"showChooseOrg\\\" [userDetails]=\\\"model\\\"></app-chooseorg>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  model: any = {};\r\n  showChooseOrg: boolean = false;\r\n  errorText: any;\r\n  @Output() userLoggedIn = new EventEmitter();\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  userLoginIn() {\r\n    this.userLoggedIn.emit('loggedIn');\r\n  }\r\n\r\n  async firstLogin() {\r\n    this.authService.FirstLogin(this.model).subscribe(next => {\r\n      console.log('Logged in successfully');\r\n      location.reload();\r\n    }, error => {\r\n      console.log(error.status);\r\n      if (error != null) {\r\n        try {\r\n          var errorName = error.error.text;\r\n          \r\n          if (errorName == \"MULTIPLEORGANIZATIONS\") {\r\n            this.showChooseOrg = true;\r\n          }\r\n          else {\r\n            this.errorText = \"Wrong Username or Password!\";\r\n            console.log(\"Failed to login\");\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Failed to login \" + e);\r\n          this.errorText = \"Wrong Username or Password!\";\r\n        }\r\n        \r\n      }\r\n      else {\r\n        console.log(\"Failed to login\")\r\n        this.errorText = \"Wrong Username or Password!\";\r\n      }\r\n    });\r\n    this.router.navigateByUrl('/home');\r\n  }\r\n\r\n  login() { \r\n    this.authService.login(this.model).subscribe(next => {\r\n      console.log('Logged in successfully');\r\n    }, error => {\r\n      console.log('Failed to login');\r\n      this.errorText = \"Wrong Username or Password!\";\r\n    });\r\n    this.router.navigateByUrl('/home');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.clear();\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !token;\r\n  }\r\n\r\n  private delay(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n}\r\n","module.exports = \".tdBold\\r\\n{\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.example-radio-group {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin: 15px 0;\\r\\n  }\\r\\n\\r\\n.example-radio-button {\\r\\n    margin: 5px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvamVjdC9ncmFwaC9ncmFwaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsY0FBYztFQUNoQjs7QUFFQTtJQUNFLFdBQVc7RUFDYiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvZ3JhcGgvZ3JhcGguY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZEJvbGRcclxue1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5leGFtcGxlLXJhZGlvLWdyb3VwIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWFyZ2luOiAxNXB4IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLXJhZGlvLWJ1dHRvbiB7XHJcbiAgICBtYXJnaW46IDVweDtcclxuICB9Il19 */\"","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n  <div class=\\\"panel panel-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <h3 style=\\\"display:inline;\\\" class=\\\"m-t-0 m-l-15 m-b-30\\\">Trello Graphs</h3>\\r\\n      <a style=\\\"display:inline;\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\".swapTrelloConnection-modal\\\"\\r\\n        class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\"><i data-toggle=\\\"tooltip\\\"\\r\\n          data-placement=\\\"top\\\" title=\\\"Change or Add Trello Connection\\\" class=\\\"mdi mdi-swap-horizontal\\\"></i>\\r\\n      </a>\\r\\n      <div *ngIf=\\\"project?.hasTrello\\\" style=\\\"display:inline;\\\">\\r\\n        <a style=\\\"display:inline;\\\" type=\\\"button\\\" data-toggle=\\\"tooltip\\\" *ngIf=\\\"!toggleGraph\\\" (click)=\\\"toggleGraphs()\\\"\\r\\n          data-placement=\\\"top\\\" title=\\\"Change to the task view\\\"\\r\\n          class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\">Task View\\r\\n        </a>\\r\\n        <a style=\\\"display:inline;\\\" type=\\\"button\\\" data-toggle=\\\"tooltip\\\" *ngIf=\\\"toggleGraph\\\" (click)=\\\"toggleGraphs()\\\"\\r\\n          data-placement=\\\"top\\\" title=\\\"Change to the time view\\\"\\r\\n          class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\">Time View\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <br>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"project?.hasTrello\\\">\\r\\n      <div class=\\\"col-md-3 m-b-15 m-t-30\\\" *ngIf=\\\"!toggleGraph\\\">\\r\\n        <table class=\\\"table table-striped m-b-0\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              Trelloboard:\\r\\n            </td>\\r\\n            <td>\\r\\n              {{project?.trelloBoardName}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              Total Backlog time:\\r\\n            </td>\\r\\n            <td>\\r\\n              {{project?.estimatedTime - project?.completedTime - project?.inProductionTime - project?.inTestTime}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              In Production time:\\r\\n            </td>\\r\\n            <td>\\r\\n              {{project?.inProductionTime}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              In Test time:\\r\\n            </td>\\r\\n            <td>\\r\\n              {{project?.inTestTime}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              Done:\\r\\n            </td>\\r\\n            <td>\\r\\n              {{project?.completedTime}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <b>Total time:</b>\\r\\n            </td>\\r\\n            <td>\\r\\n              <b>{{project?.estimatedTime}}</b>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\" *ngIf=\\\"!toggleGraph\\\">\\r\\n        <canvas baseChart\\r\\n          [data]=\\\"[project?.estimatedTime - project?.completedTime - project?.inProductionTime - project?.inTestTime, project?.inProductionTime, project?.inTestTime, project?.completedTime]\\\"\\r\\n          [colors]=\\\"pieChartColors\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\">\\r\\n        </canvas>\\r\\n        <br>\\r\\n        <br>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 m-b-15 m-t-30\\\" *ngIf=\\\"toggleGraph\\\">\\r\\n        <table class=\\\"table table-striped m-b-0\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              Trelloboard:\\r\\n            </td>\\r\\n            <td>\\r\\n              {{project?.trelloBoardName}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              Total Backlog count:\\r\\n            </td>\\r\\n            <td>\\r\\n              {{project?.estimatedCount - project?.completedCount - project?.inProductionCount - project?.inTestCount}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              In Production count:\\r\\n            </td>\\r\\n            <td>\\r\\n              {{project?.inProductionCount}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              In Test count:\\r\\n            </td>\\r\\n            <td>\\r\\n              {{project?.inTestCount}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              Done count:\\r\\n            </td>\\r\\n            <td>\\r\\n              {{project?.completedCount}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <b>Total Task count:</b>\\r\\n            </td>\\r\\n            <td>\\r\\n              <b>{{project?.estimatedCount}}</b>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-9\\\" *ngIf=\\\"toggleGraph\\\">\\r\\n        <canvas baseChart\\r\\n          [data]=\\\"[project?.estimatedCount - project?.completedCount - project?.inProductionCount - project?.inTestCount, project?.inProductionCount, project?.inTestCount, project?.completedCount]\\\"\\r\\n          [colors]=\\\"pieChartColors\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\">\\r\\n        </canvas>\\r\\n        <br>\\r\\n        <br>\\r\\n      </div>\\r\\n    </div>\\r\\n    <h4 class=\\\"m-l-30\\\" *ngIf=\\\"!project?.hasTrello\\\"><i class=\\\"mdi mdi-alert-outline m-r-30\\\"></i> Could not find any\\r\\n      Trellodata for this project!</h4>\\r\\n\\r\\n\\r\\n    <!-- <div class=\\\"col-md-12 pull left\\\">                                               DETTA ÄR EN BURNDOWN-CHART SOM SKULLE KUNNA IMPLEMENTERAS\\r\\n        <div class=\\\"flex\\\">\\r\\n            <div class=\\\"flex-item\\\">\\r\\n              <div style=\\\"display: block;\\\">\\r\\n              <canvas baseChart width=\\\"300\\\" height=\\\"100\\\"\\r\\n                          [datasets]=\\\"lineChartData\\\"\\r\\n                          [labels]=\\\"lineChartLabels\\\"\\r\\n                          [options]=\\\"lineChartOptions\\\"\\r\\n                          [colors]=\\\"lineChartColors\\\"\\r\\n                          [legend]=\\\"lineChartLegend\\\"\\r\\n                          [chartType]=\\\"lineChartType\\\"\\r\\n                          (chartHover)=\\\"chartHovered($event)\\\"\\r\\n                          (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"flex-item\\\">\\r\\n              <br>\\r\\n              <table class=\\\"table table-responsive table-condensed\\\">\\r\\n                <tr>\\r\\n                  <th></th>\\r\\n                  <th *ngFor=\\\"let label of lineChartLabels\\\">{{label}}</th>\\r\\n                </tr>\\r\\n                <tr *ngFor=\\\"let d of lineChartData; let i=index\\\" [class]=\\\"'line-'+i\\\">\\r\\n                    <td class=\\\"tdBold\\\">\\r\\n                        {{d.label}}\\r\\n                    </td>\\r\\n                  <td *ngFor=\\\"let label of lineChartLabels; let j=index\\\">{{d && d.data[j]}}</td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <br>\\r\\n        </div> -->\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<!--swapTrelloConnection-MODAL-->\\r\\n<div class=\\\"modal fade swapTrelloConnection-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" id=\\\"closeModal\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"myLargeModalLabel\\\">Trello Connection\\r\\n          <i class=\\\"mdi mdi-information-outline m-r-15\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\"\\r\\n            title=\\\"Trelloboards with projects already connected to them are not availble\\\"></i>\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n              <div class=\\\"panel-heading\\\">\\r\\n                <h4 class=\\\"panel-title\\\">\\r\\n                  <a data-toggle=\\\"collapse\\\" href=\\\"#SwapTrello\\\" class=\\\"collapsed\\\" aria-expanded=\\\"false\\\">\\r\\n                    Change to existing Trelloboard\\r\\n                  </a>\\r\\n                </h4>\\r\\n              </div>\\r\\n              \\r\\n              <div id=\\\"SwapTrello\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\" style=\\\"height: 0px;\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                  <form #removeOrChangeForm=\\\"ngForm\\\">\\r\\n                  <label>Trelloboards</label>\\r\\n                  <mat-radio-group aria-labelledby=\\\"example-radio-group-label\\\" class=\\\"example-radio-group\\\" name=\\\"selectedBoard\\\" [(ngModel)]=\\\"selectedBoard\\\" required>\\r\\n                    <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let board of availableBoards\\\"\\r\\n                      [value]=\\\"board.id\\\">\\r\\n                      {{board.name}}\\r\\n                    </mat-radio-button>\\r\\n                  </mat-radio-group>\\r\\n                  <br>\\r\\n                  <button class=\\\"btn btn-danger btn-rounded waves-effect waves-light m-r-15\\\"\\r\\n                    (click)=\\\"removeBoardConnectionSwal.show()\\\">Remove Connection</button>\\r\\n                  <swal #removeBoardConnectionSwal title=\\\"Remove Trello confirmation\\\"\\r\\n                    text=\\\"Are you sure you want to remove connection to Trello?\\\" type=\\\"question\\\"\\r\\n                    [showCancelButton]=\\\"true\\\" [focusCancel]=\\\"true\\\" (confirm)=\\\"removeBoardConnection()\\\">\\r\\n                  </swal>\\r\\n                  <button (click)=\\\"changeBoardConnectionSwal.show()\\\" [disabled]=\\\"!removeOrChangeForm.valid\\\"\\r\\n                    class=\\\"btn btn-primary btn-rounded waves-effect waves-light\\\">Change Board</button>\\r\\n                  <swal #changeBoardConnectionSwal title=\\\"Change Trelloboard confirmation\\\"\\r\\n                    text=\\\"Are you sure you want to change connection to Trello?\\\" type=\\\"question\\\"\\r\\n                    [showCancelButton]=\\\"true\\\" [focusCancel]=\\\"true\\\" (confirm)=\\\"changeBoardConnection()\\\">\\r\\n                  </swal>\\r\\n                </form>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n              <div class=\\\"panel-heading\\\">\\r\\n                <h4 class=\\\"panel-title\\\">\\r\\n                  <a data-toggle=\\\"collapse\\\" href=\\\"#CreateTrello\\\" class=\\\"collapsed\\\" aria-expanded=\\\"false\\\">\\r\\n                    Create a new Trelloboard\\r\\n                  </a>\\r\\n                </h4>\\r\\n              </div>\\r\\n              <form #addBoardForm=\\\"ngForm\\\">\\r\\n              <div id=\\\"CreateTrello\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\" style=\\\"height: 0px;\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-md-10\\\"><label>Trelloboard name</label>\\r\\n                      <input type=\\\"text\\\" required minlength=\\\"3\\\" maxlength=\\\"30\\\" class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"model.name\\\" name=\\\"trelloboardname\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row m-t-15\\\">\\r\\n                    <button (click)=\\\"createBoardConnectionSwal.show()\\\" [disabled]=\\\"!addBoardForm.valid\\\"\\r\\n                      class=\\\"btn btn-primary btn-rounded waves-effect waves-light m-t-15 m-l-15\\\">Create Board</button>\\r\\n                    <swal #createBoardConnectionSwal title=\\\"Create Trelloboard\\\"\\r\\n                      text=\\\"Are you sure you want to create a new Trelloboard?\\\" type=\\\"question\\\"\\r\\n                      [showCancelButton]=\\\"true\\\" [focusCancel]=\\\"true\\\" (confirm)=\\\"createNewTrelloBoard()\\\">\\r\\n                    </swal>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\r\nimport { ProjectService } from 'src/app/_services/project.service';\r\nimport { ChartDataSets, ChartOptions } from 'chart.js';\r\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\r\n\r\n@Component({\r\n  selector: 'app-graph',\r\n  templateUrl: './graph.component.html',\r\n  styleUrls: ['./graph.component.css']\r\n})\r\nexport class GraphComponent implements OnInit {\r\n  @Input() projectId: any;\r\n  project: any;\r\n  model: any = {};\r\n  toggleGraph: boolean = false;\r\n  public pieChartLabels = ['In Backlog', 'In Production', 'In Test', 'Done'];\r\n  public pieChartType = 'pie';\r\n  public pieChartColors:{}[]= [ { backgroundColor: ['#F3A09E', '#6F78F2', '#ffe066', '#3ABAAF'] } ];\r\n\r\n  selectedBoard: any;\r\n  availableBoards: any;\r\n\r\n\r\n  constructor( private _projectService: ProjectService) { }\r\n\r\n  ngOnInit() {\r\n    this.getProject()\r\n    this.getAvailableBoards()\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    changes.projectId;\r\n    this.getProject()\r\n    this.getAvailableBoards()\r\n  }\r\n\r\n  getProject(){\r\n    this._projectService.getProjectValues(this.projectId).subscribe(data => this.project = data);\r\n  }\r\n\r\n  getAvailableBoards(){\r\n    this._projectService.getAvaliableBoards().subscribe(data => this.availableBoards = data);\r\n  }\r\n\r\n  async changeBoardConnection(){\r\n    this.model.projectId = this.projectId;\r\n    this.model.trelloBoardId = this.selectedBoard;\r\n    this._projectService.changeTrelloBoardConnection(this.model).subscribe();\r\n    await this.delay(800);\r\n    document.getElementById(\"closeModal\").click();\r\n    this.getProject();\r\n    this.getAvailableBoards();\r\n  }\r\n\r\n  async removeBoardConnection(){\r\n    this.model.projectId = this.projectId;\r\n    this._projectService.removeTrelloBoardConnection(this.model).subscribe();\r\n    await this.delay(800);\r\n    this.getProject();\r\n    this.getAvailableBoards();\r\n  }\r\n\r\n  async createNewTrelloBoard(){\r\n    this.model.projectId = this.projectId;\r\n    this._projectService.createTrelloBoard(this.model).subscribe();\r\n    await this.delay(500);\r\n    document.getElementById(\"closeModal\").click();\r\n    this.getProject();\r\n    this.getAvailableBoards();\r\n  }\r\n\r\n  toggleGraphs()\r\n  {\r\n    this.toggleGraph = !this.toggleGraph;\r\n  }\r\n\r\n  private delay(ms: number)\r\n    {\r\n      return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n//_____________________________________________________________________________________________________ NEDAN ÄR FÖR BURNDOWN SOM ÄR UTKOMMENTERAD I HTML\r\n\r\n  private generateNumber(i: number) {\r\n    return Math.floor((Math.random() * (i < 2 ? 100 : 1000)) + 1);\r\n  }\r\n\r\n  // events\r\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\r\n    console.log(event, active);\r\n  }\r\n\r\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\r\n    console.log(event, active);\r\n  }\r\n\r\n  public pushOne() {\r\n    this.lineChartData.forEach((x, i) => {\r\n      const num = this.generateNumber(i);\r\n      const data: number[] = x.data as number[];\r\n      data.push(num);\r\n    });\r\n    this.lineChartLabels.push(`Label ${this.lineChartLabels.length}`);\r\n  }\r\n\r\n  public changeColor() {\r\n    this.lineChartColors[0].borderColor = 'green';\r\n    this.lineChartColors[0].backgroundColor = `rgba(0, 255, 0, 0.3)`;\r\n  }\r\n\r\n\r\npublic lineChartData: ChartDataSets[] = [\r\n  { data: [349, 290, 230, 189, 133, 78, 38], label: 'Estimated' },\r\n  { data: [349, 296, 229, 190, 124, 67, 32], label: 'Actually' }\r\n];\r\npublic lineChartLabels: Label[] = ['Sprint 1', 'Sprint 2', 'Sprint 3', 'Sprint 4', 'Sprint 5', 'Sprint 6', 'Sprint 7', 'Sprint 8'];\r\npublic lineChartOptions: (ChartOptions & { annotation: any }) = {\r\n  responsive: true,\r\n  scales: {\r\n    // We use this empty structure as a placeholder for dynamic theming.\r\n    xAxes: [{}],\r\n    yAxes: [\r\n      {\r\n        id: 'y-axis-0',\r\n        position: 'left',\r\n      }\r\n    ]\r\n  },\r\n  annotation: {\r\n    annotations: [\r\n      {\r\n        type: 'line',\r\n        mode: 'vertical',\r\n        scaleID: 'x-axis-0',\r\n        value: 'March',\r\n        borderColor: 'orange',\r\n        borderWidth: 2,\r\n        label: {\r\n          enabled: true,\r\n          fontColor: 'orange',\r\n          content: 'LineAnno'\r\n        }\r\n      },\r\n    ],\r\n  },\r\n};\r\npublic lineChartColors: Color[] = [\r\n  { // grey'', ''rgba(148,159,177,1)\r\n    backgroundColor: 'rgba(243,159,158,0.1)',\r\n    borderColor: '#F07F7B',\r\n    pointBackgroundColor: 'rgba(148,159,177,1)',\r\n    pointBorderColor: '#fff',\r\n    pointHoverBackgroundColor: '#fff',\r\n    pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n  },\r\n  { // dark greyrgba(77,83,96,1)\r\n    backgroundColor: 'rgba(58,183,176,0.1)',\r\n    borderColor: '#3ABAAF',\r\n    pointBackgroundColor: 'rgba(77,83,96,1)',\r\n    pointBorderColor: '#fff',\r\n    pointHoverBackgroundColor: '#fff',\r\n    pointHoverBorderColor: 'rgba(77,83,96,1)'\r\n  },\r\n  { // red\r\n    backgroundColor: 'rgba(255,0,0,0.3)',\r\n    borderColor: 'red',\r\n    pointBackgroundColor: 'rgba(148,159,177,1)',\r\n    pointBorderColor: '#fff',\r\n    pointHoverBackgroundColor: '#fff',\r\n    pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n    \r\n  }\r\n];\r\npublic lineChartLegend = true;\r\npublic lineChartType = 'line';\r\n\r\n//_____________________________________________________________________________________________________\r\n\r\n\r\n}\r\n","module.exports = \".middle {\\r\\n    border-right-color: black;\\r\\n    border-right-width: 200px;\\r\\n}\\r\\n\\r\\n.hover {\\r\\n    border:1px solid #EEEEEE;\\r\\n}\\r\\n\\r\\n.hover:hover {\\r\\n    background-color: rgb(227, 233, 222);\\r\\n    box-shadow: 0 0.3em 0.3em -0.2em var(--hover);\\r\\n    -webkit-transform: translateY(-0.15em);\\r\\n            transform: translateY(-0.15em); \\r\\n}\\r\\n\\r\\n.circle-text-priority1-3 {\\r\\n    display: table-cell;\\r\\n    height: 50px; \\r\\n    width: 50px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n    border-radius: 50%;\\r\\n    background: rgb(182, 39, 46);\\r\\n    color: #fff;\\r\\n    font: 28px \\\"josefin sans\\\", arial;\\r\\n  }\\r\\n\\r\\n.circle-text-estimate {\\r\\n    display: table-cell;\\r\\n    height: 34px; \\r\\n    width: 34px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n    border-radius: 50%;\\r\\n    background: #18C3B5;\\r\\n    color: #fff;\\r\\n    font: 17px \\\"josefin sans\\\", arial;\\r\\n  }\\r\\n\\r\\n.circle-text-notestimate {\\r\\n    display: table-cell;\\r\\n    height: 34px; \\r\\n    width: 34px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n    border-radius: 50%;\\r\\n    background: #F3A09E;\\r\\n    color: #fff;\\r\\n    font: 17px \\\"josefin sans\\\", arial;\\r\\n  }\\r\\n\\r\\n.inline {\\r\\n      display: inline;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvamVjdC9wcm9qZWN0LWRhc2hib2FyZC9wcm9qZWN0LWRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLG9DQUFvQztJQUNwQyw2Q0FBNkM7SUFDN0Msc0NBQThCO1lBQTlCLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osV0FBVztJQUNYLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLDRCQUE0QjtJQUM1QixXQUFXO0lBQ1gsZ0NBQWdDO0VBQ2xDOztBQUVBO0lBQ0UsbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLFdBQVc7SUFDWCxnQ0FBZ0M7RUFDbEM7O0FBRUE7SUFDRSxtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLGdDQUFnQztFQUNsQzs7QUFFQTtNQUNJLGVBQWU7RUFDbkIiLCJmaWxlIjoic3JjL2FwcC9wcm9qZWN0L3Byb2plY3QtZGFzaGJvYXJkL3Byb2plY3QtZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWlkZGxlIHtcclxuICAgIGJvcmRlci1yaWdodC1jb2xvcjogYmxhY2s7XHJcbiAgICBib3JkZXItcmlnaHQtd2lkdGg6IDIwMHB4O1xyXG59XHJcblxyXG4uaG92ZXIge1xyXG4gICAgYm9yZGVyOjFweCBzb2xpZCAjRUVFRUVFO1xyXG59XHJcblxyXG4uaG92ZXI6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyNywgMjMzLCAyMjIpO1xyXG4gICAgYm94LXNoYWRvdzogMCAwLjNlbSAwLjNlbSAtMC4yZW0gdmFyKC0taG92ZXIpO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0wLjE1ZW0pOyBcclxufVxyXG5cclxuLmNpcmNsZS10ZXh0LXByaW9yaXR5MS0zIHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgICBoZWlnaHQ6IDUwcHg7IFxyXG4gICAgd2lkdGg6IDUwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZDogcmdiKDE4MiwgMzksIDQ2KTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgZm9udDogMjhweCBcImpvc2VmaW4gc2Fuc1wiLCBhcmlhbDtcclxuICB9XHJcblxyXG4gIC5jaXJjbGUtdGV4dC1lc3RpbWF0ZSB7XHJcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xyXG4gICAgaGVpZ2h0OiAzNHB4OyBcclxuICAgIHdpZHRoOiAzNHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQ6ICMxOEMzQjU7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGZvbnQ6IDE3cHggXCJqb3NlZmluIHNhbnNcIiwgYXJpYWw7XHJcbiAgfVxyXG5cclxuICAuY2lyY2xlLXRleHQtbm90ZXN0aW1hdGUge1xyXG4gICAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICAgIGhlaWdodDogMzRweDsgXHJcbiAgICB3aWR0aDogMzRweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjRjNBMDlFO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBmb250OiAxN3B4IFwiam9zZWZpbiBzYW5zXCIsIGFyaWFsO1xyXG4gIH1cclxuXHJcbiAgLmlubGluZSB7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZTtcclxuICB9Il19 */\"","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n  <div class=\\\"panel panel-body\\\">\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"data?.numberOfProjects > 0\\\">\\r\\n      <div class=\\\"col-md-4\\\" *ngFor=\\\"let project of data?.projects\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"m-l-15 media-main\\\">\\r\\n            <a class=\\\"pull-left\\\">\\r\\n              <div class=\\\"circle-text-priority1-3 collapsed\\\">{{project?.priority}}</div>\\r\\n            </a>\\r\\n          </div>\\r\\n          <h3 class=\\\"m-l-10\\\">{{project?.name}}</h3>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <div *ngIf=\\\"project?.values.hasTrello\\\">\\r\\n          <canvas baseChart\\r\\n            [data]=\\\"[project?.values.estimatedTime - project?.values.completedTime - project?.values.inProductionTime - project?.values.inTestTime, project?.values.inProductionTime, project?.values.inTestTime, project?.values.completedTime]\\\"\\r\\n            [colors]=\\\"pieChartColors\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\">\\r\\n          </canvas>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!project?.values.hasTrello\\\">\\r\\n          <div style=\\\"display: block\\\">\\r\\n            <canvas baseChart [data]=\\\"[1]\\\" [colors]=\\\"pieChartColorsWithoutTrello\\\" [labels]=\\\"pieChartLabelsWithoutTrello\\\"\\r\\n              [chartType]=\\\"pieChartType\\\">\\r\\n            </canvas>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <br>\\r\\n        <h4 class=\\\"text-muted\\\">Tasks in production</h4>\\r\\n\\r\\n        <div *ngIf=\\\"project?.hasCards\\\">\\r\\n          <div class=\\\"panel panel-body hover\\\"  type=\\\"button\\\" *ngFor=\\\"let card of project?.productionCards | slice: 0:10;\\\" (click)=\\\"goToTrelloCard(card?.url)\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-10 m-t-5\\\">\\r\\n                <b>{{card?.content}}</b>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-2 m-l-5 pull-right\\\">\\r\\n                <div *ngIf=\\\"card.hasEstimatedTime\\\" class=\\\"circle-text-estimate\\\">{{card?.estimatedTime}}</div>\\r\\n                <div *ngIf=\\\"!card.hasEstimatedTime\\\" class=\\\"circle-text-notestimate\\\">-</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div *ngIf=\\\"card?.hasAssignedUser\\\" class=\\\"col-md-12\\\">\\r\\n                <i class=\\\"mdi mdi-human-greeting inline\\\"></i>\\r\\n                <p class=\\\"inline m-l-10\\\"> {{card?.user}}</p>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!card?.hasAssignedUser\\\" class=\\\"col-md-12\\\">\\r\\n                <i class=\\\"mdi mdi-alert-outline inline\\\"></i>\\r\\n                <b class=\\\"inline m-l-10\\\"> This card does not have an assigned user!</b>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"!project?.hasCards\\\">\\r\\n          <div class=\\\"panel panel-body hover\\\" type=\\\"button\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <i class=\\\"mdi mdi-alert-outline inline\\\"></i>\\r\\n                <b class=\\\"inline m-l-10\\\"> There is no Tasks in Production</b>\\r\\n              </div>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <b class=\\\"inline m-l-10\\\">No one is currently working on this project</b>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"data?.numberOfProjects == 0\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n          <h2><i class=\\\"mdi mdi-alert-outline inline\\\"></i> No Projects exists!</h2>\\r\\n      </div>\\r\\n      </div>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectService } from 'src/app/_services/project.service';\r\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\r\n\r\n@Component({\r\n  selector: 'app-project-dashboard',\r\n  templateUrl: './project-dashboard.component.html',\r\n  styleUrls: ['./project-dashboard.component.css']\r\n})\r\nexport class ProjectDashboardComponent implements OnInit {\r\n  public pieChartLabels = ['In Backlog', 'In Production', 'In Test', 'Done'];\r\n  public pieChartLabelsWithoutTrello = ['Not enough Trellodata'];\r\n  public pieChartType = 'pie';\r\n  public pieChartColors:{}[]= [ { backgroundColor: ['#F3A09E', '#6F78F2', '#ffe066', '#3ABAAF'] } ];\r\n  public pieChartColorsWithoutTrello:{}[]= [ { backgroundColor: ['#404040'] } ];\r\n  data: any;\r\n\r\n  constructor( private _projectService: ProjectService) { }\r\n\r\n  ngOnInit() {\r\n    this.getDashBoardProjects();\r\n  }\r\n\r\n  getDashBoardProjects()\r\n  {\r\n    this._projectService.getDashboardProjects().subscribe(res => this.data = res);\r\n  }\r\n\r\n  goToTrelloCard(url: any) {\r\n    if(url == null || url == \"\")\r\n    {\r\n      console.log(\"No Trelloboard for this project\");\r\n    }\r\n    else\r\n      window.open(url);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n.active{\\r\\n  background-color: rgba(143, 241, 187, 0.808);\\r\\n  border: solid 0.5px;\\r\\n}\\r\\n\\r\\n.unactive:hover{\\r\\n    background-color: rgb(206, 195, 223);\\r\\n    border: solid 0.5px;\\r\\n}\\r\\n\\r\\n.example-card {\\r\\n  max-width: 400px;\\r\\n  background-color: #f1eff8;\\r\\n  margin-bottom: 15px;\\r\\n  \\r\\n}\\r\\n\\r\\n.example-card:hover{\\r\\n  \\r\\n  background-color: darkgray;\\r\\n  }\\r\\n\\r\\n.mat-card-title {\\r\\n    font-size:15px !important;\\r\\n    font-weight: 500 !important;\\r\\n}\\r\\n\\r\\n.panel{\\r\\n  height:100%;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.btn-circle.btn-lg {\\r\\n  width: 70px;\\r\\n  height: 70px;\\r\\n  padding: 10px 16px;\\r\\n  border-radius: 35px;\\r\\n  font-size: 24px;\\r\\n  line-height: 1.33;\\r\\n}\\r\\n\\r\\n.btn-circle {\\r\\n  width: 30px;\\r\\n  height: 30px;\\r\\n  padding: 6px 0px;\\r\\n  border-radius: 15px;\\r\\n  text-align: center;\\r\\n  font-size: 12px;\\r\\n  line-height: 1.42857;\\r\\n}\\r\\n\\r\\n.ellipsis {\\r\\nmax-width: 40px;\\r\\ntext-overflow: ellipsis;\\r\\noverflow: hidden;\\r\\nwhite-space: nowrap;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\nwidth: 400px;\\r\\nmax-width: 100%;\\r\\nmargin: 0 25px 25px 0;\\r\\ndisplay: inline-block;\\r\\nvertical-align: top;\\r\\n}\\r\\n\\r\\n.example-list {\\r\\nborder: solid 1px #ccc;\\r\\nmin-height: 60px;\\r\\nbackground: white;\\r\\nborder-radius: 4px;\\r\\noverflow: hidden;\\r\\ndisplay: block;\\r\\n}\\r\\n\\r\\n.example-box {\\r\\npadding: 20px 10px;\\r\\nborder-bottom: solid 1px #ccc;\\r\\ncolor: rgba(0, 0, 0, 0.87);\\r\\ndisplay: flex;\\r\\nflex-direction: row;\\r\\njustify-content: space-between;\\r\\nbox-sizing: border-box;\\r\\ncursor: move;\\r\\nbackground: white;\\r\\nfont-size: 14px;\\r\\n}\\r\\n\\r\\n.cdk-drag-preview {\\r\\nbox-sizing: border-box;\\r\\nborder-radius: 4px;\\r\\nbox-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\\r\\n            0 8px 10px 1px rgba(0, 0, 0, 0.14),\\r\\n            0 3px 14px 2px rgba(0, 0, 0, 0.12);\\r\\n}\\r\\n\\r\\n.cdk-drag-placeholder {\\r\\nopacity: 0;\\r\\n}\\r\\n\\r\\n.cdk-drag-animating {\\r\\ntransition: -webkit-transform 250ms cubic-bezier(0, 0, 0.2, 1);\\r\\ntransition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\r\\ntransition: transform 250ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 250ms cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\r\\n\\r\\n.example-box:last-child {\\r\\nborder: none;\\r\\n}\\r\\n\\r\\n.example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder) {\\r\\ntransition: -webkit-transform 250ms cubic-bezier(0, 0, 0.2, 1);\\r\\ntransition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\r\\ntransition: transform 250ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 250ms cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\r\\n\\r\\n.valueChangerIcon {\\r\\n    color: rgb(139, 139, 139);\\r\\n}\\r\\n\\r\\n.projectInfoAttributeForm {\\r\\n    border-bottom: 1px darkgray solid;\\r\\n}\\r\\n\\r\\n.borderCard {\\r\\n  border: 3px;\\r\\n  border-color: black;\\r\\n}\\r\\n\\r\\n.circle-text-priority1-3 {\\r\\n  display: table-cell;\\r\\n  height: 78px; \\r\\n  width: 78px;\\r\\n  text-align: center;\\r\\n  vertical-align: middle;\\r\\n  border-radius: 50%;\\r\\n  background: rgb(182, 39, 46);\\r\\n  color: #fff;\\r\\n  font: 38px \\\"josefin sans\\\", arial;\\r\\n}\\r\\n\\r\\n.circle-text-priority4-6 {\\r\\n  display: table-cell;\\r\\n  height: 78px; \\r\\n  width: 78px;\\r\\n  text-align: center;\\r\\n  vertical-align: middle;\\r\\n  border-radius: 50%;\\r\\n  background: rgb(218, 137, 33);\\r\\n  color: #fff;\\r\\n  font: 38px \\\"josefin sans\\\", arial;\\r\\n}\\r\\n\\r\\n.circle-text-priority7-9 {\\r\\n  display: table-cell;\\r\\n  height: 78px; \\r\\n  width: 78px;\\r\\n  text-align: center;\\r\\n  vertical-align: middle;\\r\\n  border-radius: 50%;\\r\\n  background: rgb(235, 221, 28);\\r\\n  color: #fff;\\r\\n  font: 38px \\\"josefin sans\\\", arial;\\r\\n}\\r\\n\\r\\n.circle-text-priority10 {\\r\\n  display: table-cell;\\r\\n  height: 78px; \\r\\n  width: 78px;\\r\\n  text-align: center;\\r\\n  vertical-align: middle;\\r\\n  border-radius: 50%;\\r\\n  background: #1EA69A;\\r\\n  color: #fff;\\r\\n  font: 38px \\\"josefin sans\\\", arial;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvamVjdC9wcm9qZWN0L3Byb2plY3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSw0Q0FBNEM7RUFDNUMsbUJBQW1CO0FBQ3JCOztBQUVBO0lBQ0ksb0NBQW9DO0lBQ3BDLG1CQUFtQjtBQUN2Qjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQix5QkFBeUI7RUFDekIsbUJBQW1COztBQUVyQjs7QUFFQTs7RUFFRSwwQkFBMEI7RUFDMUI7O0FBQ0E7SUFDRSx5QkFBeUI7SUFDekIsMkJBQTJCO0FBQy9COztBQUVBO0VBQ0UsV0FBVztFQUNYLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2Ysb0JBQW9CO0FBQ3RCOztBQUNBO0FBQ0EsZUFBZTtBQUNmLHVCQUF1QjtBQUN2QixnQkFBZ0I7QUFDaEIsbUJBQW1CO0FBQ25COztBQUVBO0FBQ0EsWUFBWTtBQUNaLGVBQWU7QUFDZixxQkFBcUI7QUFDckIscUJBQXFCO0FBQ3JCLG1CQUFtQjtBQUNuQjs7QUFFQTtBQUNBLHNCQUFzQjtBQUN0QixnQkFBZ0I7QUFDaEIsaUJBQWlCO0FBQ2pCLGtCQUFrQjtBQUNsQixnQkFBZ0I7QUFDaEIsY0FBYztBQUNkOztBQUVBO0FBQ0Esa0JBQWtCO0FBQ2xCLDZCQUE2QjtBQUM3QiwwQkFBMEI7QUFDMUIsYUFBYTtBQUNiLG1CQUFtQjtBQUNuQiw4QkFBOEI7QUFDOUIsc0JBQXNCO0FBQ3RCLFlBQVk7QUFDWixpQkFBaUI7QUFDakIsZUFBZTtBQUNmOztBQUVBO0FBQ0Esc0JBQXNCO0FBQ3RCLGtCQUFrQjtBQUNsQjs7OENBRThDO0FBQzlDOztBQUVBO0FBQ0EsVUFBVTtBQUNWOztBQUVBO0FBQ0EsOERBQXNEO0FBQXRELHNEQUFzRDtBQUF0RCwwR0FBc0Q7QUFDdEQ7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQSw4REFBc0Q7QUFBdEQsc0RBQXNEO0FBQXRELDBHQUFzRDtBQUN0RDs7QUFHQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGlDQUFpQztBQUNyQzs7QUFFQTtFQUNFLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQiw0QkFBNEI7RUFDNUIsV0FBVztFQUNYLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osV0FBVztFQUNYLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLDZCQUE2QjtFQUM3QixXQUFXO0VBQ1gsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsNkJBQTZCO0VBQzdCLFdBQVc7RUFDWCxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGdDQUFnQztBQUNsQyIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvcHJvamVjdC9wcm9qZWN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmFjdGl2ZXtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE0MywgMjQxLCAxODcsIDAuODA4KTtcclxuICBib3JkZXI6IHNvbGlkIDAuNXB4O1xyXG59XHJcblxyXG4udW5hY3RpdmU6aG92ZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjA2LCAxOTUsIDIyMyk7XHJcbiAgICBib3JkZXI6IHNvbGlkIDAuNXB4O1xyXG59ICBcclxuXHJcbi5leGFtcGxlLWNhcmQge1xyXG4gIG1heC13aWR0aDogNDAwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YxZWZmODtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIFxyXG59XHJcblxyXG4uZXhhbXBsZS1jYXJkOmhvdmVye1xyXG4gIFxyXG4gIGJhY2tncm91bmQtY29sb3I6IGRhcmtncmF5O1xyXG4gIH1cclxuICAubWF0LWNhcmQtdGl0bGUge1xyXG4gICAgZm9udC1zaXplOjE1cHggIWltcG9ydGFudDtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDAgIWltcG9ydGFudDtcclxufVxyXG4gIFxyXG4ucGFuZWx7XHJcbiAgaGVpZ2h0OjEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5idG4tY2lyY2xlLmJ0bi1sZyB7XHJcbiAgd2lkdGg6IDcwcHg7XHJcbiAgaGVpZ2h0OiA3MHB4O1xyXG4gIHBhZGRpbmc6IDEwcHggMTZweDtcclxuICBib3JkZXItcmFkaXVzOiAzNXB4O1xyXG4gIGZvbnQtc2l6ZTogMjRweDtcclxuICBsaW5lLWhlaWdodDogMS4zMztcclxufVxyXG5cclxuLmJ0bi1jaXJjbGUge1xyXG4gIHdpZHRoOiAzMHB4O1xyXG4gIGhlaWdodDogMzBweDtcclxuICBwYWRkaW5nOiA2cHggMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBsaW5lLWhlaWdodDogMS40Mjg1NztcclxufVxyXG4uZWxsaXBzaXMge1xyXG5tYXgtd2lkdGg6IDQwcHg7XHJcbnRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG5vdmVyZmxvdzogaGlkZGVuO1xyXG53aGl0ZS1zcGFjZTogbm93cmFwO1xyXG59XHJcblxyXG4uZXhhbXBsZS1jb250YWluZXIge1xyXG53aWR0aDogNDAwcHg7XHJcbm1heC13aWR0aDogMTAwJTtcclxubWFyZ2luOiAwIDI1cHggMjVweCAwO1xyXG5kaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbnZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbn1cclxuXHJcbi5leGFtcGxlLWxpc3Qge1xyXG5ib3JkZXI6IHNvbGlkIDFweCAjY2NjO1xyXG5taW4taGVpZ2h0OiA2MHB4O1xyXG5iYWNrZ3JvdW5kOiB3aGl0ZTtcclxuYm9yZGVyLXJhZGl1czogNHB4O1xyXG5vdmVyZmxvdzogaGlkZGVuO1xyXG5kaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmV4YW1wbGUtYm94IHtcclxucGFkZGluZzogMjBweCAxMHB4O1xyXG5ib3JkZXItYm90dG9tOiBzb2xpZCAxcHggI2NjYztcclxuY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7XHJcbmRpc3BsYXk6IGZsZXg7XHJcbmZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbmp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuY3Vyc29yOiBtb3ZlO1xyXG5iYWNrZ3JvdW5kOiB3aGl0ZTtcclxuZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG4uY2RrLWRyYWctcHJldmlldyB7XHJcbmJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbmJvcmRlci1yYWRpdXM6IDRweDtcclxuYm94LXNoYWRvdzogMCA1cHggNXB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjIpLFxyXG4gICAgICAgICAgICAwIDhweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTQpLFxyXG4gICAgICAgICAgICAwIDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG59XHJcblxyXG4uY2RrLWRyYWctcGxhY2Vob2xkZXIge1xyXG5vcGFjaXR5OiAwO1xyXG59XHJcblxyXG4uY2RrLWRyYWctYW5pbWF0aW5nIHtcclxudHJhbnNpdGlvbjogdHJhbnNmb3JtIDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjIsIDEpO1xyXG59XHJcblxyXG4uZXhhbXBsZS1ib3g6bGFzdC1jaGlsZCB7XHJcbmJvcmRlcjogbm9uZTtcclxufVxyXG5cclxuLmV4YW1wbGUtbGlzdC5jZGstZHJvcC1saXN0LWRyYWdnaW5nIC5leGFtcGxlLWJveDpub3QoLmNkay1kcmFnLXBsYWNlaG9sZGVyKSB7XHJcbnRyYW5zaXRpb246IHRyYW5zZm9ybSAyNTBtcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yLCAxKTtcclxufVxyXG5cclxuXHJcbi52YWx1ZUNoYW5nZXJJY29uIHtcclxuICAgIGNvbG9yOiByZ2IoMTM5LCAxMzksIDEzOSk7XHJcbn1cclxuXHJcbi5wcm9qZWN0SW5mb0F0dHJpYnV0ZUZvcm0ge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhcmtncmF5IHNvbGlkO1xyXG59XHJcblxyXG4uYm9yZGVyQ2FyZCB7XHJcbiAgYm9yZGVyOiAzcHg7XHJcbiAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLmNpcmNsZS10ZXh0LXByaW9yaXR5MS0zIHtcclxuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xyXG4gIGhlaWdodDogNzhweDsgXHJcbiAgd2lkdGg6IDc4cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIGJhY2tncm91bmQ6IHJnYigxODIsIDM5LCA0Nik7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgZm9udDogMzhweCBcImpvc2VmaW4gc2Fuc1wiLCBhcmlhbDtcclxufVxyXG5cclxuLmNpcmNsZS10ZXh0LXByaW9yaXR5NC02IHtcclxuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xyXG4gIGhlaWdodDogNzhweDsgXHJcbiAgd2lkdGg6IDc4cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIGJhY2tncm91bmQ6IHJnYigyMTgsIDEzNywgMzMpO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGZvbnQ6IDM4cHggXCJqb3NlZmluIHNhbnNcIiwgYXJpYWw7XHJcbn1cclxuXHJcbi5jaXJjbGUtdGV4dC1wcmlvcml0eTctOSB7XHJcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICBoZWlnaHQ6IDc4cHg7IFxyXG4gIHdpZHRoOiA3OHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBiYWNrZ3JvdW5kOiByZ2IoMjM1LCAyMjEsIDI4KTtcclxuICBjb2xvcjogI2ZmZjtcclxuICBmb250OiAzOHB4IFwiam9zZWZpbiBzYW5zXCIsIGFyaWFsO1xyXG59XHJcblxyXG4uY2lyY2xlLXRleHQtcHJpb3JpdHkxMCB7XHJcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICBoZWlnaHQ6IDc4cHg7IFxyXG4gIHdpZHRoOiA3OHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBiYWNrZ3JvdW5kOiAjMUVBNjlBO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGZvbnQ6IDM4cHggXCJqb3NlZmluIHNhbnNcIiwgYXJpYWw7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"col-md-2 col-lg-1 col-sm-2 col-xs-3\\\">\\r\\n          <div class=\\\"media-main\\\">\\r\\n            <a class=\\\"pull-left\\\">\\r\\n              <div *ngIf=\\\"project?.priority < 4\\\" class=\\\"circle-text-priority1-3 collapsed\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeProjectPriority\\\"\\r\\n                aria-expanded=\\\"false\\\" id=\\\"projectPriority\\\">\\r\\n                {{ project?.priority }}</div>\\r\\n                <div *ngIf=\\\"project?.priority < 7 && project?.priority > 3\\\" class=\\\"circle-text-priority4-6 collapsed\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeProjectPriority\\\"\\r\\n                aria-expanded=\\\"false\\\" id=\\\"projectPriority\\\">\\r\\n                {{ project?.priority }}</div>\\r\\n                <div *ngIf=\\\"project?.priority < 10 && project?.priority > 6\\\" class=\\\"circle-text-priority7-9 collapsed\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeProjectPriority\\\"\\r\\n                aria-expanded=\\\"false\\\" id=\\\"projectPriority\\\">\\r\\n                {{ project?.priority }}</div>\\r\\n                <div *ngIf=\\\"project?.priority > 10\\\" class=\\\"circle-text-priority10 collapsed\\\" data-toggle=\\\"collapse\\\" href=\\\"#showChangeProjectPriority\\\"\\r\\n                aria-expanded=\\\"false\\\" id=\\\"projectPriority\\\">\\r\\n                {{ project?.priority }}</div>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 col-sm-5 col-xs-7 pull-left\\\">\\r\\n          <!--namn-->\\r\\n          <div class=\\\"info\\\">\\r\\n            <h1 class=\\\"m-l-10\\\" style=\\\"display:inline;\\\">{{project?.name}}</h1>\\r\\n            <br>\\r\\n            <h3 *ngIf=\\\"!active\\\" class=\\\"text-muted m-l-15\\\">Archived</h3>\\r\\n            <h3 *ngIf=\\\"active\\\" class=\\\"text-muted m-l-15\\\">Active</h3>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2 col-xs-2 pull-right\\\">\\r\\n          <!--settings-->\\r\\n          <a type=\\\"button\\\" routerLink=\\\"/projects\\\" class=\\\"btn waves-effect btn-default m-t-5 btn-lg pull-right\\\"><i\\r\\n              class=\\\"glyphicon glyphicon-remove\\\"></i> </a>\\r\\n            <a *ngIf=\\\"active && !waiter\\\" (click)=\\\"changeProjectStatus()\\\" type=\\\"button\\\" class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Archive this project\\\"><i class=\\\"glyphicon glyphicon-folder-close\\\"></i></a>\\r\\n            <a *ngIf=\\\"!active && !waiter\\\" (click)=\\\"changeProjectStatus()\\\" type=\\\"button\\\" class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Reactivate this project\\\"><i class=\\\"glyphicon glyphicon-folder-open\\\"></i></a>\\r\\n            <a *ngIf=\\\"waiter\\\" type=\\\"button\\\" class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\"><mat-spinner [diameter]=\\\"20\\\"></mat-spinner></a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row no-gutters m-t-5\\\">\\r\\n      <div id=\\\"showChangeProjectPriority\\\" class=\\\"panel-collapse collapse\\\" aria-expanded=\\\"false\\\" style=\\\"height: 0px;\\\">\\r\\n        <form #activityForm=\\\"ngForm\\\" (ngSubmit)=\\\"changePriority(activityForm.value)\\\">\\r\\n          <div class=\\\"col-lg-1\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <select type=\\\"text\\\" class=\\\"form-control projectInfoAttributeForm\\\" ngModel name=\\\"NewPrio\\\"\\r\\n                #name=\\\"ngModel\\\">\\r\\n                <option *ngFor=\\\"let project of projects\\\" [value]=\\\"project?.priority\\\" >{{project?.priority}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-3 pull-left\\\">\\r\\n            <button id=\\\"closePrioChange\\\" type=\\\"button\\\" href=\\\"#showChangeProjectPriority\\\" data-toggle=\\\"collapse\\\"\\r\\n              class=\\\"btn btn-danger editable-cancel btn-sm waves-effect m-r-5\\\">\\r\\n              <i class=\\\"mdi mdi-close\\\"></i>\\r\\n            </button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success editable-submit btn-sm waves-effect waves-light\\\">\\r\\n              <i class=\\\"mdi mdi-check\\\"></i>\\r\\n            </button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row m-t-10\\\">\\r\\n      <div class=\\\"col-md-2 col-lg-2 pull-right\\\">\\r\\n        <div class=\\\"panel panel-primary\\\">\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <h4>Projects <i class=\\\"mdi mdi-information-outline m-r-15\\\" data-toggle=\\\"tooltip\\\"\\r\\n              data-placement=\\\"top\\\" title=\\\"The list does only show top 15 prioritized projects\\\"></i></h4>\\r\\n            <div class=\\\"col-xs-12\\\">\\r\\n              <table class=\\\"table table-hover\\\">\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let p of projects | slice:0:15; let i=index\\\">\\r\\n                    <td (click)=\\\"getOneProject(p.id)\\\" routerLink=\\\"/project/{{p.id}}\\\" [ngClass]=\\\"{ 'unactive': !toggle}\\\">\\r\\n                      {{p.name}}</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-10\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <app-graph [projectId]=\\\"id\\\"></app-graph>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"panel panel-body\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <h4 class=\\\"col-md-2 control-label\\\">Trello Tasks</h4>\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control m-t-5\\\" (change)=\\\"getUserTasks($event)\\\">\\r\\n                    <option *ngFor=\\\"let list of boardLists\\\" [value]=\\\"list?.id\\\">\\r\\n                      {{list?.name}}\\r\\n                    </option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-2\\\" *ngFor=\\\"let user of userTaskList\\\">\\r\\n                  <div class=\\\"panel borderCard\\\">\\r\\n                    <div class=\\\"panel-body user-card\\\">\\r\\n                      <div class=\\\"media-main\\\">\\r\\n                        <div class=\\\"info\\\">\\r\\n                          <h4>{{user.userName}}\\r\\n                          </h4>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n                      <p class=\\\"text-muted info-text\\\">\\r\\n                        Tasks </p>\\r\\n                      <hr>\\r\\n                      <div *ngFor=\\\"let item of user.cardNames.slice(0,3)\\\">\\r\\n                        <p>{{item}}</p>\\r\\n                        <hr>\\r\\n                      </div>\\r\\n\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary waves-effect waves-light\\\" data-toggle=\\\"modal\\\"\\r\\n                        data-target=\\\"#myModal\\\" (click)=getTargetedUserTasks(user)>Check\\r\\n                        All Tasks</button>\\r\\n                      <br><br>\\r\\n                    </div> <!-- panel-body -->\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div> <!-- end row -->\\r\\n            </div>\\r\\n          </div><!-- container -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- Users och deras Tasks  -->\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"panel\\\">\\r\\n              <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"container\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <h4 class=\\\"m-t-15\\\" style=\\\"display:inline;\\\">{{project?.name}} Members</h4>\\r\\n                    <a style=\\\"display:inline;\\\" type=\\\"button\\\"  data-toggle=\\\"modal\\\"\\r\\n                    data-target=\\\".user-modal\\\" class=\\\"btn waves-effect btn-default m-t-5 m-b-10 m-r-15 btn-lg pull-right\\\"><i data-toggle=\\\"tooltip\\\"\\r\\n                      data-placement=\\\"top\\\" title=\\\"Add Members to project\\\" class=\\\"mdi mdi-account-switch\\\"></i>\\r\\n                  </a>\\r\\n                  <br>\\r\\n                      <table class=\\\"table table-striped m-t-10\\\">\\r\\n                        <tr *ngFor=\\\"let item of usersToProject\\\">\\r\\n                          <td>\\r\\n                             {{item.fullName}}\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"panel\\\">\\r\\n              <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-10\\\">\\r\\n                    <h4 style=\\\"display:inline;\\\" class=\\\"pull-left\\\">\\r\\n                      {{ project?.name }}</h4>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <h4 style=\\\"display:inline;\\\" class=\\\"pull-right\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Projektets prioritet\\\">\\r\\n                      {{ project?.priority }}</h4>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <br>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <p>{{ project?.description }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row no-gutters\\\">\\r\\n                  <hr>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p>Start date:\\r\\n                      {{ project?.startDate | date: \\\"yyyy-MM-dd\\\" }}\\r\\n                    </p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p>End date:\\r\\n                      {{ project?.endDate | date: \\\"yyyy-MM-dd\\\" }}\\r\\n                    </p>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <p>Projects budget: {{ project?.totalBudget }}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--modals-->\\r\\n<div class=\\\"modal fade user-modal\\\" tabindex=\\\"-1\\\" user=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\r\\n        <h3>Assign users to {{project?.name}}</h3>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"panel panel-deafult\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                  <h3 class=\\\"panel-title\\\">Available</h3>\\r\\n                </div>\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                  <div class=\\\"example-container\\\">\\r\\n                    <div cdkDropList #usersAvailable=\\\"cdkDropList\\\" [cdkDropListData]=\\\"users\\\"\\r\\n                      [cdkDropListConnectedTo]=\\\"[usersToAdd]\\\" class=\\\"example-list\\\" (cdkDropListDropped)=\\\"drop($event)\\\">\\r\\n                      <div class=\\\"example-box\\\" *ngFor=\\\"let user of users\\\" cdkDrag>\\r\\n                        {{user.userName}}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"panel panel-deafult\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                  <h3 class=\\\"panel-title\\\">Assigned</h3>\\r\\n                </div>\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                  <div class=\\\"example-container\\\">\\r\\n                    <div cdkDropList #usersToAdd=\\\"cdkDropList\\\" [cdkDropListData]=\\\"usersToProject\\\"\\r\\n                      [cdkDropListConnectedTo]=\\\"[usersAvailable]\\\" class=\\\"example-list\\\"\\r\\n                      (cdkDropListDropped)=\\\"drop($event)\\\">\\r\\n                      <div class=\\\"example-box\\\" *ngFor=\\\"let item of usersToProject\\\" cdkDrag>\\r\\n                        {{item.userName}}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button class=\\\"btn btn-primary btn-rounded waves-effect waves-light\\\" (click)=\\\"addMembersToProject()\\\"\\r\\n          data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClient, HttpRequest, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { log } from 'util';\r\nimport { Router } from '@angular/router';\r\nimport { ProjectService } from '../../_services/project.service';\r\nimport { AdminService } from '../../_services/admin.service';\r\nimport { ShowOnDirtyErrorStateMatcher, MatDialog } from '@angular/material';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DragDropModule, moveItemInArray, CdkDragDrop, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport {TaskListModalComponent} from '../task-List-Modal/task-List-Modal.component';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.css']\r\n})\r\nexport class ProjectComponent implements OnInit {\r\n\r\n  projects:any = [];\r\n  sortedProjects: any;\r\n  project: any;\r\n  model: any = {};\r\n  id: any;\r\n  usersToProject: any = [];\r\n  projectId: any; //! ANVÄNDS TILL ?\r\n  users: any=[];\r\n  toggle = true; //! ANVÄNDS TILL ?\r\n  targetedProjectId: any;\r\n  userTaskList: any;\r\n  boardLists: any = [];\r\n  personalTasks: any;\r\n  active: boolean;\r\n  waiter: boolean = false;\r\n\r\n  constructor(public _authService: AuthService, public dialog: MatDialog, private _http: HttpClient, private _projectService: ProjectService, \r\n    private _adminService: AdminService, private _activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n      this.getStartProject();\r\n      this.getAllUsers()\r\n      this.getAllProjects();  \r\n      this.showProjectMembers();\r\n      this.getBoardLists();\r\n  }\r\n\r\n  \r\n  getAllProjects(){\r\n    this._adminService.getAllProjects().subscribe(data => {\r\n      this.projects = data;\r\n      this.projects.sort((n1, n2)=> {\r\n        if(n1.priority > n2.priority) {\r\n          return 1;\r\n        } else if(n1.priority < n2.priority) {\r\n          return -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async changePriority(value) {\r\n    value.ProjectId = this.id;\r\n    value.OldPrio = this.project.priority;\r\n    this._projectService.changePriority(value).subscribe();\r\n    await this.delay(500);\r\n    document.getElementById('closePrioChange').click();\r\n    this.getStartProject();\r\n    this.getAllProjects();\r\n  }\r\n\r\n  getOneProject(id: string){\r\n    this._adminService.getOneProject(id).subscribe(data => {this.project = data, this.active = this.project.active});\r\n    this.id = id;\r\n    this.toggle = !this.toggle;//! ANVÄNDS TILL ?\r\n    this._projectService.getAllCurrentProjectUsers(this.id).subscribe(data => this.usersToProject = data);\r\n    this._projectService.getAllProjectUsers(this.id).subscribe(data => this.users = data);\r\n    this.projectId = this.id; //! ANVÄNDS TILL ?\r\n    this.getBoardLists();\r\n    this.userTaskList = [];\r\n  }\r\n\r\n  getStartProject(){\r\n    this._activatedRoute.params.subscribe(params => { this.id = params['id']; });\r\n    this._adminService.getOneProject(this.id).subscribe(data => {this.project = data, this.active = this.project.active});\r\n  }\r\n\r\n  showProjectMembers() {\r\n  this._projectService.getAllCurrentProjectUsers(this.id).subscribe(data => this.usersToProject = data);\r\n  this._projectService.getAllProjectUsers(this.id).subscribe(data => this.users = data);\r\n  }\r\n\r\n  getAllUsers() {\r\n    this._adminService.getAllUsers()\r\n        .subscribe(data => this.users = [data]);\r\n    }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data,\r\n                        event.container.data,\r\n                        event.previousIndex,\r\n                        event.currentIndex);\r\n    }\r\n  }\r\n\r\n  addMembersToProject() {\r\n    if (this.usersToProject.length < 1 ) {\r\n    } \r\n    else {\r\n      this._projectService.addUsersToProject(this.id, this.usersToProject).subscribe();\r\n    }\r\n  }\r\n\r\n  getBoardLists(){\r\n    this._projectService.getBoardLists(this.id).subscribe(data => this.boardLists = data);\r\n  }\r\n\r\n  getUserTasks(e: any){\r\n    const idFromList = e.target.value;\r\n    this._projectService.getUserTasks(this.id, idFromList).subscribe(data => this.userTaskList = data);\r\n  }\r\n\r\n  changeProjectStatus()\r\n  {\r\n    this._projectService.changeActiveBool(this.project.id).subscribe();\r\n    this.loader();\r\n  }\r\n\r\n  async loader()\r\n  {\r\n    this.waiter = true;\r\n    await this.delay(1000);\r\n    this.active = !this.active;\r\n    this.waiter = false;\r\n  }\r\n\r\n  async changeProjectName()\r\n  {\r\n    // this.customer.customer.name = this.model.name;\r\n    // this._customerService.editCustomer(this.customer.customer).subscribe();\r\n    // document.getElementById(\"customerName\").click();\r\n    // await this.delay(500);\r\n    // this.GetCustomer();\r\n    // this.model = {};\r\n  }\r\n\r\n  private delay(ms: number)\r\n  {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  getTargetedUserTasks(value: any){\r\n    this.personalTasks = value;\r\n    this.openPersonalTasks();\r\n  }\r\n  \r\n  // getTargetedUserTasks(user)\r\n  openPersonalTasks(): void {\r\n    let dialogRef = this.dialog.open(TaskListModalComponent,  {\r\n  data: {\r\n    datakey: this.personalTasks.cardNames\r\n  }\r\n    });\r\n  }\r\n  \r\n}\r\n","module.exports = \".mat-raised-button{\\r\\n  margin: 5px;\\r\\n}\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n.no-records {\\r\\n  height: 48px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  background: white;\\r\\n}\\r\\n.priority {\\r\\n  font-size: 24px;\\r\\n}\\r\\n.btn-padding {\\r\\n  padding-left: 2px;\\r\\n  padding-right: 2px;\\r\\n}\\r\\n.progress{\\r\\n  height: 2rem;\\r\\n}\\r\\n.estimated{\\r\\n  background-color: #F3A09E;\\r\\n}\\r\\n.usedTime{\\r\\n  background-color: #3ABAAF;\\r\\n}\\r\\np.inside{\\r\\n  font-size: 15px;\\r\\n  margin-top: 3px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvamVjdC9wcm9qZWN0cy9wcm9qZWN0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFFQTtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixpQkFBaUI7QUFDbkI7QUFFQTtFQUNFLGVBQWU7QUFDakI7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UseUJBQXlCO0FBQzNCO0FBQ0E7RUFDRSx5QkFBeUI7QUFDM0I7QUFDQTtFQUNFLGVBQWU7RUFDZixlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvcHJvamVjdC9wcm9qZWN0cy9wcm9qZWN0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1yYWlzZWQtYnV0dG9ue1xyXG4gIG1hcmdpbjogNXB4O1xyXG59XHJcbnRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm5vLXJlY29yZHMge1xyXG4gIGhlaWdodDogNDhweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZDogd2hpdGU7XHJcbn1cclxuXHJcbi5wcmlvcml0eSB7XHJcbiAgZm9udC1zaXplOiAyNHB4O1xyXG59XHJcblxyXG4uYnRuLXBhZGRpbmcge1xyXG4gIHBhZGRpbmctbGVmdDogMnB4O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDJweDtcclxufVxyXG4ucHJvZ3Jlc3N7XHJcbiAgaGVpZ2h0OiAycmVtO1xyXG59XHJcbi5lc3RpbWF0ZWR7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0YzQTA5RTtcclxufVxyXG4udXNlZFRpbWV7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNBQkFBRjtcclxufVxyXG5wLmluc2lkZXtcclxuICBmb250LXNpemU6IDE1cHg7XHJcbiAgbWFyZ2luLXRvcDogM3B4O1xyXG59Il19 */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h2 class=\\\"m-b-30 m-t-0 m-l-10\\\">Projects </h2>\\r\\n      <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\">\\r\\n        <div class=\\\"panel panel-primary\\\">\\r\\n          <br>\\r\\n          <div class=\\\"col-md-10\\\">\\r\\n            <div fxLayout fxLayoutAlign=\\\"left\\\" class=\\\"m-l-15\\\">\\r\\n              <mat-form-field fxFlex=\\\"40%\\\">\\r\\n                <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-2 pull-right\\\">\\r\\n            <a type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\".addProject-modal\\\"\\r\\n              class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\"><i class=\\\"mdi mdi-chart-line\\\"></i></a>\\r\\n            <a *ngIf=\\\"showActive && !waiter\\\" (click)=\\\"getAllArchivedProjects()\\\" type=\\\"button\\\" class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Show Archived Projects\\\"><i class=\\\"glyphicon glyphicon-folder-close\\\"></i></a>\\r\\n            <a *ngIf=\\\"!showActive && !waiter\\\" (click)=\\\"getAllUnarchivedProjects()\\\" type=\\\"button\\\" class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Show Active Projects\\\"><i class=\\\"glyphicon glyphicon-folder-open\\\"></i></a>\\r\\n            <a *ngIf=\\\"waiter\\\" type=\\\"button\\\" class=\\\"btn waves-effect btn-default m-t-5 m-r-15 btn-lg pull-right\\\"><mat-spinner [diameter]=\\\"20\\\"></mat-spinner></a>\\r\\n          </div>\\r\\n\\r\\n          <table mat-table class=\\\"table\\\" [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"priority\\\"\\r\\n            matSortDirection=\\\"asc\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n              <ng-container matColumnDef=\\\"priority\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\\\"font-size:14px;\\\"> Priority</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"text-align:right;\\\">\\r\\n\\r\\n                  <div style=\\\"cursor:pointer\\\" (click)=\\\"selectedProject(element.id)\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                        <h3 class=\\\"pull-left\\\">{{element.name}}</h3>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-2 pull-right\\\">\\r\\n                        <h4 class=\\\"priority\\\">{{element.priority}}</h4>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\" col-lg-6 col-md-12 col-xs-12\\\">\\r\\n                        <div class=\\\"row no-gutters\\\">\\r\\n                          <h4 class=\\\"pull-left\\\" style=\\\"padding-left: 10px;\\\">Hours left of total budget: {{element.estimatedTimeOver * -1}}</h4>\\r\\n                        </div>\\r\\n                        \\r\\n                        \\r\\n                        <!-- <p data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Used Time / Estimated Time\\\">\\r\\n                          <ngb-progressbar type=\\\"success\\\" [value]=\\\"element.usedTime\\\" [max]=\\\"element.estimatedTime\\\"height=\\\"1.75rem\\\">\\r\\n                          </ngb-progressbar >\\r\\n                        </p> -->\\r\\n                        <div *ngIf=\\\"element.estimatedTime <= element?.totalBudget \\\">\\r\\n                          <div class=\\\"progress\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Used Time / Estimated Time / Budget time \\\">\\r\\n                            <div class=\\\"progress-bar usedTime\\\" role=\\\"progressbar\\\"  [ngStyle]=\\\"{width:element.usedTime/element?.totalBudget | percent:'1.0-1'}\\\"></div>\\r\\n                           <div class=\\\"progress-bar estimated\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{width:element.estimatedTime/element?.totalBudget| percent:'1.0-1'}\\\"></div>\\r\\n                        </div>\\r\\n                        </div>\\r\\n                        \\r\\n\\r\\n                        <div *ngIf=\\\"element.estimatedTime > element?.totalBudget \\\">\\r\\n                          <div class=\\\"warning\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Estimated Time Is Over Budget Time\\\">\\r\\n                              <span class=\\\"fa fa-warning \\\" style=\\\"font-size:25px;color:red\\\"></span>\\r\\n                              <ngb-progressbar type=\\\"danger\\\" [value]=\\\"element.estimatedTimeOver\\\" [max]=\\\"element.estimatedTime\\\"height=\\\"1.75rem\\\"><p class=\\\"inside\\\">{{element.estimatedTimeOver}}</p>\\r\\n                              </ngb-progressbar>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                      </div>\\r\\n                      <div class=\\\"col-lg-2 col-md-4 col-xs-4 text-center\\\">\\r\\n                        <h4>Start date</h4>\\r\\n                        <p>{{element?.startDate | date: \\\"yyyy-MM-dd\\\"}}</p>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-lg-2 col-md-4 col-xs-4 text-center\\\">\\r\\n                        <h4>Deadline</h4>\\r\\n                        <p>{{element?.endDate | date: \\\"yyyy-MM-dd\\\"}}</p>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-lg-2 col-md-4 col-xs-4 text-center\\\">\\r\\n                        <h4>Customer</h4>\\r\\n                        <p>{{element.customerName }}</p>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-9\\\">\\r\\n                      <h4 class=\\\"pull-left\\\">Medverkande: <small style=\\\"overflow: hidden;\\\">{{ element.allMembers }}</small></h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-3\\\">\\r\\n                      <button mat-raised-button color=\\\"\\\" style=\\\"background-color: #5CB45B; color: white;\\\" (click)=\\\"goToTrelloBoard(element.trelloUrl)\\\">Trello</button>\\r\\n                      <button mat-raised-button color=\\\"\\\" style=\\\"background-color: #2286F5; color: white;\\\" (click)=\\\"goToToggl(element.togglUrl)\\\">Toggl</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </div>\\r\\n          </table>\\r\\n          <div *ngIf=\\\"noData | async\\\" class=\\\"no-records\\\">\\r\\n            No projects found\\r\\n          </div>\\r\\n          <mat-paginator [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\" showFirstLastButtons></mat-paginator>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade addProject-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button id=\\\"closeProjectModal\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\r\\n      </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n          <h2 class=\\\"m-t-0 m-b-30\\\">Create new project</h2>\\r\\n          <form #projectForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" name=\\\"projectForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-md-10\\\"><label>Name</label>\\r\\n                <input type=\\\"text\\\" required minlength=\\\"2\\\" maxlength=\\\"25\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"project.Name\\\" name=\\\"projectName\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"checkbox checkbox-primary checkbox-single\\\">\\r\\n              <input type=\\\"checkbox\\\" id=\\\"singleCheckbox2\\\" value=\\\"option2\\\" (change)=\\\"toggleTrello()\\\"\\r\\n                aria-label=\\\"Single checkbox Two\\\">\\r\\n              <label><b>Include Trello</b></label>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-md-10\\\">\\r\\n                <label>Board name</label>\\r\\n                <input type=\\\"text\\\" required minlength=\\\"2\\\" maxlength=\\\"35\\\" [disabled]=\\\"includeTrello\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"project.TrelloBoardName\\\"\\r\\n                  name=\\\"trelloboard\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-md-10\\\"><label>Customer</label>\\r\\n                <select type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"project.CustomerId\\\" name=\\\"customer\\\" #customer=\\\"ngModel\\\"\\r\\n                  (change)=\\\"getAllContactsForSelectedCustomer($event.target.value)\\\">\\r\\n                  <option *ngFor=\\\"let customer of customers\\\" [value]=\\\"customer?.id\\\">{{customer?.name}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-md-10\\\"><label>Contactperson</label>\\r\\n                <select type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"project.ResponsibleContactpersonId\\\" name=\\\"contactPerson\\\"\\r\\n                  #customer=\\\"ngModel\\\">\\r\\n                  <option *ngFor=\\\"let contact of contacts\\\" [value]=\\\"contact?.id\\\">{{contact?.name}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-md-10\\\"><label>Project Responsible</label>\\r\\n                <select type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"project.ResponsibleUserId\\\" name=\\\"projectResponsible\\\"\\r\\n                  #customer=\\\"ngModel\\\">\\r\\n                  <option *ngFor=\\\"let user of users\\\" [value]=\\\"user.id\\\">{{user.userName}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-md-10\\\"><label>Start Date</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" #dp=\\\"bsDatepicker\\\" bsDatepicker [(bsValue)]=\\\"project.StartDate\\\"\\r\\n                  value=\\\"{{ project.StartDate | date:'yyyy-MM-dd' }}\\\" name=\\\"startDate\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-md-10\\\"> <label>Deadline</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" #dp=\\\"bsDatepicker\\\" bsDatepicker [(bsValue)]=\\\"project.EndDate\\\"\\r\\n                  value=\\\"{{ project.EndDate | date:'yyyy-MM-dd' }}\\\" name=\\\"deadline\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-md-10\\\"><label>Total Budget</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"project.TotalBudget\\\" name=\\\"TotalBudget\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-md-10\\\"><label>Project description</label>\\r\\n                <textarea class=\\\"form-control\\\" required minlength=\\\"0\\\" maxlength=\\\"5000\\\" rows=\\\"5\\\" style=\\\"resize: none;\\\" [(ngModel)]=\\\"project.Description\\\"\\r\\n                  name=\\\"projectDescription\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <swal #createProjectSwal title=\\\"Create Project confirmation\\\" text=\\\"Are you sure you want to create {{project.name}}\\\"\\r\\n              type=\\\"question\\\" [showCancelButton]=\\\"true\\\" [focusCancel]=\\\"true\\\" (confirm)=\\\"createProject()\\\">\\r\\n            </swal>\\r\\n            <button [disabled]=\\\"!projectForm.valid\\\" class=\\\"btn-primary btn-lg btn-block\\\" (click)=\\\"createProjectSwal.show()\\\"> Create Project </button>\\r\\n          </form>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProjectService } from '../../_services/project.service';\r\nimport { AdminService } from '../../_services/admin.service';\r\nimport { iProject } from '../../_models/iProject';\r\nimport { map } from \"rxjs/operators\";\r\nimport { MatPaginator, MatTableDataSource, MatSort, MatSortModule, MatFormFieldModule, MatInputModule } from '@angular/material';\r\nimport { CustomerService } from 'src/app/_services/customer.service';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.css']\r\n})\r\nexport class ProjectsComponent implements OnInit, AfterViewInit {\r\n  displayedColumns: string[] = [\"priority\"];\r\n  dataSource = new MatTableDataSource<iProject>();\r\n  noData = this.dataSource.connect().pipe(map(data => data.length === 0));\r\n  includeTrello = true;\r\n  customers: any;\r\n  contacts: any;\r\n  project: any = {};\r\n  users: any;\r\n  waiter: boolean = false;\r\n  showActive: boolean = true;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(public _authService: AuthService, private _customerService: CustomerService, private projectService: ProjectService,\r\n    private adminService: AdminService, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllProjects();\r\n    this.getUsers();\r\n    this.getAllCustomers();\r\n  }\r\n  \r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  };\r\n  \r\n  getAllProjects() {\r\n    this.adminService.getProjectList().subscribe(res => {\r\n      this.dataSource.data = res as iProject[];\r\n    });\r\n  }\r\n\r\n  getAllUnarchivedProjects() {\r\n    this.adminService.getProjectList().subscribe(res => {\r\n      this.dataSource.data = res as iProject[];\r\n    });\r\n    this.loader();\r\n  }\r\n\r\n  getAllArchivedProjects() {\r\n    this.adminService.getUnactiveProjectList().subscribe(res => {\r\n      this.dataSource.data = res as iProject[];\r\n    });\r\n    this.loader();\r\n  }\r\n\r\n  async loader()\r\n  {\r\n    this.waiter = true;\r\n    await this.delay(1000);\r\n    this.showActive = !this.showActive;\r\n    this.waiter = false;\r\n  }\r\n\r\n  selectedProject(projectId: any) {\r\n    this._router.navigateByUrl(\"project/\" + projectId);\r\n  }\r\n\r\n  goToTrelloBoard(url: any) {\r\n    if(url == null || url == \"\")\r\n    {\r\n      console.log(\"No Trelloboard for this project\");\r\n    }\r\n    else\r\n      window.open(url);\r\n  }\r\n\r\n  goToToggl(url: any){\r\n    if(url == null || url == \"\")\r\n    {\r\n      console.log(\"No Toggl for this project\");\r\n    }\r\n    else\r\n      window.open(url);\r\n  }\r\n\r\n  //___________________________________________________________________________________________________________\r\n\r\n  async createProject() {\r\n    this.project.includeTrello = !this.includeTrello;\r\n    this.projectService.createProject(this.project).subscribe(res => {\r\n      document.getElementById(\"closeProjectModal\").click();\r\n      this._router.navigateByUrl(\"project/\" + (res));\r\n    });\r\n  }\r\n\r\n  toggleTrello() {\r\n    this.includeTrello = !this.includeTrello;\r\n    return;\r\n  }\r\n\r\n  getUsers() {\r\n    this.adminService.getAllUsers().subscribe(data => this.users = data);\r\n  }\r\n\r\n  getAllCustomers() {\r\n    this._customerService.getAllCustomersForOrganization().subscribe(data => this.customers = data);\r\n  }\r\n\r\n  getAllContactsForSelectedCustomer(customerId) {\r\n    this._customerService.getContactpersonsByCustomerId(customerId).subscribe(data => this.contacts = data);\r\n  }\r\n\r\n  private delay(ms: number)\r\n    {\r\n      return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n  /*   SelectedProject(iProject) {\r\n      console.log(iProject);\r\n      for (let i = 0; i < this.dataSource.data.length; i++) {\r\n        if (this.dataSource.data[i].id== iProject) {\r\n          console.log(this.dataSource.data[i].priority);\r\n          console.log(this.dataSource.data[i].endDate);\r\n          console.log(this.dataSource.data[i].budget);\r\n          console.log(this.dataSource.data[i].id);\r\n          //! ROUTA MED ID\r\n          this._router.navigateByUrl(\"project/\" + this.dataSource.data[i].id);\r\n        }\r\n      }\r\n    }\r\n  \r\n   public postBoard() {\r\n      const boardName = (document.getElementById('boardName') as HTMLInputElement).value;\r\n      const choosenType = (document.getElementById('choosenType1') as HTMLInputElement).value;\r\n  \r\n      const uri = 'https://api.trello.com/1/boards/?name=' + boardName + '&defaultLabels=true&defaultLists=true&keepFromSource=' + choosenType + \r\n      '&prefs_permissionLevel=private&prefs_voting=disabled&prefs_comments=members&prefs_invitations=members&prefs_selfJoin=true&prefs_cardCovers=true&prefs_background=blue&prefs_cardAging=regular&key=9dc5e140e89bd1ff02b261a4ebeaf519&token=6469b110f8d594da9783fed645a2a3753ee6920dcfe0c40ef38e61bdaf8454c1';\r\n      this._boardService.postTrelloBoard(uri).subscribe(next => {\r\n        console.log('Post succeded');\r\n      });\r\n  \r\n    }\r\n  \r\n    public archiveBoard() {\r\n      const choosenBoardId = ((document.getElementById('boardToArchive') as HTMLInputElement).value);\r\n      const uri = 'https://api.trello.com/1/boards/' + choosenBoardId +\r\n       '?closed=true&key=9dc5e140e89bd1ff02b261a4ebeaf519&token=6469b110f8d594da9783fed645a2a3753ee6920dcfe0c40ef38e61bdaf8454c1';\r\n      this._boardService.archiveTrelloBoard(uri).subscribe(\r\n        () => console.log('Board has been archived')\r\n      );\r\n    }*/\r\n\r\n\r\n  // ! Används inte\r\n  /* getValues() {\r\n       const getUri = 'https://api.trello.com/1/members/me/boards?key=8647cda40947c5f59daaa1c3f5173a1a&token=5e73a3d20653d1e9f97812fa1572a61499b84ffd6954f1b33f4f93d69fd0fdff';\r\n \r\n       this.http.get(getUri).subscribe(response => {\r\n         this.values = response;\r\n       }, error => {\r\n         console.log(error);\r\n       });\r\n \r\n     }*/\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvdGFzay1MaXN0LU1vZGFsL3Rhc2stTGlzdC1Nb2RhbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h2 mat-dialog-title> Tasks </h2>\\r\\n<br>\\r\\n<mat-dialog-content>\\r\\n  <div *ngFor=\\\"let item of data.datakey\\\">   <p> {{item}}</p> <br> </div>\\r\\n\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n  <div><button mat-raised-button (click)=\\\"close()\\\"> Close </button></div>\\r\\n</mat-dialog-actions>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-task-List-Modal',\r\n  templateUrl: './task-List-Modal.component.html',\r\n  styleUrls: ['./task-List-Modal.component.css']\r\n})\r\nexport class TaskListModalComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<TaskListModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { \r\n\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}